{"version":3,"sources":["dhcp.jsx"],"names":["Servers","props","changeServer","svr","setState","content","List","key","server_id","listItem","row","node","service","id","onClick","title","state","post_call","type","then","result","header","thead","trows","this","data","Component"],"mappings":"qNAOaA,EAAb,kDACC,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IAIPC,aAAe,SAACC,GAAD,OAAS,EAAKC,SAAS,CAACC,QAAQ,kBAACC,EAAD,CAAMC,IAAK,aAAaJ,EAAKK,UAAWL,OALrE,EAWlBM,SAAW,SAACC,GAAD,MAAS,CAACA,EAAIC,KAAKD,EAAIE,QAAQ,kBAAC,aAAD,CAAYL,IAAK,iBAAiBG,EAAIG,GAAIC,QAAS,kBAAM,EAAKZ,aAAaQ,EAAIG,KAAKE,MAAM,sCATnI,EAAKC,MAAQ,CAACX,QAAQ,MAFL,EADnB,gEAQqB,IAAD,OAClBY,YAAU,yBAAyB,CAACC,KAAK,SAASC,MAAK,SAAAC,GAAM,OAAI,EAAKhB,SAASgB,QATjF,+BAeE,OAAO,kBAAC,WAAD,CAAUb,IAAI,iBACpB,kBAAC,cAAD,CAAaA,IAAI,UAAUc,OAAO,UAAUC,MAAO,CAAC,OAAO,UAAU,OAAO,IAAKC,MAAOC,KAAKR,MAAMS,KAAMhB,SAAUe,KAAKf,WACxH,kBAAC,cAAD,CAAaF,IAAI,WAAWiB,KAAKR,MAAMX,cAjB1C,GAA6BqB,aAwBvBpB,E,kDACL,WAAYL,GAAO,IAAD,8BACjB,cAAMA,IACDe,MAAQ,GAFI,E,qDAMjB,OAAO,wC,GAPUU","file":"static/js/14.bec29dab.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { ContentList, ContentData } from './infra/UI.jsx';\nimport { InfoButton } from './infra/Buttons.jsx';\n\n// ************** Server **************\n//\nexport class Servers extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:null}\n }\n\n changeServer = (svr) => this.setState({content:<List key={'dhcp_list_'+svr} server_id={svr} />})\n\n componentDidMount(){\n  post_call('api/master/server_list',{type:'DHCP'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.service,<InfoButton key={'dhcp_btn_info_'+row.id} onClick={() => this.changeServer(row.id)} title='DHCP server allocated addresses' />]\n\n render(){\n  return <Fragment key='dhcp_fragment'>\n   <ContentList key='dhcp_cl' header='Servers' thead={['Node','Service','Type','']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='dhcp_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// *************** List ***************\n//\nclass List extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n render() {\n  return <div>TBD</div>\n }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["user.jsx"],"names":["List","props","listItem","row","id","alias","name","onClick","changeContent","Info","title","deleteList","window","confirm","post_call","then","result","deleted","setState","data","state","filter","header","thead","trows","this","componentDidMount","mountUpdate","fun","Component","onChange","e","target","value","updateInfo","update","password_check","context","settings","changeTheme","theme","op","found","prevProps","themes","text","placeholder","class","classes","map","label","email","contextType","RimsContext","User","style","justifyContent"],"mappings":"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","file":"static/js/24.d0bde7a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Flex, Spinner, InfoArticle, InfoColumns, ContentList, ContentData, Result } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput, TextLine, PasswordInput, SelectInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/user_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.alias,row.name,<>\n   <ConfigureButton key='config' onClick={() => this.changeContent(<Info key='user_info' id={row.id} />)} title='Edit user' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete user' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete user?') && post_call('api/master/user_delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Users' thead={['ID','Alias','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='user_info' id='new' />)} title='Add user' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props){\n   post_call('api/master/user_info',{id:this.props.id}).then(result => this.setState(result))\n  }\n }\n\n componentDidMount(){\n  post_call('api/portal/theme_list').then(result => this.setState({themes:result.data}))\n  post_call('api/master/user_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n updateInfo = () => {\n  this.setState({update:false,password_check:''})\n  if(this.context.settings.id === this.state.data.id)\n   this.context.changeTheme(this.state.data.theme);\n  post_call('api/master/user_info',{op:'update', ...this.state.data},{'X-Log':'false'}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ui_art'>User with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data && this.state.themes){\n   let result = (this.state.update) ? 'OK - updated' : '';\n   return <InfoArticle key='ui_art' header='User'>\n     <InfoColumns key='ui_content'>\n      {(this.context.settings.id === this.props.id) ?  <TextLine key='alias' id='alias' text={this.state.data.alias} /> : <TextInput key='alias' id='alias' value={this.state.data.alias} onChange={this.onChange} />}\n      <PasswordInput key='password' id='password' placeholder='******' onChange={this.onChange} />\n      {this.context.settings.class === 'admin' && <SelectInput key='class' id='class' value={this.state.data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>}\n      <TextInput key='email' id='email' label='E-Mail' value={this.state.data.email} onChange={this.onChange} />\n      <TextInput key='name' id='name' label='Full name' value={this.state.data.name} onChange={this.onChange} />\n      <SelectInput key='theme' id='theme' value={this.state.data.theme} onChange={this.onChange}>{this.state.themes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n     </InfoColumns>\n     <SaveButton key='ui_btn_save' onClick={() => this.updateInfo()} title='Save' />\n     <Result key='ui_operation' result={result} />\n    </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\nInfo.contextType = RimsContext;\n\n// ************** User **************\n//\nexport class User extends Component {\n render() {\n  return <Flex key='flex' style={{justifyContent:'space-evenly'}}><Info key='user_info' id={this.props.id} /></Flex>\n }\n}\n"],"sourceRoot":""}
"use strict";(self.webpackChunkrims_frontend=self.webpackChunkrims_frontend||[]).push([[709],{709:(t,e,i)=>{i.r(e),i.d(e,{Main:()=>r,Report:()=>x});var s=i(43),a=i(524),n=i(662),d=i(97),o=i(728),h=i(307),c=i(579);class r extends s.Component{constructor(t){super(t),this.compileNavItems=()=>this.context.loadNavigation((0,c.jsxs)(h.NavBar,{children:[(0,c.jsxs)(h.NavDropDown,{title:"Activities",children:[(0,c.jsx)(h.NavDropButton,{title:"New",onClick:()=>this.changeContent((0,c.jsx)(p,{id:"new"},"activity_info"))},"act_nav_new"),(0,c.jsx)(h.NavDropButton,{title:"Daily",onClick:()=>this.changeContent((0,c.jsx)(u,{changeSelf:this.changeContent},"activity_daily"))},"act_nav_day"),(0,c.jsx)(h.NavDropButton,{title:"List",onClick:()=>this.changeContent((0,c.jsx)(l,{},"activity_list"))},"act_nav_list")]},"act_nav"),(0,c.jsx)(h.NavButton,{title:"Types",onClick:()=>this.changeContent((0,c.jsx)(C,{},"activity_type_list"))},"act_nav_types"),(0,c.jsx)(h.NavButton,{title:"Report",onClick:()=>this.changeContent((0,c.jsx)(x,{},"activity_report"))},"act_nav_report")]},"activity_navbar")),this.changeContent=t=>this.setState(t),this.state=(0,c.jsx)(u,{changeSelf:this.changeContent},"activity_daily")}componentDidMount(){this.compileNavItems()}componentDidUpdate(t){t!==this.props&&this.compileNavItems()}render(){return(0,c.jsx)(c.Fragment,{children:this.state})}}r.contextType=n.RimsContext;class l extends s.Component{constructor(t){super(t),this.listItem=t=>[t.date+" - "+t.time,(0,c.jsx)(o.HrefButton,{onClick:()=>this.changeContent((0,c.jsx)(p,{id:t.id},"activity")),text:t.type},"info_"+t.id),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(o.InfoButton,{onClick:()=>this.changeContent((0,c.jsx)(p,{id:t.id},"activity_info")),title:"Activity information"},"info"),(0,c.jsx)(o.DeleteButton,{onClick:()=>this.deleteList(t.id),title:"Delete activity"},"del")]})],this.deleteList=t=>window.confirm("Delete activity")&&(0,a.Cc)("api/master/activity_delete",{id:t}).then((e=>{e.deleted&&(this.setState({data:this.state.data.filter((e=>e.id!==t))}),this.changeContent(null))})),this.state={searchfield:""}}componentDidMount(){(0,a.Cc)("api/master/activity_list").then((t=>this.setState(t)))}render(){if(this.state.data){let t=0===this.state.searchfield.length?this.state.data:this.state.data.filter((t=>t.type.includes(this.state.searchfield)));return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.ContentList,{header:"Activities",thead:["Date","Type",""],trows:t,listItem:this.listItem,children:[(0,c.jsx)(o.ReloadButton,{onClick:()=>this.componentDidMount()},"reload"),(0,c.jsx)(o.AddButton,{onClick:()=>this.changeContent((0,c.jsx)(p,{id:"new"},"activity_info")),title:"Add activity"},"add"),(0,c.jsx)(d.SearchField,{searchFire:t=>this.setState({searchfield:t}),placeholder:"Search activities"},"search")]},"cl"),(0,c.jsx)(n.ContentData,{mountUpdate:t=>this.changeContent=t},"cda")]})}return(0,c.jsx)(n.Spinner,{})}}class p extends s.Component{constructor(t){super(t),this.onChange=t=>this.setState({data:{...this.state.data,[t.target.name]:t.target.value}}),this.updateInfo=()=>{(0,a.Cc)("api/master/activity_info",{op:"update",...this.state.data}).then((t=>this.setState(t)))},this.state={data:null}}componentDidUpdate(t){t!==this.props&&(0,a.Cc)("api/master/activity_info",{id:this.props.id}).then((t=>{null===t.data.user_id&&(t.data.user_id=this.context.settings.id),this.setState(t)}))}componentDidMount(){(0,a.Cc)("api/master/activity_info",{id:this.props.id,extras:["types","users"]}).then((t=>{null===t.data.user_id&&(t.data.user_id=this.context.settings.id),this.setState(t)}))}render(){return this.state.data?(0,c.jsxs)(n.InfoArticle,{header:"Activity",children:[(0,c.jsxs)(n.InfoColumns,{children:[(0,c.jsx)(d.TextLine,{id:"id",label:"ID",text:this.state.data.id},"ai_id"),(0,c.jsx)(d.SelectInput,{id:"user_id",label:"User",value:this.state.data.user_id,onChange:this.onChange,children:this.state.users.map(((t,e)=>(0,c.jsx)("option",{value:t.id,children:t.alias},e)))},"ai_user_id"),(0,c.jsx)(d.SelectInput,{id:"type_id",label:"Type",value:this.state.data.type_id,onChange:this.onChange,children:this.state.types.map(((t,e)=>(0,c.jsx)("option",{value:t.id,children:t.type},e)))},"ai_type_id"),(0,c.jsx)(d.DateInput,{id:"date",value:this.state.data.date,onChange:this.onChange},"ai_date"),(0,c.jsx)(d.TimeInput,{id:"time",value:this.state.data.time,onChange:this.onChange},"ai_time")]},"ai_content"),(0,c.jsx)(d.TextAreaInput,{id:"event",value:this.state.data.event,onChange:this.onChange},"ai_event"),(0,c.jsx)(o.SaveButton,{onClick:()=>this.updateInfo(),title:"Save"},"ai_btn_save"),(0,c.jsx)(n.Result,{result:JSON.stringify(this.state.update)},"ai_result")]},"ai_art"):(0,c.jsx)(n.Spinner,{})}}p.contextType=n.RimsContext;class u extends s.Component{constructor(t){super(t),this.changeContent=t=>this.props.changeSelf(t),this.deleteList=t=>window.confirm("Delete activity")&&(0,a.Cc)("api/master/activity_delete",{id:t}).then((e=>{if(e.deleted){const e=this.state.data.findIndex((e=>e.act_id===t)),i=this.state.data[e];Object.assign(i,{user_id:null,event:null,act_id:null}),this.setState({data:this.state.data})}})),this.onChange=t=>{const e=t.target.name,i=t.target.value,s={date:"date"===e?i:this.state.date};(0,a.Cc)("api/master/activity_daily",s).then((t=>this.setState({...t,[e]:i})))},this.syncEvent=(t,e)=>(0,a.Cc)("api/master/activity_info",{op:"update",id:e||"new",user_id:this.state.user_id,type_id:t,event:"auto",date:this.state.date}).then((e=>{if(e.update){const i=this.state.data.findIndex((e=>e.id===t)),s=this.state.data[i];Object.assign(s,{user_id:this.state.user_id,event:"auto",act_id:e.data.id}),this.setState({data:this.state.data})}})),this.listItem=t=>[t.type,t.user_id?this.state.users[t.user_id].alias:"-",t.event?t.event:"-",(0,c.jsxs)(c.Fragment,{children:[!t.user_id&&(0,c.jsx)(o.AddButton,{onClick:()=>this.syncEvent(t.id,t.act_id)},"add"),t.user_id&&t.user_id!==parseInt(this.state.user_id)&&(0,c.jsx)(o.SyncButton,{onClick:()=>this.syncEvent(t.id,t.act_id)},"sync"),t.act_id&&(0,c.jsx)(o.InfoButton,{onClick:()=>this.changeContent((0,c.jsx)(p,{id:t.act_id},"activity_"+t.act_id))},"info"),t.act_id&&(0,c.jsx)(o.DeleteButton,{onClick:()=>this.deleteList(t.act_id)},"del")]})];const e=new Date(Date.now());this.state={data:[],date:e.toISOString().substring(0,10),user_id:void 0,users:{}}}componentDidMount(){(0,a.Cc)("api/master/activity_daily",{extras:["users"]}).then((t=>this.setState({...t,user_id:this.context.settings.id})))}render(){return this.state.data?(0,c.jsxs)(n.ContentReport,{header:"Activities",thead:["Type","User","Event",""],trows:this.state.data,listItem:this.listItem,children:[(0,c.jsx)(o.ReloadButton,{onClick:()=>this.componentDidMount()},"reload"),(0,c.jsx)(d.SelectInput,{id:"user_id",label:"User",value:this.state.user_id,onChange:this.onChange,children:Object.values(this.state.users).map(((t,e)=>(0,c.jsx)("option",{value:t.id,children:t.alias},e)))},"user_id"),(0,c.jsx)(d.DateInput,{id:"date",value:this.state.date,onChange:this.onChange},"date")]},"cr"):(0,c.jsx)(n.Spinner,{})}}u.contextType=n.RimsContext;class x extends s.Component{constructor(t){super(t),this.listItem=t=>[t.date+" - "+t.time,t.user,t.type,t.class,t.event],this.state={}}componentDidMount(){(0,a.Cc)("api/master/activity_list",{group:"month",mode:"full"}).then((t=>this.setState(t)))}render(){return(0,c.jsx)(n.ContentReport,{header:"Activities",thead:["Time","User","Type","Class","Event"],trows:this.state.data,listItem:this.listItem},"act_cr")}}class C extends s.Component{constructor(t){super(t),this.listItem=t=>[t.id,t.type,t.class,(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(o.ConfigureButton,{onClick:()=>this.changeContent((0,c.jsx)(v,{id:t.id},"act_tp")),title:"Edit type information"},"info"),(0,c.jsx)(o.DeleteButton,{onClick:()=>this.deleteList(t.id),title:"Delete type"},"delete")]})],this.deleteList=t=>window.confirm("Really delete type?")&&(0,a.Cc)("api/master/activity_type_delete",{id:t}).then((e=>{e.deleted&&(this.setState({data:this.state.data.filter((e=>e.id!==t))}),this.changeContent(null))})),this.state={}}componentDidMount(){(0,a.Cc)("api/master/activity_type_list").then((t=>this.setState(t)))}render(){return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.ContentList,{header:"Activity Types",thead:["ID","Type","Class",""],trows:this.state.data,listItem:this.listItem,children:[(0,c.jsx)(o.ReloadButton,{onClick:()=>this.componentDidMount()},"reload"),(0,c.jsx)(o.AddButton,{onClick:()=>this.changeContent((0,c.jsx)(v,{id:"new"},"act_tp")),title:"Add activity type"},"add")]},"cl"),(0,c.jsx)(n.ContentData,{mountUpdate:t=>this.changeContent=t},"cda")]})}}class v extends s.Component{constructor(t){super(t),this.onChange=t=>this.setState({data:{...this.state.data,[t.target.name]:t.target.value}}),this.changeContent=t=>this.setState({content:t}),this.updateInfo=()=>(0,a.Cc)("api/master/activity_type_info",{op:"update",...this.state.data}).then((t=>this.setState(t))),this.state={data:null,content:null}}componentDidUpdate(t){t!==this.props&&(0,a.Cc)("api/master/activity_type_info",{id:this.props.id}).then((t=>this.setState(t)))}componentDidMount(){(0,a.Cc)("api/master/activity_type_info",{id:this.props.id}).then((t=>this.setState(t)))}render(){return this.state.data?(0,c.jsxs)(n.InfoArticle,{header:"Activity Type",children:[(0,c.jsxs)(n.InfoColumns,{children:[(0,c.jsx)(d.TextLine,{id:"id",text:this.state.data.id},"id"),(0,c.jsx)(d.TextInput,{id:"type",value:this.state.data.type,onChange:this.onChange,placeholder:"name"},"type"),(0,c.jsx)(d.SelectInput,{id:"class",value:this.state.data.class,onChange:this.onChange,children:this.state.classes.map((t=>(0,c.jsx)("option",{value:t,children:t},t)))},"class")]},"ic"),(0,c.jsx)(o.SaveButton,{onClick:()=>this.updateInfo(),title:"Save"},"save")]},"ia_at"):(0,c.jsx)(n.Spinner,{})}}}}]);
//# sourceMappingURL=709.1f325e13.chunk.js.map
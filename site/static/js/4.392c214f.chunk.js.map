{"version":3,"sources":["location.jsx"],"names":["List","props","changeContent","elem","setState","content","deleteList","id","window","confirm","post_call","then","result","deleted","data","state","filter","row","listItem","name","key","onClick","Info","title","header","thead","trows","this","componentDidMount","rnd","Component","onChange","e","target","value","updateInfo","op","found"],"mappings":"8QAQaA,EAAb,kDACA,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAQPC,cAAgB,SAACC,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAThC,EAUjBG,WAAa,SAACC,GAAD,OAASC,OAAOC,QAAQ,4BAA8BC,YAAU,sBAAuB,CAACH,GAAGA,IAAKI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SAAW,EAAKT,SAAS,CAACU,KAAK,EAAKC,MAAMD,KAAKE,QAAO,SAAAC,GAAG,OAAKA,EAAIV,KAAOA,KAAKF,QAAQ,WAVxM,EAYjBa,SAAW,SAACD,GAAD,MAAS,CAACA,EAAIV,GAAGU,EAAIE,KAAK,kBAAC,WAAD,KACnC,kBAAC,kBAAD,CAAiBC,IAAK,gBAAgBH,EAAIV,GAAIc,QAAS,kBAAM,EAAKnB,cAAc,kBAACoB,EAAD,CAAMF,IAAK,YAAYH,EAAIV,GAAIA,GAAIU,EAAIV,OAASgB,MAAM,kBACtI,kBAAC,eAAD,CAAcH,IAAK,kBAAkBH,EAAIV,GAAIc,QAAS,kBAAM,EAAKf,WAAWW,EAAIV,KAAKgB,MAAM,uBAZ5F,EAAKR,MAAQ,GAFG,EADlB,gEAMqB,IAAD,OAClBL,YAAU,qBAAsBC,MAAK,SAAAC,GAAM,OAAI,EAAKR,SAASQ,QAP/D,+BAmBU,IAAD,OACP,OAAO,kBAAC,WAAD,KACN,kBAAC,cAAD,CAAaQ,IAAI,SAASI,OAAO,YAAYC,MAAO,CAAC,KAAK,OAAO,IAAKC,MAAOC,KAAKZ,MAAMD,KAAMI,SAAUS,KAAKT,UAC5G,kBAAC,eAAD,CAAcE,IAAI,iBAAiBC,QAAS,kBAAM,EAAKO,uBACvD,kBAAC,YAAD,CAAWR,IAAI,cAAcC,QAAS,kBAAM,EAAKnB,cAAc,kBAACoB,EAAD,CAAMF,IAAK,gBAAkBS,cAAOtB,GAAG,UAAWgB,MAAM,kBAExH,kBAAC,cAAD,CAAaH,IAAI,UAAUO,KAAKZ,MAAMV,cAzBzC,GAA0ByB,aAgCbR,EAAb,kDACC,WAAYrB,GAAO,IAAD,8BACjB,cAAMA,IAIP8B,SAAW,SAACC,GAAD,OAAO,EAAK5B,SAAS,CAACU,KAAK,eAAI,EAAKC,MAAMD,KAAhB,eAAuBkB,EAAEC,OAAOd,KAAMa,EAAEC,OAAOC,WALlE,EAOlBhC,cAAgB,SAACC,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAP/B,EASlBgC,WAAa,kBAAMzB,YAAU,oBAAD,aAAsB0B,GAAG,UAAa,EAAKrB,MAAMD,OAAOH,MAAK,SAAAC,GAAM,OAAI,EAAKR,SAASQ,OAPhH,EAAKG,MAAQ,CAACD,KAAK,KAAMuB,OAAM,GAFd,EADnB,gEAYqB,IAAD,OAClB3B,YAAU,oBAAoB,CAACH,GAAGoB,KAAK1B,MAAMM,KAAKI,MAAK,SAAAC,GAAM,OAAI,EAAKR,SAASQ,QAbjF,+BAgBW,IAAD,OACR,OAAKe,KAAKZ,MAAMsB,MAEPV,KAAKZ,MAAMD,KACZ,kBAAC,cAAD,CAAaM,IAAI,cAAcI,OAAO,YAC3C,kBAAC,cAAD,CAAaJ,IAAI,eACjB,kBAAC,YAAD,CAAWA,IAAI,OAAOb,GAAG,OAAO2B,MAAOP,KAAKZ,MAAMD,KAAKK,KAAMY,SAAUJ,KAAKI,YAE5E,kBAAC,aAAD,CAAYX,IAAI,eAAeC,QAAS,kBAAM,EAAKc,cAAcZ,MAAM,UAGlE,kBAAC,UAAD,MATA,kBAAC,cAAD,CAAaH,IAAI,eAAjB,gBAA6CO,KAAK1B,MAAMM,GAAxD,gBAlBV,GAA0BuB","file":"static/js/4.392c214f.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { post_call, rnd } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n listItem = (row) => [row.id,row.name,<Fragment>\n   <ConfigureButton key={'loc_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'location_'+row.id} id={row.id} />)} title='Edit location' />\n   <DeleteButton key={'loc_btn_delete_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </Fragment>\n  ]\n\n render(){\n  return <Fragment>\n   <ContentList key='loc_cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='loc_btn_reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='loc_btn_add' onClick={() => this.changeContent(<Info key={'location_new_' + rnd()} id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='loc_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='loc_removed'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='loc_article' header='Location'>\n     <InfoColumns key='loc_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='loc_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
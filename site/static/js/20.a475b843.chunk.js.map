{"version":3,"sources":["reservation.jsx"],"names":["List","props","extendItem","device_id","user_id","days","post_call","then","result","componentDidMount","deleteItem","dev","user","window","confirm","deleted","setState","data","state","filter","row","changeContent","listItem","buttons","context","settings","id","valid","alias","hostname","end","key","onClick","Info","title","header","thead","trows","this","New","mountUpdate","fun","Component","contextType","RimsContext","onChange","e","target","name","value","updateInfo","op","status","found","text","time_start","time_end","shutdown","options","info","device","findDevice","matching","reserveDevice","undefined","label","placeholder","Report","start","extended"],"mappings":"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","file":"static/js/20.a475b843.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Spinner, InfoArticle, InfoColumns, LineArticle, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SearchButton } from './infra/Buttons.jsx';\nimport { RadioInput, TextInput, TextLine }  from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/reservation/list').then(result => this.setState(result))\n }\n\n extendItem = (device_id,user_id,days) => {\n  post_call('api/reservation/extend',{device_id:device_id, user_id:user_id, days:days}).then(result => this.componentDidMount())\n }\n\n deleteItem = (dev,user) => (window.confirm('Remove reservation?') && post_call('api/reservation/delete',{device_id:dev, user_id:user}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.device_id !== dev))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row) => {\n  const buttons = (this.context.settings.id === row.user_id || !row.valid);\n  return [row.alias,row.hostname,row.end,<>\n   {buttons && <InfoButton key='info' onClick={() => { this.changeContent(<Info key={'rsv_device_'+row.device_id} device_id={row.device_id} user_id={row.user_id} />) }} title='Info'/>}\n   {buttons && <AddButton  key='ext' onClick={() => { this.extendItem(row.device_id,row.user_id,14) }} title='Extend reservation' />}\n   {buttons && <DeleteButton key='del' onClick={() => { this.deleteItem(row.device_id,row.user_id) }} title='Remove reservation' />}\n  </>]\n }\n\n render(){\n  return <>\n   <ContentList key='cl' header='Reservations' thead={['User','Device','Until','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<New key='rsv_new' />)} />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nList.contextType = RimsContext;\n\n// ************** Info **************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidMount(){\n  post_call('api/reservation/info',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  post_call('api/reservation/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n extendItem = (days) => {\n  post_call('api/reservation/extend',{device_id:this.state.data.device_id, user_id:this.state.data.user_id, days:days}).then(result => result.status === 'OK' && this.componentDidMount())\n }\n\n render() {\n  if (this.state.data){\n   return <InfoArticle key='rsv_article' header='Reservation'>\n     <InfoColumns key='reservation_content'>\n      <TextLine key='alias' id='alias' text={this.state.data.alias} />\n      <TextLine key='time_start' id='Start' text={this.state.data.time_start} />\n      <TextLine key='time_end' id='End' text={this.state.data.time_end} />\n      <RadioInput key='shutdown' id='shutdown' value={this.state.data.shutdown} options={[{text:'no',value:'no'},{text:'yes',value:'yes'},{text:'reset',value:'reset'}]} onChange={this.onChange} />\n      <TextInput key='info' id='info' value={this.state.data.info} onChange={this.onChange} />\n     </InfoColumns>\n     {this.state.data.user_id === this.context.settings.id && <SaveButton key='rsv_btn_save' onClick={() => this.updateInfo()} title='Save' />}\n     {this.state.data.user_id === this.context.settings.id && <AddButton key='rsv_btn_extend' onClick={() => this.extendItem(14)} title='Extend' />}\n    </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\nInfo.contextType = RimsContext;\n\n// ************** Report **************\n//\nclass New extends Component {\n constructor(props){\n  super(props)\n  this.state = {device:'',device_id:undefined,matching:''}\n }\n\n onChange = (e) => {\n  this.setState({device:e.target.value});\n }\n\n findDevice = () => post_call('api/device/search',{hostname:this.state.device}).then(result => result.found && this.setState({device_id:result.data.id,matching:result.data.hostname}));\n\n reserveDevice = () => post_call('api/reservation/new',{device_id:this.state.device_id,user_id:this.context.settings.id}).then(result => result.status === 'OK' && this.setState({device:'',device_id:undefined,matching:''}));\n\n render(){\n  return <LineArticle key='rsv_art' header='New reservation'>\n   <TextInput key='device' id='device' label='Search device' onChange={this.onChange} value={this.state.device} placeholder='search' /> found <TextLine key='matching' id='matching device' text={this.state.matching} />\n   {this.state.device && <SearchButton key='rsv_btn_search' onClick={() => this.findDevice()} title='Find device' />}\n   {this.state.device_id && <AddButton key='rsv_btn_new' onClick={() => this.reserveDevice()} title='Reserve device' />}\n   </LineArticle>\n }\n}\nNew.contextType = RimsContext;\n\n// ************** Report **************\n//\nexport class Report extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/reservation/list',{extended:true}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.alias,row.hostname,row.start,row.end,row.info]\n\n render(){\n  return <ContentReport key='rsv_cr' header='Reservations' thead={['User','Device','Start','End','Info']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n"],"sourceRoot":""}
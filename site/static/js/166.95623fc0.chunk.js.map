{"version":3,"file":"static/js/166.95623fc0.chunk.js","mappings":"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","sources":["hypervisor.jsx"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Result, Spinner, StateLeds, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, GoButton, HeaderButton, InfoButton, ItemsButton, PauseButton, RevertButton, ReloadButton, SaveButton, ShutdownButton, SnapshotButton, StartButton, StopButton, SyncButton, UiButton } from './infra/Buttons.jsx';\nimport { SearchField, StateLine, TextInput, TextLine } from './infra/Inputs.jsx';\nimport { NavBar, NavInfo, NavButton } from './infra/Navigation.jsx';\n\nimport { Info as DeviceInfo } from './device.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:'hypervisor',extra:['type','functions','url'],sort:'hostname'}).then(result => this.setState(result))\n }\n\n listItem = (row) => {\n  const up =  (row.ip_state === 'up');\n  return [row.hostname,row.type_name,<>\n   <StateLeds key='state' state={row.ip_state} />\n   {up && row.type_functions === 'manage' && <InfoButton key='info' onClick={() => this.context.changeMain(<Manage key={'hypervisor_manage_'+row.id} device_id={row.id} type={row.type_name} />)} />}\n   {up && row.url && row.url.length > 0 && <UiButton key='ui' onClick={() => window.open(row.url,'_blank') } />}\n   </>]\n }\n\n render(){\n  return <>\n   <ContentList key='cl' header='Hypervisor' thead={['Hostname','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <SyncButton key='sync' onClick={() => this.changeContent(<Sync key='vm_sync' />) } />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Sync **************\n//\nclass Sync extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/vm_mapping',{device_id:this.props.device_id}).then(result => {\n    let entries = [];\n    ['existing','inventory','discovered','database'].forEach(type => {\n     if (result.hasOwnProperty(type))\n      result[type].forEach(entry => { entry.type = type; entries.push(entry); })\n    })\n    this.setState({data:entries})\n   })\n }\n\n listItem = (row) => [row.type,row.host_id,row.device_id,row.vm,row.bios_uuid,row.config]\n\n render(){\n  return <ContentReport key='hyp_cr' header='VM Mapping' thead={['Status','Host','Device','VM Name','Device UUID','Config']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/management',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='hypervisor_navbar'>\n    <NavButton key='hyp_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    {result.data.url && (result.data.url.length > 0) && <NavButton key='hyp_nav_ui' title='UI' onClick={() => window.open(result.data.url,'_blank')} />}\n    <NavInfo key='hyp_nav_name' title={result.data.hostname} />\n   </NavBar>);\n   this.setState({...result,content:<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />});\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <>{this.state.content}</>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {sort:'name', searchfield:''}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id, sort: this.state.sort}).then(result => this.setState(result))\n }\n\n sortList = (method) => {\n  const data = this.state.data;\n  if (method === 'name')\n   data.sort((a,b) => a.name.localeCompare(b.name));\n  else\n   data.sort((a,b) => (a.id - b.id))\n  this.setState({sort:method})\n }\n\n listItem = (row) => [row.id,row.name,<Operation key={'hl_op_'+row.id} vm_id={row.id} device_id={this.props.device_id} type={this.props.type} changeContent={(e) => this.changeContent(e)} state={row.state} />]\n\n render(){\n  if (this.state.data){\n   const searchfield = this.state.searchfield;\n   const data = (searchfield.length === 0) ? this.state.data : this.state.data.filter(row => (row.name.toLowerCase().includes(searchfield)));\n   const thead = [<HeaderButton key='id' text='ID' highlight={(this.state.sort === 'id')} onClick={() => this.sortList('id')} />,<HeaderButton key='vm' text='VM' highlight={(this.state.sort === 'name')} onClick={() => this.sortList('name')} />,'Operations'];\n   return <>\n    <ContentList key='cl' header='Inventory' thead={thead} trows={data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n     <SyncButton key='sync' onClick={() => this.changeContent(<Sync key='vm_sync' device_id={this.props.device_id}/>)} title='Map VMs' />\n     <SearchField key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search inventory' />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component{\n constructor(props){\n  super(props)\n  this.state = {state:this.props.state, status:'',wait:null};\n }\n\n operation = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_op',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n snapshot = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n render(){\n   const on = (this.state.state === 'on');\n   const off = (this.state.state === 'off');\n   return <>\n    <InfoButton key='info' onClick={() => this.props.changeContent(<Info key='hypervisor_info' device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} changeSelf={this.props.changeContent} />)} title='VM info' />\n    {(off || this.state.state === 'suspended')  && <StartButton key='start' onClick={() => this.operation('on')} title={this.state.status} />}\n    {on && <StopButton key='stop' onClick={() => this.operation('shutdown')} title={this.state.status} />}\n    {on && <ReloadButton key='reload' onClick={() => this.operation('reboot')} title={this.state.status} />}\n    {on && <PauseButton key='suspend' onClick={() => this.operation('suspend')} title={this.state.status} />}\n    {(on || this.state.state === 'suspended') && <ShutdownButton key='shutdown' onClick={() => this.operation('off')} title={this.state.status} />}\n    {off && <SnapshotButton key='snapshot' onClick={() => this.snapshot('create')} title='Take snapshot' />}\n    {off && <ItemsButton key='snapshots' onClick={() => this.props.changeContent(<Snapshots key={'hypervisor_snapshots_'+this.props.vm_id} device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} />)} title='Snapshot info' />}\n    {this.state.wait}\n   </>\n }\n}\n\n// ************ Info *************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n changeContent = (elem) => this.setState({content:elem});\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id}).then(result => {\n   if (result.data.device_id === null)\n    result.data.device_id = '';\n   this.setState(result);\n  })\n }\n\n syncDatabase(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'update'}).then(result => this.setState(result))\n }\n\n updateInfo(){\n  post_call('api/devices/'+this.props.type+'/vm_map',{bios_uuid:this.state.data.bios_uuid, device_id:this.state.data.device_id, host_id:this.props.device_id, op:'update'}).then(result => this.setState({update:result.update}))\n }\n\n changeImport = (iif) => import('./interface.jsx').then(lib => this.setState({content:<lib.Info key='interface_info' device_id={this.state.data.device_id} class='virtual' mac={iif.mac} name={iif.name} interface_id={iif.interface_id} description={iif.port} changeSelf={this.changeContent} />}))\n\n interfaceButton(vm_if,iif){\n  if(this.state.data.device_id){\n   if (iif.interface_id)\n    return <InfoButton key='info' onClick={() => this.changeImport({interface_id:iif.interface_id})} />\n   else\n    return <AddButton key='add' onClick={() => this.changeImport({...iif, interface_id:'new'})} />\n  } else\n   return <div />\n }\n\n render(){\n  if (this.state.data) {\n   const data = this.state.data;\n   return <>\n    <InfoArticle key='hyp_article' header='VM info'>\n     <InfoColumns key='hyp_ic' columns={3}>\n      <TextLine key='name' id='name' text={data.name} /><div />\n      <TextInput key='device_id' id='device_id' label='Device ID' value={data.device_id} onChange={this.onChange} /><div />\n      <TextLine key='device_name' id='device' label='Device Name' text={data.device_name} /><div />\n      <TextLine key='snmp' id='snmp_id' label='SNMP id' text={data.snmp_id} /><div />\n      <TextLine key='uuid' id='uuid' label='UUID' text={data.bios_uuid} /><div />\n      <StateLine key='state' id='state' state={data.state} /><div />\n      <TextLine key='config' id='config' text={data.config} /><div />\n      {Object.entries(this.state.interfaces).map(row => <Fragment key={row[0]}><TextLine key='interface' id={'interface_'+row[0]} label='Interface' text={`${row[1].name} - ${row[1].mac} - ${row[1].port}`} />{this.interfaceButton(row[0],row[1])}</Fragment>)}\n     </InfoColumns>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount()} title='Reload' />\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save mapping' />\n     <SyncButton key='sync' onClick={() => this.syncDatabase()} title='Resync database with VM info' />\n     {data.device_id && <GoButton key='go' onClick={() => this.changeSelf(<DeviceInfo key='device_info' id={data.device_id} changeSelf={this.props.changeSelf} />)} title='VM device info' />}\n     <Result key='result' result={JSON.stringify(this.state.update)} />\n    </InfoArticle>\n    <NavBar />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// ************ Snapshots *************\n//\nclass Snapshots extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.snapshot('list',undefined);\n }\n\n snapshot = (op,id) => {\n  this.setState({wait:<Spinner />});\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op, snapshot:id}).then(result => this.setState({...result, wait:null}));\n }\n\n deleteList = (id) => {\n  if (window.confirm('Really delete snapshot?')){\n   this.setState({wait:<Spinner />})\n   post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'remove', snapshot:id}).then(result => {\n    if(result.deleted){\n     let highest = 0;\n     const data = this.state.data.filter(row => (row.id !== id));\n     data.forEach(row => { highest = (highest < parseInt(row.id)) ? parseInt(row.id) : highest });\n     this.setState({data:data,highest:highest,wait:null});\n    }\n   })\n  }\n }\n\n listItem = (row) => [row.name,row.id,row.desc,row.created,row.state,<>\n  <RevertButton key='revert' onClick={() => this.snapshot('revert',row.id)} title='Revert to snapshot' />\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete snapshot' />\n </>]\n\n render(){\n  return <ContentReport key='hyp_snapshot_cr' header={`Snapshot (${this.props.vm_id}) Highest ID:${this.state.highest}`} thead={['Name','ID','Description','Created','State','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='reload' onClick={() => this.snapshot('list',undefined)} title='Reload list' />\n   {this.state.wait}\n  </ContentReport>\n }\n}\n"],"names":["Main","Component","constructor","props","super","listItem","row","up","ip_state","hostname","type_name","_jsxs","_Fragment","children","_jsx","StateLeds","state","type_functions","InfoButton","onClick","this","context","changeMain","Manage","device_id","id","type","url","length","UiButton","window","open","componentDidMount","post_call","field","search","extra","sort","then","result","setState","render","ContentList","header","thead","trows","data","SyncButton","changeContent","Sync","ContentData","mountUpdate","fun","contextType","RimsContext","host_id","vm","bios_uuid","config","entries","forEach","hasOwnProperty","entry","push","ContentReport","elem","content","loadNavigation","NavBar","NavButton","title","Inventory","NavInfo","sortList","method","a","b","name","localeCompare","Operation","vm_id","e","searchfield","filter","toLowerCase","includes","HeaderButton","text","highlight","ReloadButton","undefined","SearchField","searchFire","s","placeholder","Spinner","operation","op","wait","snapshot","status","on","off","Info","changeSelf","StartButton","StopButton","PauseButton","ShutdownButton","SnapshotButton","ItemsButton","Snapshots","onChange","target","value","changeImport","iif","lib","class","mac","interface_id","description","port","componentDidUpdate","prevProps","syncDatabase","updateInfo","update","interfaceButton","vm_if","AddButton","InfoArticle","InfoColumns","columns","TextLine","TextInput","label","device_name","snmp_id","StateLine","Object","interfaces","map","Fragment","SaveButton","GoButton","DeviceInfo","Result","JSON","stringify","deleteList","confirm","deleted","highest","parseInt","desc","created","RevertButton","DeleteButton"],"sourceRoot":""}
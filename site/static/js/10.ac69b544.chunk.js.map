{"version":3,"sources":["visualize.jsx","hypervisor.jsx"],"names":["Main","props","changeContent","elem","setState","state","List","key","this","Component","listItem","row","id","name","onClick","Edit","changeSelf","type","title","window","open","deleteList","content","confirm","post_call","then","result","deleted","data","filter","header","thead","trows","componentDidMount","Show","doubleClick","params","console","log","nodes","status","url","length","username","ip","args","hasOwnProperty","vis","DataSet","edges","network","Network","refs","show_canvas","options","on","setOptions","physics","className","styles","ref","changeImport","dev","lib","Info","onChange","e","target","value","jsonHandler","JSON","parse","updateInfo","op","toggleEdit","edit","viz","manipulation","enabled","toggleFix","forEach","node","update","fixed","get","togglePhysics","physics_button","StopButton","StartButton","networkSync","storePositions","label","showDiv","display","found","results","React","createRef","edit_canvas","PhysicsButton","text","style","stringify","undefined","up","ip_state","hostname","type_name","type_functions","context","changeMain","Manage","device_id","field","search","extra","sort","Sync","contextType","RimsContext","host_id","vm","device_uuid","config","entries","entry","push","loadNavigation","Inventory","sortList","method","a","b","localeCompare","Operation","vm_id","highlight","operation","wait","snapshot","off","Snapshots","intf","class","mac","interface_id","columns","device_name","snmp_id","Object","interfaces","map","port","interfaceButton","syncDatabase","highest","parseInt","desc","created"],"mappings":"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","file":"static/js/10.ac69b544.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Article, ContentData, ContentList, Result } from './infra/UI.jsx';\nimport { BackButton, DeleteButton, EditButton, FixButton, ReloadButton, SaveButton, StartButton, StopButton, TextButton, NetworkButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\nimport styles from './infra/ui.module.css';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='viz_list' />\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/visualize/list')\n   .then((result) => { this.setState(result); })\n }\n\n listItem = (row) => [row.id,row.name,<Fragment key='vl_buttons'>\n  <EditButton key={'vl_btn_edt_'+row.id} onClick={() => this.changeContent(<Edit key={'viz_edit_'+row.id} id={row.id} changeSelf={this.changeContent} type='map' />)} title='Show and edit map' />\n  <NetworkButton key={'vl_btn_net_'+row.id} onClick={() => window.open(`viz.html?id=${row.id}`,'_blank')} title='Show resulting map' />\n  <DeleteButton key={'vl_btn_del_'+row.id}  onClick={() => this.deleteList(row.id)} />\n </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Delete map?') && post_call('api/visualize/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment key='vl_fragment'>\n   <ContentList key='vl_cl' header='Maps' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='vl_btn_reload' onClick={() => this.componentDidMount() } />\n   </ContentList>\n   <ContentData key='vl_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** Show **************\n//\nexport class Show extends Component {\n\n componentDidMount(){\n  var args = (this.props.hasOwnProperty('id')) ? {id:this.props.id}:{name:this.props.name};\n  import('vis-network/standalone/esm/vis-network').then(vis => {\n   post_call('api/visualize/show',args).then(result => {\n    var nodes = new vis.DataSet(result.data.nodes);\n    var edges = new vis.DataSet(result.data.edges);\n    var network = new vis.Network(this.refs.show_canvas, {nodes:nodes, edges:edges}, result.data.options);\n    network.on('stabilizationIterationsDone', () => network.setOptions({ physics: false }))\n    network.on('doubleClick', (params) => this.doubleClick(params))\n   })\n  })\n }\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes);\n  if (params.nodes[0]){\n   post_call('api/device/management',{id:params.nodes[0]}).then(result => {\n    if (result && result.status === 'OK'){\n     if(result.data.url && result.data.url.length > 0)\n      window.open(result.data.url);\n     else\n      window.open('ssh://' + result.data.username + '@' + result.data.ip,'_self');\n    }else\n     console.log('Data not ok:' + result)\n   })\n  }\n }\n\n render(){\n  return <Article key='viz_show'><div className={styles.network} id='div_network' ref='show_canvas' /></Article>\n }\n}\n\n// ************** Edit **************\n//\nexport class Edit extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:'network', physics_button:StartButton, found:true, data:{name:'N/A'}, result:''}\n  this.viz = {network:null,nodes:null,edges:null}\n  this.results = React.createRef();\n  this.edit = false;\n }\n\n componentDidMount(){\n  import('vis-network/standalone/esm/vis-network').then(vis => {\n   post_call('api/visualize/network',{id:this.props.id,type:this.props.type}).then((result) => {\n    this.viz.nodes = new vis.DataSet(result.data.nodes);\n    this.viz.edges = new vis.DataSet(result.data.edges);\n    result.data.options.physics.enabled = true;\n    this.viz.network = new vis.Network(this.refs.edit_canvas, {nodes:this.viz.nodes, edges:this.viz.edges}, result.data.options);\n    this.viz.network.on('stabilizationIterationsDone', () => this.viz.network.setOptions({ physics: false }))\n    this.viz.network.on('doubleClick', (params) => this.doubleClick(params))\n    this.viz.network.on('dragEnd', (params) => this.networkSync(params))\n    result.data.options.physics.enabled = false;\n    this.setState(result)\n   })\n  })\n }\n\n changeImport = (dev) => import('./device.jsx').then(lib => this.props.changeSelf(<lib.Info key={'di_'+dev} id={dev} />));\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n jsonHandler = (e) => {\n  var data = {...this.state.data}\n  try {\n   data[e.target.name] = JSON.parse(e.target.value);\n   this.setState({data:data})\n  } catch {\n   console.log('Error converting string to JSON')\n  }\n }\n\n updateInfo = () => post_call('api/visualize/network',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes[0]);\n  this.props.changeSelf && this.changeImport(params.nodes[0]);\n }\n\n toggleEdit = () => {\n  this.edit = !this.edit;\n  this.viz.network.setOptions({ manipulation:{ enabled:this.edit }})\n  this.setState({result:'Edit:'+this.edit});\n }\n\n toggleFix = () => {\n  this.viz.nodes.forEach((node,id) => this.viz.nodes.update({id:id,fixed:!(node.fixed)}) );\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get()}, result:'Fix/Unfix positions'})\n }\n\n togglePhysics = () => {\n  const data = this.state.data;\n  data.options.physics.enabled = !data.options.physics.enabled;\n  this.viz.network.setOptions({ physics:data.options.physics.enabled })\n  this.setState({data:data, physics_button:(data.options.physics.enabled) ? StopButton:StartButton, result:'Physics:'+data.options.physics.enabled})\n }\n\n networkSync = (params) => {\n  this.viz.network.storePositions();\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get(), edges:this.viz.edges.get()}, result:'Moved ' + this.viz.nodes.get(params.nodes[0]).label})\n }\n\n showDiv = (id) => (id === this.state.content) ? {display:'block'} : {display:'none'}\n\n render(){\n  const PhysicsButton = this.state.physics_button;\n  return(\n   <Article key='viz_art' header='Network Map'>\n    {(this.props.type === 'device') && (this.props.changeSelf) && <BackButton key='viz_back' onClick={() => this.changeImport(this.props.id)} />}\n    <ReloadButton key='viz_reload' onClick={() => this.componentDidMount()} />\n    <EditButton key='viz_edit' onClick={() => this.toggleEdit()} />\n    <PhysicsButton key='viz_physics' onClick={() => this.togglePhysics()} />\n    <FixButton key='viz_fix' onClick={() => this.toggleFix()} />\n    <SaveButton key='viz_save' onClick={() => this.updateInfo()} />\n    <NetworkButton key='viz_net' onClick={() => this.setState({content:'network'})} />\n    <TextButton key='viz_opt' text='Options' onClick={() => this.setState({content:'options'})} />\n    <TextButton key='viz_nodes' text='Nodes' onClick={() => this.setState({content:'nodes'})} />\n    <TextButton key='viz_edges' text='Edges' onClick={() => this.setState({content:'edges'})} />\n    <TextInput key='viz_name' id='name' value={this.state.data.name} onChange={this.onChange} />\n    <Result key='viz_result' result={this.state.result} />\n    <div className={styles.network} style={this.showDiv('network')} ref='edit_canvas' />\n    <div className={styles.network} style={this.showDiv('options')}><textarea id='options' name='options' value={JSON.stringify(this.state.data.options,undefined,2)} onChange={this.jsonHandler}/></div>\n    <div className={styles.network} style={this.showDiv('nodes')}><textarea id='nodes' name='nodes' value={JSON.stringify(this.state.data.nodes,undefined,2)} onChange={this.jsonHandler} /></div>\n    <div className={styles.network} style={this.showDiv('edges')}><textarea id='edges' name='edges' value={JSON.stringify(this.state.data.edges,undefined,2)} onChange={this.jsonHandler} /></div>\n   </Article>\n  )\n }\n}\n","import React, { Fragment, Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Result, Spinner, StateLeds, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, GoButton, HeaderButton, InfoButton, ItemsButton, LogButton, PauseButton, RevertButton, ReloadButton, SaveButton, ShutdownButton, SnapshotButton, StartButton, StopButton, SyncButton, UiButton } from './infra/Buttons.jsx';\nimport { StateLine, TextInput, TextLine } from './infra/Inputs.jsx';\nimport { NavBar, NavInfo, NavButton } from './infra/Navigation.jsx';\n\nimport { Info as DeviceInfo, Logs as DeviceLogs } from './device.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:'hypervisor',extra:['type','functions','url'],sort:'hostname'}).then(result => this.setState(result))\n }\n\n listItem = (row) => {\n  const up =  (row.ip_state === 'up');\n  return [row.hostname,row.type_name,<StateLeds state={row.ip_state} />,<Fragment key={'hyp_buttons_'+row.id}>\n   {up && row.type_functions === 'manage' && <InfoButton key={'hyp_btn_info_'+row.id} onClick={() => this.context.changeMain(<Manage key={'hypervisor_manage_'+row.id} device_id={row.id} type={row.type_name} />)} />}\n   {up && row.url && row.url.length > 0 && <UiButton key={'hyp_ btn_ui_'+row.id} onClick={() => window.open(row.url,'_blank') } />}\n   </Fragment>]\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <Fragment key='hyp_fragment'>\n   <ContentList key='hyp_cl' header='Hypervisor' thead={['Hostname','Type','','']} trows={this.state.data} listItem={this.listItem}>\n    <SyncButton key='hyp_btn_sync' onClick={() => this.changeContent(<Sync />) } />\n   </ContentList>\n   <ContentData key='hyp_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Sync **************\n//\nclass Sync extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/vm_mapping').then(result => {\n    let entries = [];\n    ['existing','inventory','discovered','database'].forEach(type => {\n     if (result.hasOwnProperty(type))\n      result[type].forEach(entry => { entry.type = type; entries.push(entry); })\n    })\n    this.setState({data:entries})\n   })\n }\n\n listItem = (row) => [row.type,row.host_id,row.device_id,row.vm,row.device_uuid,row.config]\n\n render(){\n  return <ContentReport key='hyp_cr' header='VM Mapping' thead={['Status','Host','Device','VM Name','Device UUID','Config']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/management',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='hypervisor_navbar'>\n    <NavButton key='hyp_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    <NavButton key='hyp_nav_logs' title='Logs' onClick={() => this.changeContent(<DeviceLogs key='device_logs' id={this.props.device_id} />)} />\n    {result.data.url && (result.data.url.length > 0) && <NavButton key='hyp_nav_ui' title='UI' onClick={() => window.open(result.data.url,'_blank')} />}\n    <NavInfo key='hyp_nav_name' title={result.data.hostname} />\n   </NavBar>);\n   this.setState({...result,content:<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />});\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return  <Fragment key='manage_base'>{this.state.content}</Fragment>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {sort:'name'}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id, sort: this.state.sort}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n sortList = (method) => {\n  if (method === 'name')\n   this.state.data.sort((a,b) => a.name.localeCompare(b.name));\n  else\n   this.state.data.sort((a,b) => (a.id - b.id))\n  this.setState({sort:method})\n }\n\n listItem = (row) => [row.id,row.name,<Operation key={'hl_op_'+row.id} vm_id={row.id} device_id={this.props.device_id} type={this.props.type} changeContent={this.changeContent} state={row.state} />]\n\n render(){\n  if (this.state.data){\n   const thead = [<HeaderButton key='hl_btn_id' text='ID' highlight={(this.state.sort === 'id')} onClick={() => this.sortList('id')} />,<HeaderButton key='hl_btn_vm' text='VM' highlight={(this.state.sort === 'name')} onClick={() => this.sortList('name')} />,'Operations'];\n   return <Fragment key='hl_fragment'>\n    <ContentList key='hl_cl' header='Inventory' thead={thead} trows={this.state.data} listItem={this.listItem}>\n     <ReloadButton key='hl_btn_reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n     <LogButton key='hl_btn_logs' onClick={() => this.changeContent(<DeviceLogs key='device_logs' id={this.props.device_id} />)} title='Device logs' />\n    </ContentList>\n    <ContentData key='hl_cd'>{this.state.content}</ContentData>\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component{\n constructor(props){\n  super(props)\n  this.state = {state:this.props.state, status:'',wait:null};\n }\n\n operation = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_op',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n snapshot = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n render(){\n   const on = (this.state.state === 'on');\n   const off = (this.state.state === 'off');\n   return <Fragment key={'hyp_frag_'+this.props.vm_id}>\n    <InfoButton key={'hyp_btn_info_'+this.props.vm_id} onClick={() => this.props.changeContent(<Info key={'hypervisor_info_'+this.props.vm_id} device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} changeSelf={this.props.changeContent} />)} title='VM info' />\n    {(off || this.state.state === 'suspended')  && <StartButton key={'hyp_btn_start_'+this.props.vm_id} onClick={() => this.operation('on')} title={this.state.status} />}\n    {on && <StopButton key={'hyp_btn_stop_'+this.props.vm_id} onClick={() => this.operation('shutdown')} title={this.state.status} />}\n    {on && <ReloadButton key={'hyp_btn_reload_'+this.props.vm_id} onClick={() => this.operation('reboot')} title={this.state.status} />}\n    {on && <PauseButton key={'hyp_btn_suspend_'+this.props.vm_id} onClick={() => this.operation('suspend')} title={this.state.status} />}\n    {(on || this.state.state === 'suspended') && <ShutdownButton key={'hyp_btn_shutdown_'+this.props.vm_id} onClick={() => this.operation('off')} title={this.state.status} />}\n    {off && <SnapshotButton key={'hyp_btn_snapshot_'+this.props.vm_id} onClick={() => this.snapshot('create')} title='Take snapshot' />}\n    {off && <ItemsButton key={'hyp_btn_snapshots_'+this.props.vm_id} onClick={() => this.props.changeContent(<Snapshots key={'hypervisor_snapshots_'+this.props.vm_id} device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} />)} title='Snapshot info' />}\n    {this.state.wait}\n   </Fragment>\n }\n}\n\n// ************ Info *************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n changeContent = (elem) => this.setState({content:elem});\n\n changeImport = (intf) => import('./interface.jsx').then(lib => this.setState({content:<lib.Info key={'interface_info_'+intf[0]} device_id={this.state.data.device_id} class='virtual' mac={intf[1].mac} name={intf[1].name} interface_id={intf[1].interface_id} changeSelf={this.changeContent} />}))\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id}).then(result => this.setState(result))\n }\n\n syncDatabase(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'update'}).then(result => this.setState(result))\n }\n\n updateInfo(){\n  post_call('api/devices/'+this.props.type+'/vm_map',{device_uuid:this.state.data.device_uuid, device_id:this.state.data.device_id, host_id:this.props.device_id, op:'update'}).then(result => this.setState({update:result.update}))\n }\n\n interfaceButton(intf){\n  if(this.state.data.device_id){\n   if (intf[1].interface_id)\n    return <InfoButton key={'hyp_if_btn_'+intf[0]} onClick={() => this.changeImport([intf[0],{interface_id:intf[1].interface_id}])} />\n   else\n    return <AddButton key={'hyp_if_btn_'+intf[0]} onClick={() => this.changeImport({...intf,interface_id:'new'})} />\n  } else\n   return <div />\n }\n\n render(){\n  if (this.state.data) {\n   const data = this.state.data;\n   return <Fragment key='hyp_frag'>\n    <InfoArticle key='hyp_article' header='VM info'>\n     <InfoColumns key='hyp_ic' columns={3}>\n      <TextLine key='hyp_name' id='name' text={data.name} /><div />\n      <TextInput key='hyp_device_id' id='device_id' label='Device ID' value={data.device_id} onChange={this.onChange} /><div />\n      <TextLine key='hyp_device_name' id='device' label='Device Name' text={data.device_name} /><div />\n      <TextLine key='hyp_snmp' id='snmp_id' label='SNMP id' text={data.snmp_id} /><div />\n      <TextLine key='hyp_uuid' id='uuid' label='UUID' text={data.device_uuid} /><div />\n      <StateLine key='hyp_state' id='state' state={data.state} /><div />\n      <TextLine key='hyp_config' id='config' text={data.config} /><div />\n      {Object.entries(this.state.interfaces).map(row => <Fragment key={'hyp_intf_frag_'+row[0]}><TextLine key={'hyp_intf_'+row[0]} id={'interface_'+row[0]} label='Interface' text={`${row[1].name} - ${row[1].mac} - ${row[1].port}`} />{this.interfaceButton(row)}</Fragment>)}\n     </InfoColumns>\n     <SaveButton key='hyp_btn_save' onClick={() => this.updateInfo()} title='Save mapping' />\n     <SyncButton key='hyp_btn_sync' onClick={() => this.syncDatabase()} title='Resync database with VM info' />\n     {data.device_id && <GoButton key='hyp_btn_device_vm_info' onClick={() => this.changeSelf(<DeviceInfo key='device_info' id={data.device_id} changeSelf={this.props.changeSelf} />)} title='VM device info' />}\n     <Result key='hyp_res' result={JSON.stringify(this.state.update)} />\n    </InfoArticle>\n    <NavBar />\n    {this.state.content}\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// ************ Snapshots *************\n//\nclass Snapshots extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.snapshot('list',undefined);\n }\n\n snapshot = (op,id) => {\n  this.setState({wait:<Spinner />});\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op, snapshot:id}).then(result => this.setState({...result, wait:null}));\n }\n\n deleteList = (id) => {\n  if (window.confirm('Really delete snapshot?')){\n   this.setState({wait:<Spinner />})\n   post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'remove', snapshot:id}).then(result => {\n    if(result.deleted){\n     let highest = 0;\n     const data = this.state.data.filter(row => (row.id !== id));\n     data.forEach(row => { highest = (highest < parseInt(row.id)) ? parseInt(row.id) : highest });\n     this.setState({data:data,highest:highest,wait:null});\n    }\n   })\n  }\n }\n\n listItem = (row) => [row.name,row.id,row.desc,row.created,row.state,<Fragment key={'hyp_snap_buttons_'+row.id}>\n  <RevertButton key={'hs_revert_'+row.id} onClick={() => this.snapshot('revert',row.id)} title='Revert to snapshot' />\n  <DeleteButton key={'hs_delete_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete snapshot' />\n </Fragment>]\n\n render(){\n  return <ContentReport key='hyp_snapshot_cr' header={`Snapshot (${this.props.vm_id}) Highest ID:${this.state.highest}`} thead={['Name','ID','Description','Created','State','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='hs_reload' onClick={() => this.snapshot('list',undefined)} title='Reload list' />\n   {this.state.wait}\n  </ContentReport>\n }\n}\n"],"sourceRoot":""}
{"version":3,"file":"static/js/496.dadef86c.chunk.js","mappings":"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","sources":["location.jsx","webpack://rims-frontend/./src/infra/rack.module.css?02f7","rack.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row) => [row.id,row.name,<>\n   <ConfigureButton key='conf' onClick={() => this.changeContent(<Info key='location' id={row.id} />)} title='Edit location' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </>]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='location' id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidUpdate(prevProps,prevState){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_loc'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='ia_loc' header='Location'>\n     <InfoColumns key='ic'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"rack\":\"rack_rack__l-0E+\",\"rackLeft\":\"rack_rackLeft__jopWv\",\"rackRight\":\"rack_rackRight__cbJDU\",\"rackItem\":\"rack_rackItem__UiGLd\"};","import React, { Component } from 'react';\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SelectInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, GoButton, InfoButton, ItemsButton, ReloadButton, SaveButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx'\nimport styles from './infra/rack.module.css';\n\nimport { Main as DeviceMain, Info as DeviceInfo } from './device.jsx';\nimport { List as LocationList, Info as LocationInfo } from './location.jsx';\n\n// *************** Main ***************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='rack_list' />\n }\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='rack_navbar'>\n   <NavDropDown key='dev_nav_racks' title='Rack'>\n    <NavDropButton key='dev_nav_all_rack' title='Racks' onClick={() => this.changeContent(<List key='rack_list' />)} />\n    <NavDropButton key='dev_nav_all_pdu' title='PDUs' onClick={() => this.changeContent(<Infra key='pdu_list' type='pdu' />)} />\n    <NavDropButton key='dev_nav_all_con' title='Consoles' onClick={() => this.changeContent(<Infra key='console_list' type='console' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_loc' title='Locations' onClick={() => this.changeContent(<LocationList key='location_list' />)}/>\n  </NavBar>)\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <>{this.state}</>\n }\n}\nMain.contextType = RimsContext;\n\n// *************** List ***************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/list',{sort:'name'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'rl_btn_loc_'+row.id} text={row.location} onClick={() => this.changeContent(<LocationInfo key={'li_'+row.location_id} id={row.location_id} />)} />,row.name,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key={'rack_info_'+row.id} id={row.id} />)} title='Rack information' />\n   <GoButton key='go' onClick={() => this.context.changeMain(<DeviceMain key={'rack_device_'+row.id} rack_id={row.id} />)} title='Rack inventory' />\n   <ItemsButton key='items' onClick={() => this.changeContent(<Layout key={'rack_layout_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title='Rack layout'/>\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete rack' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete rack?') && post_call('api/rack/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Racks' thead={['Location','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key={'rack_new_' + rnd()} id='new' />)} title='Add rack' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nList.contextType = RimsContext;\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  post_call('api/rack/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/rack/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return <InfoArticle key='rack_article' header='Rack'>\n    <InfoColumns key='rack_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <TextInput key='size' id='size' value={this.state.data.size} onChange={this.onChange} />\n     <SelectInput key='console' id='console' value={this.state.data.console} onChange={this.onChange}>{this.state.consoles.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='location_id' id='location_id' label='Location' value={this.state.data.location_id} onChange={this.onChange}>{this.state.locations.map(row => <option key={row.id} value={row.id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='pdu_1' id='pdu_1' label='PDU1' value={this.state.data.pdu_1} onChange={this.onChange}>{this.state.pdus.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='pdu_2' id='pdu_2' label='PDU2' value={this.state.data.pdu_2} onChange={this.onChange}>{this.state.pdus.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n    </InfoColumns>\n    <SaveButton key='ri_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// *************** Layout ***************\n//\nexport class Layout extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/devices',{id:this.props.id}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => {\n  if(this.props.changeSelf)\n   this.props.changeSelf(elem);\n }\n\n createRack(id,content,sign){\n  const rack = [];\n  for (let i = 1; i < this.state.size+1; i++)\n   rack.push(<div key={'left_'+i} className={styles.rackLeft} style={{gridRow:-i}}>{i}</div>,<div key={'right_'+i} className={styles.rackRight} style={{gridRow:-i}}>{i}</div>)\n  content.forEach(dev => rack.push(<div key={'dev_' + dev.id} className={styles.rackItem} style={{gridRowStart:this.state.size+2-sign*dev.rack_unit, gridRowEnd:this.state.size+2-(sign*dev.rack_unit+dev.rack_size)}}><HrefButton key={'rd_btn_'+dev.id} style={{color:'var(--ui-txt-color)'}} onClick={() => this.changeContent(<DeviceInfo key='device_info' id={dev.id} />)} text={dev.hostname} /></div>))\n  return <div className={styles.rack} style={{grid:`repeat(${this.state.size-1}, 2vw)/2vw 25vw 2vw`}}>{rack}</div>\n }\n\n render(){\n  if (this.state.size) {\n   return <>\n    <InfoArticle key='rl_front' header='Front'>\n     {this.createRack('front',this.state.front,1)}\n    </InfoArticle>\n    <InfoArticle key='rl_back' header='Back'>\n     {this.createRack('back',this.state.back,-1)}\n    </InfoArticle>\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Infra ***************\n//\nexport class Infra extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:this.props.type,extra:['type']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'dev_'+row.id} text={row.id} onClick={() => this.changeContent(<DeviceInfo key={'device_' + row.id} id={row.id} />)} title='Device info'/>,row.hostname,<InfoButton key={'rinfra_btn_' + row.id} onClick={() => this.context.changeMain({module:row.type_base,function:'Manage',args:{device_id:row.id, type:row.type_name}})} title='Manage device' />]\n\n render(){\n  return <>\n   <ContentList key='cl' header={this.props.type} thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nInfra.contextType = RimsContext;\n"],"names":["List","Component","constructor","props","super","deleteList","id","window","confirm","post_call","then","result","deleted","this","setState","data","state","filter","row","changeContent","listItem","name","_jsxs","_Fragment","children","_jsx","ConfigureButton","onClick","Info","title","DeleteButton","componentDidMount","render","ContentList","header","thead","trows","ReloadButton","AddButton","ContentData","mountUpdate","fun","onChange","e","target","value","updateInfo","op","found","componentDidUpdate","prevProps","prevState","InfoArticle","InfoColumns","TextInput","SaveButton","Spinner","Main","compileNavItems","context","loadNavigation","NavBar","NavDropDown","NavDropButton","Infra","type","NavButton","LocationList","elem","contextType","RimsContext","HrefButton","text","location","LocationInfo","location_id","InfoButton","GoButton","changeMain","DeviceMain","rack_id","ItemsButton","Layout","changeSelf","sort","rnd","size","SelectInput","console","consoles","map","hostname","label","locations","pdu_1","pdus","pdu_2","createRack","content","sign","rack","i","push","className","styles","style","gridRow","forEach","dev","gridRowStart","rack_unit","gridRowEnd","rack_size","color","DeviceInfo","grid","front","back","module","type_base","function","args","device_id","type_name","field","search","extra"],"sourceRoot":""}
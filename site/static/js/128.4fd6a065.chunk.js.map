{"version":3,"file":"static/js/128.4fd6a065.chunk.js","mappings":"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","sources":["inventory.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, LineArticle, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { TextInput, SearchField, SelectInput, DateInput, CheckboxInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SearchButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems()\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='inventory_navbar'>\n   <NavDropDown key='inv_nav_inv' title='Inventory'>\n    <NavDropButton key='inv_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='search_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_vend' title='Vendor' onClick={() => this.changeContent(<Vendor key='vendor_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_list' title='List'   onClick={() => this.changeContent(<List key='list' changeSelf={this.changeContent} />)} />\n   </NavDropDown>\n   <NavButton key='inv_nav_loc' title='Locations' onClick={() => this.changeLocation()} />\n  </NavBar>)\n\n changeLocation = () => import('./location.jsx').then(lib => this.setState(<lib.List key='location_list' />));\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return <>{this.state}</>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list',this.props.args).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.model,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key={'inventory_'+row.id} id={row.id} />) } title='View inventory item' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete inventory item' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete item') && post_call('api/inventory/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  if (!this.state.data)\n   return <Spinner />\n  else {\n   const inv_list = (this.state.searchfield.length === 0) ? this.state.data : this.state.data.filter(row => (row.model.includes(this.state.searchfield) || row.serial.includes(this.state.searchfield)));\n   return <>\n    <ContentList key='cl' header='Inventory' thead={['ID','Serial','Model','']} trows={inv_list} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n     <AddButton key='add' onClick={() => this.changeContent(<Info key={'inventory_new_' + rnd()} id='new' />) } title='Add inventory item' />\n     <SearchField key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search inventory (case sensitive)' />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  }\n }\n}\n\n// ************** Search **************\n//\nclass Search extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{field:'serial',search:''}}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n render() {\n  return <LineArticle key='inv_srch_art' header='Inventory search'>\n   <SelectInput key='field' id='field' value={this.state.data.field} onChange={this.onChange}><option value='serial'>Serial</option><option value='vendor'>Vendor</option></SelectInput>\n   <TextInput key='search' id='search' value={this.state.data.search} placeholder='search' onChange={this.onChange} />\n   <SearchButton key='inv_btn_search' onClick={() => this.changeContent(<List key='inventory_list' args={this.state.data} />)} title='Search inventory' />\n  </LineArticle>\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidMount(){\n  post_call('api/inventory/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/inventory/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (this.state.data){\n   const data = this.state.data;\n   return <InfoArticle key='inv_article' header='Inventory Item'>\n     <InfoColumns key='inv_content'>\n      <TextInput key='vendor' id='vendor' value={data.vendor} onChange={this.onChange} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n      <TextInput key='product' id='product' value={data.product} onChange={this.onChange} />\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} />\n      <TextInput key='description' id='description' value={data.description} onChange={this.onChange} />\n      <SelectInput key='location_id' id='location_id' label='Location' value={data.location_id} onChange={this.onChange}>{this.state.locations.map((row,idx) => <option key={'ii_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <DateInput key='receive_date' id='receive_date' label='Received' value={data.receive_date} onChange={this.onChange} />\n      <TextInput key='purchase_order' id='purchase_order' label='Purchase Order' value={data.purchase_order} onChange={this.onChange} />\n      <CheckboxInput key='license' id='license' value={data.license} onChange={this.onChange} />\n      {(data.license && <TextInput key='license_key' id='license_key' label='Key' value={data.license_key} onChange={this.onChange} />)}\n      <CheckboxInput key='support_contract' id='support_contract' value={data.support_contract} onChange={this.onChange} />\n      {(data.support_contract && <DateInput key='support_end_date' id='support_end_date' label='Contract End' value={data.support_end_date} onChange={this.onChange} />)}\n      <TextInput key='comments' id='comments' value={data.comments} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='inv_btn_reload' onClick={() => this.componentDidMount() } />\n     {data.serial && <SaveButton key='inv_btn_save' onClick={() => this.updateInfo()} title='Save' />}\n    </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Vendor **************\n//\nclass Vendor extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/vendor_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'search_' +row.vendor} text={row.vendor} onClick={() => this.changeContent(<List key='inventory_list' args={{field:'vendor', search:row.vendor}} />)} />,row.count]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Vendors' thead={['Name','Count']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list', { extra:['vendor','product','description'], sort:'vendor'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.vendor,row.model,row.product,row.description]\n\n render(){\n  return <ContentReport key='inv_cr' header='Inventory' thead={['ID','Serial','Vendor','Model','Product','Description']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n"],"names":["Main","Component","constructor","arguments","compileNavItems","this","context","loadNavigation","_jsxs","NavBar","children","NavDropDown","title","_jsx","NavDropButton","onClick","changeContent","Search","changeSelf","Vendor","List","NavButton","changeLocation","then","lib","setState","elem","componentDidMount","componentDidUpdate","prevProps","props","render","_Fragment","state","contextType","RimsContext","super","listItem","row","id","serial","model","InfoButton","Info","DeleteButton","deleteList","window","confirm","post_call","result","deleted","data","filter","searchfield","args","inv_list","length","includes","ContentList","header","thead","trows","ReloadButton","AddButton","rnd","SearchField","searchFire","s","placeholder","ContentData","mountUpdate","fun","Spinner","onChange","e","target","name","type","field","search","LineArticle","SelectInput","value","TextInput","SearchButton","content","updateInfo","op","found","InfoArticle","InfoColumns","vendor","label","product","description","location_id","locations","map","idx","DateInput","receive_date","purchase_order","CheckboxInput","license","license_key","support_contract","support_end_date","comments","SaveButton","HrefButton","text","count","Report","extra","sort","ContentReport"],"sourceRoot":""}
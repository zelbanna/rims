{"version":3,"sources":["resource.jsx"],"names":["Main","props","compileNavItems","buttons","key","panel","type","push","title","onClick","context","changeMain","window","open","tab","className","styles","frame","src","console","log","JSON","stringify","Object","entries","state","data","loadNavigation","post_call","then","result","assign","prevProps","this","Fragment","Component","contextType","RimsContext"],"mappings":"0OAQaA,EAAb,kDACC,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IAiBPC,gBAAkB,WAEjB,IADA,IAAIC,EAAU,GADS,uCAEbC,EAFa,KAERC,EAFQ,KAGH,WAAfA,EAAMC,KACTH,EAAQI,KAAK,kBAAC,gBAAD,CAAeH,IAAK,MAAMA,EAAKI,MAAOJ,EAAKK,QAAS,kBAAM,EAAKC,QAAQC,WAAWN,OACxE,QAAfA,EAAMC,KACdH,EAAQI,KAAK,kBAAC,gBAAD,CAAeH,IAAK,MAAMA,EAAKI,MAAOJ,EAAKK,QAAS,kBAAMG,OAAOC,KAAKR,EAAMS,IAAI,cACtE,UAAfT,EAAMC,KACdH,EAAQI,KAAK,kBAAC,gBAAD,CAAeH,IAAK,MAAMA,EAAKI,MAAOJ,EAAKK,QAAS,kBAAM,EAAKC,QAAQC,WAAW,4BAAQI,UAAWC,IAAOC,MAAOT,MAAOJ,EAAKc,IAAKb,EAAMY,aAEvJE,QAAQC,IAAI,sBAAsBC,KAAKC,UAAUjB,KARnD,MAAyBkB,OAAOC,QAAQ,EAAKC,MAAMC,MAAnD,eAA0D,IAU1D,EAAKhB,QAAQiB,eAAe,kBAAC,SAAD,CAAQvB,IAAI,mBAAkB,kBAAC,cAAD,CAAaA,IAAI,YAAYI,MAAM,aAAaL,MA5B1G,EAAKsB,MAAQ,GAFI,EADnB,gEAMqB,IAAD,OAClBG,YAAU,uBAAuB,CAACtB,KAAK,aAAauB,MAAK,SAAAC,GACxDP,OAAOQ,OAAO,EAAKN,MAAMK,GACzB,EAAK5B,uBATR,yCAaoB8B,GACfA,IAAcC,KAAKhC,OACrBgC,KAAK/B,oBAfR,+BAmCE,OAAO,kBAAC,IAAMgC,SAAP,UAnCT,GAA0BC,aAsC1BnC,EAAKoC,YAAcC","file":"static/js/20.85e7ac67.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { NavBar, NavDropDown, NavDropButton } from './infra/Navigation.jsx';\nimport { RimsContext } from './infra/UI.jsx';\nimport styles from './infra/ui.module.css';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/portal/resources',{type:'resource'}).then(result => {\n   Object.assign(this.state,result);\n   this.compileNavItems();\n  })\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props){\n   this.compileNavItems();\n  }\n }\n\n compileNavItems = () => {\n  let buttons = []\n  for (let [key, panel] of Object.entries(this.state.data)){\n   if (panel.type === 'module')\n    buttons.push(<NavDropButton key={'mb_'+key} title={key} onClick={() => this.context.changeMain(panel)} />)\n   else if (panel.type === 'tab')\n    buttons.push(<NavDropButton key={'mb_'+key} title={key} onClick={() => window.open(panel.tab,'_blank')} />)\n   else if (panel.type === 'frame')\n    buttons.push(<NavDropButton key={'mb_'+key} title={key} onClick={() => this.context.changeMain(<iframe className={styles.frame} title={key} src={panel.frame} />)} />)\n   else\n    console.log(\"Unknown panel type:\"+JSON.stringify(panel))\n  }\n  this.context.loadNavigation(<NavBar key='resource_navbar'><NavDropDown key='resources' title='Resources'>{buttons}</NavDropDown></NavBar>)\n }\n\n render(){\n  return <React.Fragment />\n }\n}\nMain.contextType = RimsContext;\n"],"sourceRoot":""}
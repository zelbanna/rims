{"version":3,"sources":["system.jsx"],"names":["Main","props","compileNavItems","master","context","settings","node","admin","class","master_admin","loadNavigation","key","title","onClick","changeImport","window","open","changeContent","Controls","Report","RestList","state","navinfo","map","row","idx","elem","setState","content","navitems","logs","post_call","user_id","this","id","then","result","Object","assign","prevProps","module","func","args","lib","Elem","Component","contextType","RimsContext","listItem","info","value","data","keys","sort","a","b","localeCompare","header","thead","trows","api","text","function","RestInfo","apilist","forEach","item","functions","push","mountUpdate","fun","information","join","RestExecute","JSON","stringify","op","FileList","loadFiles","hasOwnProperty","mode","directory","files","undefined","fullpath","status","alert","substr","length","src","path","alt","className","styles","href","target","rel"],"mappings":"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","file":"static/js/23.7fa99dfa.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Title, Spinner, Article, CodeArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton, NavInfo, NavReload } from './infra/Navigation.jsx';\n\nimport styles from './infra/ui.module.css';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {navinfo:[], navitems:[], logs:[] }\n }\n\n componentDidMount(){\n  post_call('api/system/inventory',{user_id:this.context.settings.id}).then(result => {\n   Object.assign(this.state,result)\n   this.compileNavItems()\n  })\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => {\n  const master = (this.context.settings.node === 'master');\n  const admin = (this.context.settings.class === 'admin');\n  const master_admin = (master && admin);\n  this.context.loadNavigation(<NavBar key='system_navbar'>\n   {master_admin && <NavButton key='sys_nav_node' title='Nodes' onClick={() => this.changeImport('node','List')} />}\n   {master_admin && <NavButton key='sys_nav_srv' title='Servers' onClick={() => this.changeImport('server','List')} />}\n   {master && <NavButton key='sys_nav_erd' title='ERD'     onClick={() => window.open('erd.pdf','_blank')} />}\n   {master_admin && <NavButton key='sys_nav_user' title='Users'  onClick={() => this.changeImport('user','List')} />}\n   {master && <NavButton key='sys_nav_ctrl' title='Controls' onClick={() => this.changeContent(<Controls key='system_controls' />)} />}\n   <NavDropDown key='sys_nav_reports' title='Reports'>\n    <NavDropButton key='sys_nav_sys' title='System' onClick={() => this.changeContent(<Report key='system_report' />)} />\n    {admin && <NavDropButton key='sys_nav_act' title='Activities' onClick={() => this.changeImport('activity','Report')} />}\n    {master && <NavDropButton key='sys_nav_resv' title='Reservations' onClick={() => this.changeImport('reservation','Report')} />}\n    {master && <NavDropButton key='sys_nav_dev' title='Devices' onClick={() => this.changeImport('device','Report')} />}\n    {master && <NavDropButton key='sys_nav_if' title='Interfaces' onClick={() => this.changeImport('interface','Report')} />}\n    {master && <NavDropButton key='sys_nav_inv' title='Inventory' onClick={() => this.changeImport('inventory','Report')} />}\n   </NavDropDown>\n   <NavButton key='sys_nav_logs' title='Logs' onClick={() => this.changeImport('node','LogShow',{node:this.context.settings.node})} />\n   {admin && <NavButton key='sys_nav_rest' title='REST' onClick={() => this.changeContent(<RestList key='rest_list' />)} />}\n   <NavReload key='sys_nav_reload' onClick={() => this.changeContent(null)} />\n   {this.state.navinfo.map((row,idx) => <NavInfo key={'sys_nav_ni_'+idx} title={row} />)}\n  </NavBar>)\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n changeImport(module,func,args){\n  import('./'+module+'.jsx').then(lib => {\n   var Elem = lib[func];\n   this.setState({content:<Elem key={module+'_'+func} {...args} />})\n  })\n }\n\n render(){\n  return <>{this.state.content}</>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Report **************\n//\nexport class Report extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/report').then(result => this.setState({data:Object.keys(result).sort((a,b) => a.localeCompare(b)).map(key => ({info:key,value:result[key]})) }))\n }\n\n listItem = (row) => [row.info,row.value]\n\n render(){\n  return <ContentReport key='sys_cr' header='System Report' thead={['Key','Value']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** RestList **************\n//\nclass RestList extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/rest_explore')\n   .then((result) => {\n    var apilist = [];\n    result.data.forEach(item => item.functions.forEach(row => apilist.push({api:item.api, function:row})  ) );\n    this.setState({data:apilist});\n   })\n }\n\n listItem = (row) => [row.api,<HrefButton key={'rest_' + row.api} text={row.function} onClick={() => { this.changeContent(<RestInfo key='rest_info' {...row} />)}} />]\n\n render(){\n  return <>\n   <ContentList key='cl' header='REST API' thead={['API','Function']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// ************** RestInfo **************\n//\nclass RestInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidUpdate(prevProps) {\n  if (prevProps !== this.props){\n   post_call('api/system/rest_information',{api:this.props.api, function:this.props.function}).then(result => this.setState(result))\n  }\n }\n\n componentDidMount(){\n  post_call('api/system/rest_information',{api:this.props.api, function:this.props.function}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.module && this.state.information) {\n   return(\n    <Article key='ri_art' header={this.props.api}>\n     {this.state.module.join('\\n')}\n     <Title text={this.props.function} />\n     {this.state.information.join('\\n')}\n    </Article>\n   )\n  } else\n   return <Spinner />\n }\n}\n\n// ************************ REST Execute ********************\n//\nclass RestExecute extends Component {\n componentDidMount(){\n  post_call('api/' + this.props.api,this.props.args).then(result => this.setState(result))\n }\n\n render(){\n  return (this.state) ? <CodeArticle key='re_code' header={this.props.text}>{JSON.stringify(this.state,null,2)}</CodeArticle> : <Spinner />\n }\n}\n\n// ************************ Controls ********************\n//\n// TODO: List should be dynamic from config and passed through REST engine\nclass Controls extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:[\n   {api:'ipam/address_events',text:'IPAM clear all status logs',args:{op:'clear'}},\n   {api:'device/log_clear',text:'Device clear all status logs'},\n   {api:'ipam/check',text:'IPAM status check'},\n   {api:'interface/check',text:'Interface status check'},\n   {api:'device/system_info_discover',text:'Discover device system information (sysmac etc)'},\n   {api:'device/model_sync',text:'Sync device model mapping'},\n   {api:'device/vm_mapping',text:'VM UUID mapping'},\n   {api:'master/oui_fetch',text:'Sync OUI database'},\n   {api:'reservation/expiration_status',text:'Check reservation status'},\n   {api:'fdb/check',text:'Update FDB'}\n  ]}\n }\n\n listItem = (row) => [<HrefButton key={'ctrl_' + row.api} text={row.text} onClick={() => this.changeContent(<RestExecute key={'rest_' + row.api} {...row} />)} />]\n\n render(){\n  return <>\n   <ContentList key='cl' header='' thead={['API']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// ************** File List **************\n//\nexport class FileList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props)\n   this.loadFiles();\n }\n\n componentDidMount(){\n  this.loadFiles()\n }\n\n loadFiles = () => {\n  let state = {};\n  if (this.props.hasOwnProperty('directory'))\n   state = {mode:'directory',args:{directory:this.props.directory},files:undefined}\n  else if (this.props.hasOwnProperty('fullpath'))\n   state = {mode:'fullpath',args:{fullpath:this.props.fullpath},files:undefined}\n  else\n   state = {mode:'images',args:{},files:undefined}\n  post_call('api/system/file_list',state.args).then(result => {\n   if (result.status === 'OK')\n    this.setState({mode:state.mode,...result})\n   else {\n    window.alert('Error retrieving files:' + result.info);\n    this.setState({files:[]})\n   }\n  })\n }\n\n listItem = (row) => {\n  if (this.state.mode === 'images')\n   return (row.substr(row.length - 4) === '.png') ? [row,<img src={this.state.path +'/'+row} alt={this.state.path +'/'+row} />] : []\n  else\n   return [<>{this.state.path + '/'}<a className={styles.href} href={this.state.path + '/' + row} target='_blank' rel='noopener noreferrer'>{row}</a></>]\n }\n\n render() {\n  return (!this.state.files) ? <Spinner /> : <ContentReport header={this.state.mode} thead={[]} trows={this.state.files} listItem={this.listItem} />\n }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["location.jsx"],"names":["List","props","deleteList","id","window","confirm","post_call","then","result","deleted","setState","data","state","filter","row","changeContent","listItem","name","key","onClick","Info","title","header","thead","trows","this","componentDidMount","mountUpdate","fun","Component","onChange","e","target","value","updateInfo","op","found","prevProps","prevState"],"mappings":"8QAQaA,EAAb,kDACA,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAQPC,WAAa,SAACC,GAAD,OAASC,OAAOC,QAAQ,4BAA8BC,YAAU,sBAAuB,CAACH,GAAGA,IAAKI,MAAK,SAAAC,GAC7GA,EAAOC,UACV,EAAKC,SAAS,CAACC,KAAK,EAAKC,MAAMD,KAAKE,QAAO,SAAAC,GAAG,OAAKA,EAAIX,KAAOA,OAC9D,EAAKY,cAAc,WAZJ,EAejBC,SAAW,SAACF,GAAD,MAAS,CAACA,EAAIX,GAAGW,EAAIG,KAAK,oCACnC,kBAAC,kBAAD,CAAiBC,IAAI,OAAOC,QAAS,kBAAM,EAAKJ,cAAc,kBAACK,EAAD,CAAMF,IAAI,WAAWf,GAAIW,EAAIX,OAASkB,MAAM,kBAC1G,kBAAC,eAAD,CAAcH,IAAI,MAAMC,QAAS,kBAAM,EAAKjB,WAAWY,EAAIX,KAAKkB,MAAM,uBAfvE,EAAKT,MAAQ,GAFG,EADlB,gEAMqB,IAAD,OAClBN,YAAU,qBAAsBC,MAAK,SAAAC,GAAM,OAAI,EAAKE,SAASF,QAP/D,+BAqBU,IAAD,OACP,OAAO,oCACN,kBAAC,cAAD,CAAaU,IAAI,KAAKI,OAAO,YAAYC,MAAO,CAAC,KAAK,OAAO,IAAKC,MAAOC,KAAKb,MAAMD,KAAMK,SAAUS,KAAKT,UACxG,kBAAC,eAAD,CAAcE,IAAI,SAASC,QAAS,kBAAM,EAAKO,uBAC/C,kBAAC,YAAD,CAAWR,IAAI,MAAMC,QAAS,kBAAM,EAAKJ,cAAc,kBAACK,EAAD,CAAMF,IAAI,WAAWf,GAAG,UAAWkB,MAAM,kBAEjG,kBAAC,cAAD,CAAaH,IAAI,MAAMS,YAAa,SAACC,GAAD,OAAS,EAAKb,cAAgBa,UA3BrE,GAA0BC,aAkCbT,EAAb,kDACC,WAAYnB,GAAO,IAAD,8BACjB,cAAMA,IAIP6B,SAAW,SAACC,GAAD,OAAO,EAAKrB,SAAS,CAACC,KAAK,eAAI,EAAKC,MAAMD,KAAhB,eAAuBoB,EAAEC,OAAOf,KAAMc,EAAEC,OAAOC,WALlE,EAOlBC,WAAa,kBAAM5B,YAAU,oBAAD,aAAsB6B,GAAG,UAAa,EAAKvB,MAAMD,OAAOJ,MAAK,SAAAC,GAAM,OAAI,EAAKE,SAASF,OALhH,EAAKI,MAAQ,CAACD,KAAK,KAAMyB,OAAM,GAFd,EADnB,+DAUoBC,EAAUC,GACxBD,IAAcZ,KAAKxB,OACtBwB,KAAKC,sBAZR,0CAgBqB,IAAD,OAClBpB,YAAU,oBAAoB,CAACH,GAAGsB,KAAKxB,MAAME,KAAKI,MAAK,SAAAC,GAAM,OAAI,EAAKE,SAASF,QAjBjF,+BAoBW,IAAD,OACR,OAAKiB,KAAKb,MAAMwB,MAEPX,KAAKb,MAAMD,KACZ,kBAAC,cAAD,CAAaO,IAAI,SAASI,OAAO,YACtC,kBAAC,cAAD,CAAaJ,IAAI,MACjB,kBAAC,YAAD,CAAWA,IAAI,OAAOf,GAAG,OAAO8B,MAAOR,KAAKb,MAAMD,KAAKM,KAAMa,SAAUL,KAAKK,YAE5E,kBAAC,aAAD,CAAYZ,IAAI,OAAOC,QAAS,kBAAM,EAAKe,cAAcb,MAAM,UAG1D,kBAAC,UAAD,MATA,kBAAC,cAAD,CAAaH,IAAI,UAAjB,gBAAwCO,KAAKxB,MAAME,GAAnD,gBAtBV,GAA0B0B","file":"static/js/5.a980bec0.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row) => [row.id,row.name,<>\n   <ConfigureButton key='conf' onClick={() => this.changeContent(<Info key='location' id={row.id} />)} title='Edit location' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </>]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='location' id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidUpdate(prevProps,prevState){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_loc'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='ia_loc' header='Location'>\n     <InfoColumns key='ic'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
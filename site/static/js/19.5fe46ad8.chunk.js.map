{"version":3,"sources":["pdu.jsx"],"names":["Manage","changeContent","elem","setState","post_call","id","this","props","device_id","then","result","context","loadNavigation","key","title","data","onClick","Inventory","type","Info","state","Component","contextType","RimsContext","lookupSlots","op","slots","i","push","label","text","style","justifyContent","header","JSON","stringify","componentDidMount","listItem","row","idx","slotname","unit","Unit","name","Operation","thead","trows","undefined","mountUpdate","fun","operation","wait","slot","status","off","onChange","e","target","value","updatePDU","info"],"mappings":"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","file":"static/js/19.5fe46ad8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Flex, InfoArticle, InfoColumns, Spinner, ContentList, ContentData, Result } from './infra/UI.jsx';\nimport { TextInput, TextLine } from './infra/Inputs.jsx';\nimport { HrefButton, ReloadButton, SaveButton, SearchButton, StartButton, StopButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavInfo } from './infra/Navigation.jsx';\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n componentDidMount(){\n  post_call('api/device/hostname',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='pdu_navbar'>\n    <NavInfo key='pdu_nav_name' title={result.data} />\n    <NavButton key='pdu_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='pdu_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    <NavButton key='pdu_nav_info' title='Info' onClick={() => this.changeContent(<Info key='pdu_info' device_id={this.props.device_id} type={this.props.type} />)} />\n   </NavBar>)\n  })\n  this.setState(<Inventory key='pdu_inventory' device_id={this.props.device_id} type={this.props.type} />);\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <>{this.state}</>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Info **************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/info',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n lookupSlots = () => post_call('api/devices/'+this.props.type+'/info',{device_id:this.props.device_id,op:'lookup'}).then(result => this.setState(result))\n\n render(){\n  if (this.state.data){\n   let slots = [];\n   for (let i = 0; i < this.state.data.slots; i++){\n    slots.push(<TextLine key={'pi_sn_' + i} id={'pi_slot_name_' + i} label={'Slot ' + i + ' Name'} text={this.state.data[i + '_slot_name']} />);\n    slots.push(<TextLine key={'pi_si_' + i} id={'pi_slot_id_' + i} label={'Slot ' + i + ' ID'} text={this.state.data[i + '_slot_id']} />);\n   }\n   return <Flex key='pi_flex' style={{justifyContent:'space-evenly'}}>\n    <InfoArticle key='pi_article' header={'PDU Device Info - '+this.props.type}>\n     <InfoColumns key='pi_info'>\n      <TextLine key='pi_slots' id='slots' label='Right/Left slots' text={JSON.stringify(this.state.data.slots === 2)} />\n      {slots}\n     </InfoColumns>\n     <ReloadButton key='pi_btn_reload' onClick={() => this.componentDidMount() } />\n     <SearchButton key='pi_btn_search' onClick={() => this.lookupSlots() } />\n    </InfoArticle>\n   </Flex>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n listItem = (row,idx) => [`${row.slotname}.${row.unit}`,<HrefButton key={'inv_' + idx} onClick={() => this.changeContent(<Unit key={'pdu_unit_'+idx} device_id={this.props.device_id} type={this.props.type} {...row} />)} text={row.name} title='Edit port info' />,<Operation key={'state_'+idx} idx={idx} device_id={this.props.device_id} type={this.props.type} {...row} />]\n\n render(){\n  if (this.state.data){\n   return <>\n    <ContentList key='cl' header='Inventory' thead={['Position','Device','State']} trows={this.state.data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component{\n constructor(props){\n  super(props)\n  this.state = {state:this.props.state, status:'',wait:null};\n }\n\n operation = (state) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/op',{device_id:this.props.device_id, slot:this.props.slot, unit:this.props.unit, state:state}).then(result => this.setState({...result, wait:null}));\n }\n\n render(){\n  const off = (this.state.state === 'off');\n  return <>\n   {off && <StartButton key='start' onClick={() => this.operation('on')} title={this.state.status} />}\n   {!off && <StopButton key='stop' onClick={() => this.operation('off')} title={this.state.status} />}\n   {!off && <ReloadButton key='reload' onClick={() => this.operation('reboot')} title={this.state.status} />}\n   {this.state.wait}\n  </>\n }\n}\n\n// ************** Unit **************\n//\nclass Unit extends Component {\n constructor(props){\n  super(props)\n  this.state = {text:this.props.name,wait:null}\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n updatePDU = () => {\n  this.setState({wait:<Spinner />, info:undefined});\n  post_call('api/devices/'+this.props.type+'/update',{op:'update',device_id:this.props.device_id,slot:this.props.slot,unit:this.props.unit,text:this.state.text}).then(result => this.setState({...result,wait:null}));\n }\n\n render(){\n  let result = ''\n  if (this.state.status)\n   result = (this.state.status === 'OK') ? 'OK' : this.state.info;\n  return <InfoArticle key='pu_article'>\n   <InfoColumns key='pu_info'>\n    <TextLine key='pu_slot_unit' id='su' label='Slot.Unit' text={`${this.props.slotname}.${this.props.unit}`} />\n    <TextInput key='pu_slot_text' id='text' value={this.state.text} onChange={this.onChange} />\n   </InfoColumns>\n   <Result key='pu_result' result={result} />\n   <SaveButton key='pu_btn_save' onClick={() => this.updatePDU()} title='Update pdu' />\n   {this.state.wait}\n  </InfoArticle>\n }\n}\n"],"sourceRoot":""}
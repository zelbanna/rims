{"version":3,"sources":["visualize.jsx"],"names":["Main","props","changeContent","elem","setState","state","List","this","Component","listItem","row","id","name","onClick","Edit","changeSelf","type","title","window","open","deleteList","confirm","post_call","then","result","deleted","data","filter","header","thead","trows","componentDidMount","mountUpdate","fun","content","changeImport","dev","lib","Info","onChange","e","target","value","jsonHandler","JSON","parse","console","log","updateInfo","op","doubleClick","params","nodes","toggleEdit","edit","viz","network","setOptions","manipulation","enabled","toggleFix","forEach","node","update","fixed","get","togglePhysics","options","physics","physics_button","StopButton","StartButton","networkSync","storePositions","edges","label","showDiv","display","found","canvas","React","createRef","vis","DataSet","clickToUse","Network","current","on","PhysicsButton","text","className","styles","style","ref","stringify","undefined"],"mappings":"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","file":"static/js/4.c1ebf8a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Article, ContentData, ContentList, Result } from './infra/UI.jsx';\nimport { BackButton, DeleteButton, EditButton, FixButton, ReloadButton, SaveButton, StartButton, StopButton, TextButton, NetworkButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\nimport styles from './infra/ui.module.css';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='viz_list' />\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <>{this.state}</>\n }\n}\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/visualize/list')\n   .then((result) => { this.setState(result); })\n }\n\n listItem = (row) => [row.id,row.name,<>\n  <EditButton key='edit' onClick={() => this.changeContent(<Edit key={'viz_edit_'+row.id} id={row.id} changeSelf={this.changeContent} type='map' />)} title='Show and edit map' />\n  <NetworkButton key='net' onClick={() => window.open(`viz.html?id=${row.id}`,'_blank')} title='Show resulting map' />\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id)} />\n </>]\n\n deleteList = (id) => (window.confirm('Delete map?') && post_call('api/visualize/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Maps' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// ************** Edit **************\n//\nexport class Edit extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:'network', physics_button:StartButton, found:true, data:{name:'N/A'}, result:''}\n  this.viz = {network:null,nodes:null,edges:null}\n  this.canvas = React.createRef()\n  this.edit = false;\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n componentDidMount(){\n  import('vis-network/standalone/esm/vis-network').then(vis => {\n   post_call('api/visualize/network',{id:this.props.id,type:this.props.type}).then((result) => {\n    this.viz.nodes = new vis.DataSet(result.data.nodes);\n    this.viz.edges = new vis.DataSet(result.data.edges);\n    result.data.options.physics.enabled = true;\n    result.data.options.clickToUse = true;\n    this.viz.network = new vis.Network(this.canvas.current, {nodes:this.viz.nodes, edges:this.viz.edges}, result.data.options);\n    this.viz.network.on('stabilizationIterationsDone', () => this.viz.network.setOptions({ physics: false }))\n    this.viz.network.on('doubleClick', (params) => this.doubleClick(params))\n    this.viz.network.on('dragEnd', (params) => this.networkSync(params))\n    result.data.options.physics.enabled = false;\n    this.setState(result)\n   })\n  })\n }\n\n changeImport = (dev) => import('./device.jsx').then(lib => this.props.changeSelf(<lib.Info key={'di_'+dev} id={dev} />));\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n jsonHandler = (e) => {\n  var data = {...this.state.data}\n  try {\n   data[e.target.name] = JSON.parse(e.target.value);\n   this.setState({data:data})\n  } catch {\n   console.log('Error converting string to JSON')\n  }\n }\n\n updateInfo = () => post_call('api/visualize/network',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes[0]);\n  this.props.changeSelf && this.changeImport(params.nodes[0]);\n }\n\n toggleEdit = () => {\n  this.edit = !this.edit;\n  this.viz.network.setOptions({ manipulation:{ enabled:this.edit }})\n  this.setState({result:'Edit:'+this.edit});\n }\n\n toggleFix = () => {\n  this.viz.nodes.forEach((node,id) => this.viz.nodes.update({id:id,fixed:!(node.fixed)}) );\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get()}, result:'Fix/Unfix positions'})\n }\n\n togglePhysics = () => {\n  const data = this.state.data;\n  data.options.physics.enabled = !data.options.physics.enabled;\n  this.viz.network.setOptions({ physics:data.options.physics.enabled })\n  this.setState({data:data, physics_button:(data.options.physics.enabled) ? StopButton:StartButton, result:'Physics:'+data.options.physics.enabled})\n }\n\n networkSync = (params) => {\n  this.viz.network.storePositions();\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get(), edges:this.viz.edges.get()}, result:'Moved ' + this.viz.nodes.get(params.nodes[0]).label})\n }\n\n showDiv = (id) => (id === this.state.content) ? {display:'block'} : {display:'none'}\n\n render(){\n  const PhysicsButton = this.state.physics_button;\n  return(\n   <Article key='viz_art' header='Network Map'>\n    {(this.props.type === 'device') && (this.props.changeSelf) && <BackButton key='viz_back' onClick={() => this.changeImport(this.props.id)} />}\n    <ReloadButton key='viz_reload' onClick={() => this.componentDidMount()} />\n    <EditButton key='viz_edit' onClick={() => this.toggleEdit()} />\n    <PhysicsButton key='viz_physics' onClick={() => this.togglePhysics()} />\n    <FixButton key='viz_fix' onClick={() => this.toggleFix()} />\n    <SaveButton key='viz_save' onClick={() => this.updateInfo()} />\n    <NetworkButton key='viz_net' onClick={() => this.changeContent('network')} />\n    <TextButton key='viz_opt' text='Options' onClick={() => this.changeContent('options')} />\n    <TextButton key='viz_nodes' text='Nodes' onClick={() => this.changeContent('nodes')} />\n    <TextButton key='viz_edges' text='Edges' onClick={() => this.changeContent('edges')} />\n    <TextInput key='viz_name' id='name' value={this.state.data.name} onChange={this.onChange} />\n    <Result key='viz_result' result={this.state.result} />\n    <div className={styles.network} style={this.showDiv('network')} ref={this.canvas} />\n    <div className={styles.network} style={this.showDiv('options')}><textarea id='options' name='options' value={JSON.stringify(this.state.data.options,undefined,2)} onChange={this.jsonHandler}/></div>\n    <div className={styles.network} style={this.showDiv('nodes')}><textarea id='nodes' name='nodes' value={JSON.stringify(this.state.data.nodes,undefined,2)} onChange={this.jsonHandler} /></div>\n    <div className={styles.network} style={this.showDiv('edges')}><textarea id='edges' name='edges' value={JSON.stringify(this.state.data.edges,undefined,2)} onChange={this.jsonHandler} /></div>\n   </Article>\n  )\n }\n}\n"],"sourceRoot":""}
{"version":3,"file":"static/js/845.83222007.chunk.js","mappings":"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","sources":["inventory.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, LineArticle, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { TextInput, SearchField, SelectInput, DateInput, CheckboxInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SearchButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems()\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='inventory_navbar'>\n   <NavDropDown key='inv_nav_inv' title='Inventory'>\n    <NavDropButton key='inv_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='search_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_vend' title='Vendor' onClick={() => this.changeContent(<Vendor key='vendor_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_list' title='List'   onClick={() => this.changeContent(<List key='list' changeSelf={this.changeContent} />)} />\n   </NavDropDown>\n   <NavButton key='inv_nav_loc' title='Locations' onClick={() => this.changeLocation()} />\n  </NavBar>)\n\n changeLocation = () => import('./location.jsx').then(lib => this.setState(<lib.List key='location_list' />));\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return <>{this.state}</>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list',this.props.args).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.model,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key={'inventory_'+row.id} id={row.id} />) } title='View inventory item' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete inventory item' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete item') && post_call('api/inventory/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  if (!this.state.data)\n   return <Spinner />\n  else {\n   const inv_list = (this.state.searchfield.length === 0) ? this.state.data : this.state.data.filter(row => (row.model.includes(this.state.searchfield) || row.serial.includes(this.state.searchfield)));\n   return <>\n    <ContentList key='cl' header='Inventory' thead={['ID','Serial','Model','']} trows={inv_list} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n     <AddButton key='add' onClick={() => this.changeContent(<Info key={'inventory_new_' + rnd()} id='new' />) } title='Add inventory item' />\n     <SearchField key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search inventory (case sensitive)' />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  }\n }\n}\n\n// ************** Search **************\n//\nclass Search extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{field:'serial',search:''}}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n render() {\n  return <LineArticle key='inv_srch_art' header='Inventory search'>\n   <SelectInput key='field' id='field' value={this.state.data.field} onChange={this.onChange}><option value='serial'>Serial</option><option value='vendor'>Vendor</option></SelectInput>\n   <TextInput key='search' id='search' value={this.state.data.search} placeholder='search' onChange={this.onChange} />\n   <SearchButton key='inv_btn_search' onClick={() => this.changeContent(<List key='inventory_list' args={this.state.data} />)} title='Search inventory' />\n  </LineArticle>\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidMount(){\n  post_call('api/inventory/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/inventory/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (this.state.data){\n   const data = this.state.data;\n   return <InfoArticle key='inv_article' header='Inventory Item'>\n     <InfoColumns key='inv_content'>\n      <TextInput key='vendor' id='vendor' value={data.vendor} onChange={this.onChange} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n      <TextInput key='product' id='product' value={data.product} onChange={this.onChange} />\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} />\n      <TextInput key='description' id='description' value={data.description} onChange={this.onChange} />\n      <SelectInput key='location_id' id='location_id' label='Location' value={data.location_id} onChange={this.onChange}>{this.state.locations.map((row,idx) => <option key={'ii_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <DateInput key='receive_date' id='receive_date' label='Received' value={data.receive_date} onChange={this.onChange} />\n      <TextInput key='purchase_order' id='purchase_order' label='Purchase Order' value={data.purchase_order} onChange={this.onChange} />\n      <CheckboxInput key='license' id='license' value={data.license} onChange={this.onChange} />\n      {(data.license && <TextInput key='license_key' id='license_key' label='Key' value={data.license_key} onChange={this.onChange} />)}\n      <CheckboxInput key='support_contract' id='support_contract' value={data.support_contract} onChange={this.onChange} />\n      {(data.support_contract && <DateInput key='support_end_date' id='support_end_date' label='Contract End' value={data.support_end_date} onChange={this.onChange} />)}\n      <TextInput key='comments' id='comments' value={data.comments} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='inv_btn_reload' onClick={() => this.componentDidMount() } />\n     {data.serial && <SaveButton key='inv_btn_save' onClick={() => this.updateInfo()} title='Save' />}\n    </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Vendor **************\n//\nclass Vendor extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/vendor_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'search_' +row.vendor} text={row.vendor} onClick={() => this.changeContent(<List key='inventory_list' args={{field:'vendor', search:row.vendor}} />)} />,row.count]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Vendors' thead={['Name','Count']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list', { extra:['vendor','product','description'], sort:'vendor'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.vendor,row.model,row.product,row.description]\n\n render(){\n  return <ContentReport key='inv_cr' header='Inventory' thead={['ID','Serial','Vendor','Model','Product','Description']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n"],"names":["Main","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","compileNavItems","context","loadNavigation","_jsxs","NavBar","children","NavDropDown","title","_jsx","NavDropButton","onClick","changeContent","Search","changeSelf","Vendor","List","NavButton","changeLocation","then","lib","setState","elem","_createClass","key","value","this","prevProps","props","_Fragment","state","Component","contextType","RimsContext","_Component2","_super2","_this2","listItem","row","id","serial","model","InfoButton","Info","DeleteButton","deleteList","window","confirm","post_call","result","deleted","data","filter","searchfield","_this3","_this4","inv_list","includes","ContentList","header","thead","trows","ReloadButton","componentDidMount","AddButton","rnd","SearchField","searchFire","s","placeholder","ContentData","mountUpdate","fun","Spinner","_Component3","_super3","_this5","onChange","e","_objectSpread","_defineProperty","target","name","type","field","search","_this6","LineArticle","SelectInput","TextInput","SearchButton","_Component4","_super4","_this7","content","updateInfo","op","found","_this8","_this9","InfoArticle","InfoColumns","vendor","label","product","description","location_id","locations","map","idx","DateInput","receive_date","purchase_order","CheckboxInput","license","license_key","support_contract","support_end_date","comments","SaveButton","_Component5","_super5","_this10","HrefButton","text","count","_this11","_this12","Report","_Component6","_super6","_this13","_this14","extra","sort","ContentReport"],"sourceRoot":""}
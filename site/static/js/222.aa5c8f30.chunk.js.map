{"version":3,"file":"static/js/222.aa5c8f30.chunk.js","mappings":"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","sources":["webpack://rims-frontend/./src/infra/rack.module.css?02f7","rack.jsx","location.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"rack\":\"rack_rack__l-0E+\",\"rackLeft\":\"rack_rackLeft__jopWv\",\"rackRight\":\"rack_rackRight__cbJDU\",\"rackItem\":\"rack_rackItem__UiGLd\"};","import React, { Component } from 'react';\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SelectInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, GoButton, InfoButton, ItemsButton, ReloadButton, SaveButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx'\nimport styles from './infra/rack.module.css';\n\nimport { Main as DeviceMain, Info as DeviceInfo } from './device.jsx';\nimport { List as LocationList, Info as LocationInfo } from './location.jsx';\n\n// *************** Main ***************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='rack_list' />\n }\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='rack_navbar'>\n   <NavDropDown key='dev_nav_racks' title='Rack'>\n    <NavDropButton key='dev_nav_all_rack' title='Racks' onClick={() => this.changeContent(<List key='rack_list' />)} />\n    <NavDropButton key='dev_nav_all_pdu' title='PDUs' onClick={() => this.changeContent(<Infra key='pdu_list' type='pdu' />)} />\n    <NavDropButton key='dev_nav_all_con' title='Consoles' onClick={() => this.changeContent(<Infra key='console_list' type='console' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_loc' title='Locations' onClick={() => this.changeContent(<LocationList key='location_list' />)}/>\n  </NavBar>)\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <>{this.state}</>\n }\n}\nMain.contextType = RimsContext;\n\n// *************** List ***************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/list',{sort:'name'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'rl_btn_loc_'+row.id} text={row.location} onClick={() => this.changeContent(<LocationInfo key={'li_'+row.location_id} id={row.location_id} />)} />,row.name,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key={'rack_info_'+row.id} id={row.id} />)} title='Rack information' />\n   <GoButton key='go' onClick={() => this.context.changeMain(<DeviceMain key={'rack_device_'+row.id} rack_id={row.id} />)} title='Rack inventory' />\n   <ItemsButton key='items' onClick={() => this.changeContent(<Layout key={'rack_layout_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title='Rack layout'/>\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete rack' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete rack?') && post_call('api/rack/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Racks' thead={['Location','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key={'rack_new_' + rnd()} id='new' />)} title='Add rack' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nList.contextType = RimsContext;\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  post_call('api/rack/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/rack/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return <InfoArticle key='rack_article' header='Rack'>\n    <InfoColumns key='rack_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <TextInput key='size' id='size' value={this.state.data.size} onChange={this.onChange} />\n     <SelectInput key='console' id='console' value={this.state.data.console} onChange={this.onChange}>{this.state.consoles.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='location_id' id='location_id' label='Location' value={this.state.data.location_id} onChange={this.onChange}>{this.state.locations.map(row => <option key={row.id} value={row.id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='pdu_1' id='pdu_1' label='PDU1' value={this.state.data.pdu_1} onChange={this.onChange}>{this.state.pdus.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='pdu_2' id='pdu_2' label='PDU2' value={this.state.data.pdu_2} onChange={this.onChange}>{this.state.pdus.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n    </InfoColumns>\n    <SaveButton key='ri_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// *************** Layout ***************\n//\nexport class Layout extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/devices',{id:this.props.id}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => {\n  if(this.props.changeSelf)\n   this.props.changeSelf(elem);\n }\n\n createRack(id,content,sign){\n  const rack = [];\n  for (let i = 1; i < this.state.size+1; i++)\n   rack.push(<div key={'left_'+i} className={styles.rackLeft} style={{gridRow:-i}}>{i}</div>,<div key={'right_'+i} className={styles.rackRight} style={{gridRow:-i}}>{i}</div>)\n  content.forEach(dev => rack.push(<div key={'dev_' + dev.id} className={styles.rackItem} style={{gridRowStart:this.state.size+2-sign*dev.rack_unit, gridRowEnd:this.state.size+2-(sign*dev.rack_unit+dev.rack_size)}}><HrefButton key={'rd_btn_'+dev.id} style={{color:'var(--ui-txt-color)'}} onClick={() => this.changeContent(<DeviceInfo key='device_info' id={dev.id} />)} text={dev.hostname} /></div>))\n  return <div className={styles.rack} style={{grid:`repeat(${this.state.size-1}, 2vw)/2vw 25vw 2vw`}}>{rack}</div>\n }\n\n render(){\n  if (this.state.size) {\n   return <>\n    <InfoArticle key='rl_front' header='Front'>\n     {this.createRack('front',this.state.front,1)}\n    </InfoArticle>\n    <InfoArticle key='rl_back' header='Back'>\n     {this.createRack('back',this.state.back,-1)}\n    </InfoArticle>\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Infra ***************\n//\nexport class Infra extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:this.props.type,extra:['type']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'dev_'+row.id} text={row.id} onClick={() => this.changeContent(<DeviceInfo key={'device_' + row.id} id={row.id} />)} title='Device info'/>,row.hostname,<InfoButton key={'rinfra_btn_' + row.id} onClick={() => this.context.changeMain({module:row.type_base,function:'Manage',args:{device_id:row.id, type:row.type_name}})} title='Manage device' />]\n\n render(){\n  return <>\n   <ContentList key='cl' header={this.props.type} thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nInfra.contextType = RimsContext;\n","import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row) => [row.id,row.name,<>\n   <ConfigureButton key='conf' onClick={() => this.changeContent(<Info key='location' id={row.id} />)} title='Edit location' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </>]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='location' id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidUpdate(prevProps,prevState){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_loc'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='ia_loc' header='Location'>\n     <InfoColumns key='ic'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n"],"names":["Main","Component","constructor","props","super","compileNavItems","this","context","loadNavigation","_jsxs","NavBar","children","NavDropDown","title","_jsx","NavDropButton","onClick","changeContent","List","Infra","type","NavButton","LocationList","elem","setState","state","componentDidMount","componentDidUpdate","prevProps","render","_Fragment","contextType","RimsContext","listItem","row","HrefButton","text","location","LocationInfo","id","location_id","name","InfoButton","Info","GoButton","changeMain","DeviceMain","rack_id","ItemsButton","Layout","changeSelf","DeleteButton","deleteList","window","confirm","post_call","then","result","deleted","data","filter","sort","ContentList","header","thead","trows","ReloadButton","AddButton","rnd","ContentData","mountUpdate","fun","onChange","e","target","value","updateInfo","op","found","InfoArticle","InfoColumns","TextInput","size","SelectInput","console","consoles","map","hostname","label","locations","pdu_1","pdus","pdu_2","SaveButton","Spinner","createRack","content","sign","rack","i","push","className","styles","style","gridRow","forEach","dev","gridRowStart","rack_unit","gridRowEnd","rack_size","color","DeviceInfo","grid","front","back","module","type_base","function","args","device_id","type_name","field","search","extra","ConfigureButton","prevState"],"sourceRoot":""}
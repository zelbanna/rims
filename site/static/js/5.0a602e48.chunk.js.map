{"version":3,"file":"static/js/5.0a602e48.chunk.js","mappings":"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","sources":["pdu.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Flex, InfoArticle, InfoColumns, Spinner, ContentList, ContentData, Result } from './infra/UI.jsx';\nimport { TextInput, TextLine } from './infra/Inputs.jsx';\nimport { HrefButton, ReloadButton, SaveButton, SearchButton, StartButton, StopButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavInfo } from './infra/Navigation.jsx';\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n componentDidMount(){\n  post_call('api/device/hostname',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='pdu_navbar'>\n    <NavInfo key='pdu_nav_name' title={result.data} />\n    <NavButton key='pdu_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='pdu_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    <NavButton key='pdu_nav_info' title='Info' onClick={() => this.changeContent(<Info key='pdu_info' device_id={this.props.device_id} type={this.props.type} />)} />\n   </NavBar>)\n  })\n  this.setState(<Inventory key='pdu_inventory' device_id={this.props.device_id} type={this.props.type} />);\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <>{this.state}</>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Info **************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/info',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n lookupSlots = () => post_call('api/devices/'+this.props.type+'/info',{device_id:this.props.device_id,op:'lookup'}).then(result => this.setState(result))\n\n render(){\n  if (this.state.data){\n   let slots = [];\n   for (let i = 0; i < this.state.data.slots; i++){\n    slots.push(<TextLine key={'pi_sn_' + i} id={'pi_slot_name_' + i} label={'Slot ' + i + ' Name'} text={this.state.data[i + '_slot_name']} />);\n    slots.push(<TextLine key={'pi_si_' + i} id={'pi_slot_id_' + i} label={'Slot ' + i + ' ID'} text={this.state.data[i + '_slot_id']} />);\n   }\n   return <Flex key='pi_flex' style={{justifyContent:'space-evenly'}}>\n    <InfoArticle key='pi_article' header={'PDU Device Info - '+this.props.type}>\n     <InfoColumns key='pi_info'>\n      <TextLine key='pi_slots' id='slots' label='Right/Left slots' text={JSON.stringify(this.state.data.slots === 2)} />\n      {slots}\n     </InfoColumns>\n     <ReloadButton key='pi_btn_reload' onClick={() => this.componentDidMount() } />\n     <SearchButton key='pi_btn_search' onClick={() => this.lookupSlots() } />\n    </InfoArticle>\n   </Flex>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n listItem = (row,idx) => [`${row.slotname}.${row.unit}`,<HrefButton key={'inv_' + idx} onClick={() => this.changeContent(<Unit key={'pdu_unit_'+idx} device_id={this.props.device_id} type={this.props.type} {...row} />)} text={row.name} title='Edit port info' />,<Operation key={'state_'+idx} idx={idx} device_id={this.props.device_id} type={this.props.type} {...row} />]\n\n render(){\n  if (this.state.data){\n   return <>\n    <ContentList key='cl' header='Inventory' thead={['Position','Device','State']} trows={this.state.data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component{\n constructor(props){\n  super(props)\n  this.state = {state:this.props.state, status:'',wait:null};\n }\n\n operation = (state) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/op',{device_id:this.props.device_id, slot:this.props.slot, unit:this.props.unit, state:state}).then(result => this.setState({...result, wait:null}));\n }\n\n render(){\n  const off = (this.state.state === 'off');\n  return <>\n   {off && <StartButton key='start' onClick={() => this.operation('on')} title={this.state.status} />}\n   {!off && <StopButton key='stop' onClick={() => this.operation('off')} title={this.state.status} />}\n   {!off && <ReloadButton key='reload' onClick={() => this.operation('reboot')} title={this.state.status} />}\n   {this.state.wait}\n  </>\n }\n}\n\n// ************** Unit **************\n//\nclass Unit extends Component {\n constructor(props){\n  super(props)\n  this.state = {text:this.props.name,wait:null}\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n updatePDU = () => {\n  this.setState({wait:<Spinner />, info:undefined});\n  post_call('api/devices/'+this.props.type+'/update',{op:'update',device_id:this.props.device_id,slot:this.props.slot,unit:this.props.unit,text:this.state.text}).then(result => this.setState({...result,wait:null}));\n }\n\n render(){\n  let result = ''\n  if (this.state.status)\n   result = (this.state.status === 'OK') ? 'OK' : this.state.info;\n  return <InfoArticle key='pu_article'>\n   <InfoColumns key='pu_info'>\n    <TextLine key='pu_slot_unit' id='su' label='Slot.Unit' text={`${this.props.slotname}.${this.props.unit}`} />\n    <TextInput key='pu_slot_text' id='text' value={this.state.text} onChange={this.onChange} />\n   </InfoColumns>\n   <Result key='pu_result' result={result} />\n   <SaveButton key='pu_btn_save' onClick={() => this.updatePDU()} title='Update pdu' />\n   {this.state.wait}\n  </InfoArticle>\n }\n}\n"],"names":["Manage","Component","constructor","arguments","changeContent","elem","this","setState","componentDidMount","post_call","id","props","device_id","then","result","context","loadNavigation","_jsxs","NavBar","children","_jsx","NavInfo","title","data","NavButton","onClick","Inventory","type","Info","render","_Fragment","state","contextType","RimsContext","super","lookupSlots","op","slots","i","push","TextLine","label","text","Flex","style","justifyContent","InfoArticle","header","InfoColumns","JSON","stringify","ReloadButton","SearchButton","Spinner","listItem","row","idx","slotname","unit","HrefButton","Unit","name","Operation","ContentList","thead","trows","undefined","ContentData","mountUpdate","fun","operation","wait","slot","status","off","StartButton","StopButton","onChange","e","target","value","updatePDU","info","TextInput","Result","SaveButton"],"sourceRoot":""}
{"version":3,"sources":["hypervisor.jsx"],"names":["Main","props","listItem","row","up","ip_state","hostname","type_name","state","type_functions","onClick","context","changeMain","Manage","device_id","id","type","url","length","window","open","post_call","field","search","extra","sort","then","result","setState","header","thead","trows","this","data","changeContent","Sync","mountUpdate","fun","Component","contextType","RimsContext","host_id","vm","device_uuid","config","entries","forEach","hasOwnProperty","entry","push","elem","content","loadNavigation","title","Inventory","sortList","method","a","b","name","localeCompare","Operation","vm_id","e","searchfield","filter","toLowerCase","includes","text","highlight","undefined","componentDidMount","searchFire","s","placeholder","operation","op","wait","snapshot","status","on","off","Info","changeSelf","Snapshots","onChange","target","value","changeImport","iif","lib","class","mac","interface_id","description","port","prevProps","update","vm_if","columns","label","device_name","snmp_id","Object","interfaces","map","interfaceButton","updateInfo","syncDatabase","JSON","stringify","deleteList","confirm","deleted","highest","parseInt","desc","created"],"mappings":"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","file":"static/js/15.235e5a0d.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Result, Spinner, StateLeds, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, GoButton, HeaderButton, InfoButton, ItemsButton, PauseButton, RevertButton, ReloadButton, SaveButton, ShutdownButton, SnapshotButton, StartButton, StopButton, SyncButton, UiButton } from './infra/Buttons.jsx';\nimport { SearchField, StateLine, TextInput, TextLine } from './infra/Inputs.jsx';\nimport { NavBar, NavInfo, NavButton } from './infra/Navigation.jsx';\n\nimport { Info as DeviceInfo } from './device.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:'hypervisor',extra:['type','functions','url'],sort:'hostname'}).then(result => this.setState(result))\n }\n\n listItem = (row) => {\n  const up =  (row.ip_state === 'up');\n  return [row.hostname,row.type_name,<>\n   <StateLeds key='state' state={row.ip_state} />\n   {up && row.type_functions === 'manage' && <InfoButton key='info' onClick={() => this.context.changeMain(<Manage key={'hypervisor_manage_'+row.id} device_id={row.id} type={row.type_name} />)} />}\n   {up && row.url && row.url.length > 0 && <UiButton key='ui' onClick={() => window.open(row.url,'_blank') } />}\n   </>]\n }\n\n render(){\n  return <>\n   <ContentList key='cl' header='Hypervisor' thead={['Hostname','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <SyncButton key='sync' onClick={() => this.changeContent(<Sync key='vm_sync' />) } />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Sync **************\n//\nclass Sync extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/vm_mapping',{device_id:this.props.device_id}).then(result => {\n    let entries = [];\n    ['existing','inventory','discovered','database'].forEach(type => {\n     if (result.hasOwnProperty(type))\n      result[type].forEach(entry => { entry.type = type; entries.push(entry); })\n    })\n    this.setState({data:entries})\n   })\n }\n\n listItem = (row) => [row.type,row.host_id,row.device_id,row.vm,row.device_uuid,row.config]\n\n render(){\n  return <ContentReport key='hyp_cr' header='VM Mapping' thead={['Status','Host','Device','VM Name','Device UUID','Config']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/management',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='hypervisor_navbar'>\n    <NavButton key='hyp_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    {result.data.url && (result.data.url.length > 0) && <NavButton key='hyp_nav_ui' title='UI' onClick={() => window.open(result.data.url,'_blank')} />}\n    <NavInfo key='hyp_nav_name' title={result.data.hostname} />\n   </NavBar>);\n   this.setState({...result,content:<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />});\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <>{this.state.content}</>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {sort:'name', searchfield:''}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id, sort: this.state.sort}).then(result => this.setState(result))\n }\n\n sortList = (method) => {\n  const data = this.state.data;\n  if (method === 'name')\n   data.sort((a,b) => a.name.localeCompare(b.name));\n  else\n   data.sort((a,b) => (a.id - b.id))\n  this.setState({sort:method})\n }\n\n listItem = (row) => [row.id,row.name,<Operation key={'hl_op_'+row.id} vm_id={row.id} device_id={this.props.device_id} type={this.props.type} changeContent={(e) => this.changeContent(e)} state={row.state} />]\n\n render(){\n  if (this.state.data){\n   const searchfield = this.state.searchfield;\n   const data = (searchfield.length === 0) ? this.state.data : this.state.data.filter(row => (row.name.toLowerCase().includes(searchfield)));\n   const thead = [<HeaderButton key='id' text='ID' highlight={(this.state.sort === 'id')} onClick={() => this.sortList('id')} />,<HeaderButton key='vm' text='VM' highlight={(this.state.sort === 'name')} onClick={() => this.sortList('name')} />,'Operations'];\n   return <>\n    <ContentList key='cl' header='Inventory' thead={thead} trows={data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n     <SyncButton key='sync' onClick={() => this.changeContent(<Sync key='vm_sync' device_id={this.props.device_id}/>)} title='Map VMs' />\n     <SearchField key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search inventory' />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component{\n constructor(props){\n  super(props)\n  this.state = {state:this.props.state, status:'',wait:null};\n }\n\n operation = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_op',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n snapshot = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n render(){\n   const on = (this.state.state === 'on');\n   const off = (this.state.state === 'off');\n   return <>\n    <InfoButton key='info' onClick={() => this.props.changeContent(<Info key='hypervisor_info' device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} changeSelf={this.props.changeContent} />)} title='VM info' />\n    {(off || this.state.state === 'suspended')  && <StartButton key='start' onClick={() => this.operation('on')} title={this.state.status} />}\n    {on && <StopButton key='stop' onClick={() => this.operation('shutdown')} title={this.state.status} />}\n    {on && <ReloadButton key='reload' onClick={() => this.operation('reboot')} title={this.state.status} />}\n    {on && <PauseButton key='suspend' onClick={() => this.operation('suspend')} title={this.state.status} />}\n    {(on || this.state.state === 'suspended') && <ShutdownButton key='shutdown' onClick={() => this.operation('off')} title={this.state.status} />}\n    {off && <SnapshotButton key='snapshot' onClick={() => this.snapshot('create')} title='Take snapshot' />}\n    {off && <ItemsButton key='snapshots' onClick={() => this.props.changeContent(<Snapshots key={'hypervisor_snapshots_'+this.props.vm_id} device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} />)} title='Snapshot info' />}\n    {this.state.wait}\n   </>\n }\n}\n\n// ************ Info *************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n changeContent = (elem) => this.setState({content:elem});\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id}).then(result => {\n   if (result.data.device_id === null)\n    result.data.device_id = '';\n   this.setState(result);\n  })\n }\n\n syncDatabase(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'update'}).then(result => this.setState(result))\n }\n\n updateInfo(){\n  post_call('api/devices/'+this.props.type+'/vm_map',{device_uuid:this.state.data.device_uuid, device_id:this.state.data.device_id, host_id:this.props.device_id, op:'update'}).then(result => this.setState({update:result.update}))\n }\n\n changeImport = (iif) => import('./interface.jsx').then(lib => this.setState({content:<lib.Info key='interface_info' device_id={this.state.data.device_id} class='virtual' mac={iif.mac} name={iif.name} interface_id={iif.interface_id} description={iif.port} changeSelf={this.changeContent} />}))\n\n interfaceButton(vm_if,iif){\n  if(this.state.data.device_id){\n   if (iif.interface_id)\n    return <InfoButton key='info' onClick={() => this.changeImport({interface_id:iif.interface_id})} />\n   else\n    return <AddButton key='add' onClick={() => this.changeImport({...iif, interface_id:'new'})} />\n  } else\n   return <div />\n }\n\n render(){\n  if (this.state.data) {\n   const data = this.state.data;\n   return <>\n    <InfoArticle key='hyp_article' header='VM info'>\n     <InfoColumns key='hyp_ic' columns={3}>\n      <TextLine key='name' id='name' text={data.name} /><div />\n      <TextInput key='device_id' id='device_id' label='Device ID' value={data.device_id} onChange={this.onChange} /><div />\n      <TextLine key='device_name' id='device' label='Device Name' text={data.device_name} /><div />\n      <TextLine key='snmp' id='snmp_id' label='SNMP id' text={data.snmp_id} /><div />\n      <TextLine key='uuid' id='uuid' label='UUID' text={data.device_uuid} /><div />\n      <StateLine key='state' id='state' state={data.state} /><div />\n      <TextLine key='config' id='config' text={data.config} /><div />\n      {Object.entries(this.state.interfaces).map(row => <Fragment key={row[0]}><TextLine key='interface' id={'interface_'+row[0]} label='Interface' text={`${row[1].name} - ${row[1].mac} - ${row[1].port}`} />{this.interfaceButton(row[0],row[1])}</Fragment>)}\n     </InfoColumns>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount()} title='Reload' />\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save mapping' />\n     <SyncButton key='sync' onClick={() => this.syncDatabase()} title='Resync database with VM info' />\n     {data.device_id && <GoButton key='go' onClick={() => this.changeSelf(<DeviceInfo key='device_info' id={data.device_id} changeSelf={this.props.changeSelf} />)} title='VM device info' />}\n     <Result key='result' result={JSON.stringify(this.state.update)} />\n    </InfoArticle>\n    <NavBar />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// ************ Snapshots *************\n//\nclass Snapshots extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.snapshot('list',undefined);\n }\n\n snapshot = (op,id) => {\n  this.setState({wait:<Spinner />});\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op, snapshot:id}).then(result => this.setState({...result, wait:null}));\n }\n\n deleteList = (id) => {\n  if (window.confirm('Really delete snapshot?')){\n   this.setState({wait:<Spinner />})\n   post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'remove', snapshot:id}).then(result => {\n    if(result.deleted){\n     let highest = 0;\n     const data = this.state.data.filter(row => (row.id !== id));\n     data.forEach(row => { highest = (highest < parseInt(row.id)) ? parseInt(row.id) : highest });\n     this.setState({data:data,highest:highest,wait:null});\n    }\n   })\n  }\n }\n\n listItem = (row) => [row.name,row.id,row.desc,row.created,row.state,<>\n  <RevertButton key='revert' onClick={() => this.snapshot('revert',row.id)} title='Revert to snapshot' />\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete snapshot' />\n </>]\n\n render(){\n  return <ContentReport key='hyp_snapshot_cr' header={`Snapshot (${this.props.vm_id}) Highest ID:${this.state.highest}`} thead={['Name','ID','Description','Created','State','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='reload' onClick={() => this.snapshot('list',undefined)} title='Reload list' />\n   {this.state.wait}\n  </ContentReport>\n }\n}\n"],"sourceRoot":""}
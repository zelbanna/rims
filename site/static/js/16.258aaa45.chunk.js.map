{"version":3,"sources":["inventory.jsx"],"names":["Main","compileNavItems","context","loadNavigation","key","title","onClick","changeContent","Search","changeSelf","Vendor","List","changeLocation","then","lib","setState","elem","this","prevProps","props","state","Component","contextType","RimsContext","listItem","row","id","serial","model","Info","deleteList","window","confirm","post_call","result","deleted","data","filter","searchfield","args","inv_list","length","includes","header","thead","trows","componentDidMount","rnd","searchFire","s","placeholder","mountUpdate","fun","onChange","e","target","name","type","field","search","value","content","updateInfo","op","found","vendor","label","product","description","location_id","locations","map","idx","receive_date","purchase_order","license","license_key","support_contract","support_end_date","comments","text","count","Report","extra","sort"],"mappings":"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","file":"static/js/16.258aaa45.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, LineArticle, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { TextInput, SearchInput, SelectInput, DateInput, CheckboxInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SearchButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems()\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='inventory_navbar'>\n   <NavDropDown key='inv_nav_inv' title='Inventory'>\n    <NavDropButton key='inv_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='search_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_vend' title='Vendor' onClick={() => this.changeContent(<Vendor key='vendor_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_list' title='List'   onClick={() => this.changeContent(<List key='list' changeSelf={this.changeContent} />)} />\n   </NavDropDown>\n   <NavButton key='inv_nav_loc' title='Locations' onClick={() => this.changeLocation()} />\n  </NavBar>)\n\n changeLocation = () => import('./location.jsx').then(lib => this.setState(<lib.List key='location_list' />));\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return <>{this.state}</>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list',this.props.args).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.model,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key={'inventory_'+row.id} id={row.id} />) } title='View inventory item' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete inventory item' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete item') && post_call('api/inventory/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  if (!this.state.data)\n   return <Spinner />\n  else {\n   const inv_list = (this.state.searchfield.length === 0) ? this.state.data : this.state.data.filter(row => (row.model.includes(this.state.searchfield) || row.serial.includes(this.state.searchfield)));\n   return <>\n    <ContentList key='cl' header='Inventory' thead={['ID','Serial','Model','']} trows={inv_list} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n     <AddButton key='add' onClick={() => this.changeContent(<Info key={'inventory_new_' + rnd()} id='new' />) } title='Add inventory item' />\n     <SearchInput key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search inventory (case sensitive)' />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  }\n }\n}\n\n// ************** Search **************\n//\nclass Search extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{field:'serial',search:''}}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n render() {\n  return <LineArticle key='inv_srch_art' header='Inventory search'>\n   <SelectInput key='field' id='field' value={this.state.data.field} onChange={this.onChange}><option value='serial'>Serial</option><option value='vendor'>Vendor</option></SelectInput>\n   <TextInput key='search' id='search' value={this.state.data.search} placeholder='search' onChange={this.onChange} />\n   <SearchButton key='inv_btn_search' onClick={() => this.changeContent(<List key='inventory_list' args={this.state.data} />)} title='Search inventory' />\n  </LineArticle>\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidMount(){\n  post_call('api/inventory/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/inventory/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (this.state.data){\n   const data = this.state.data;\n   return <InfoArticle key='inv_article' header='Inventory Item'>\n     <InfoColumns key='inv_content'>\n      <TextInput key='vendor' id='vendor' value={data.vendor} onChange={this.onChange} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n      <TextInput key='product' id='product' value={data.product} onChange={this.onChange} />\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} />\n      <TextInput key='description' id='description' value={data.description} onChange={this.onChange} />\n      <SelectInput key='location_id' id='location_id' label='Location' value={data.location_id} onChange={this.onChange}>{this.state.locations.map((row,idx) => <option key={'ii_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <DateInput key='receive_date' id='receive_date' label='Received' value={data.receive_date} onChange={this.onChange} />\n      <TextInput key='purchase_order' id='purchase_order' label='Purchase Order' value={data.purchase_order} onChange={this.onChange} />\n      <CheckboxInput key='license' id='license' value={data.license} onChange={this.onChange} />\n      {(data.license && <TextInput key='license_key' id='license_key' label='Key' value={data.license_key} onChange={this.onChange} />)}\n      <CheckboxInput key='support_contract' id='support_contract' value={data.support_contract} onChange={this.onChange} />\n      {(data.support_contract && <DateInput key='support_end_date' id='support_end_date' label='Contract End' value={data.support_end_date} onChange={this.onChange} />)}\n      <TextInput key='comments' id='comments' value={data.comments} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='inv_btn_reload' onClick={() => this.componentDidMount() } />\n     {data.serial && <SaveButton key='inv_btn_save' onClick={() => this.updateInfo()} title='Save' />}\n    </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Vendor **************\n//\nclass Vendor extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/vendor_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'search_' +row.vendor} text={row.vendor} onClick={() => this.changeContent(<List key='inventory_list' args={{field:'vendor', search:row.vendor}} />)} />,row.count]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Vendors' thead={['Name','Count']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list', { extra:['vendor','product','description'], sort:'vendor'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.vendor,row.model,row.product,row.description]\n\n render(){\n  return <ContentReport key='inv_cr' header='Inventory' thead={['ID','Serial','Vendor','Model','Product','Description']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["node.jsx"],"names":["List","props","listItem","row","node","url","key","onClick","changeContent","Info","id","title","deleteList","elem","setState","content","window","confirm","post_call","then","result","deleted","data","state","filter","header","thead","trows","this","componentDidMount","Component","searchInfo","found","hostname","device_id","onChange","e","target","name","value","updateInfo","op","prevProps","old","Reload","LogShow","LogClear","modules","join","logs","file","Object","entries","map","log","idx"],"mappings":"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","file":"static/js/17.05c4285b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport {Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { TextInput, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, LogButton, ReloadButton, SaveButton, SearchButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props);\n  this.state = {};\n }\n\n componentDidMount(){\n  post_call('api/master/node_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.url,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key='node_info' id={row.id} />)} title='Node information' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete node' />\n  </>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete node?') && post_call('api/master/node_delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Nodes' thead={['Node','URL','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='node_info' id='new' />)} title='Add node' />\n   </ContentList>\n   <ContentData key='cd'>{this.state.content}</ContentData>\n  </>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true, content:null};\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props)\n   post_call('api/master/node_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n componentDidMount(){\n  post_call('api/master/node_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n searchInfo = () => post_call('api/device/search',{node:this.state.data.node}).then(result => result.found && this.setState({data:{...this.state.data, hostname:result.data.hostname, device_id:result.data.id}}))\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () =>  post_call('api/master/node_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_node'>Node with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data) {\n   const old = (this.state.data.id !== 'new');\n   return <>\n    <InfoArticle key='ia_node' header='Node'>\n     <InfoColumns key='ic'>\n      <TextInput key='node' id='node' value={this.state.data.node} onChange={this.onChange} />\n      <UrlInput key='url' id='url' value={this.state.data.url}  onChange={this.onChange} />\n      <TextInput key='hostname' id='hostname' value={this.state.data.hostname} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save information' />\n     {old && !this.state.data.hostname && <SearchButton key='search' onClick={this.searchInfo} title='Try to map node to device' />}\n     {old && <ReloadButton key='reload' onClick={() => this.changeContent(<Reload key={'node_reload'} node={this.state.data.node} />)} />}\n     {old && <LogButton key='logs' onClick={() => this.changeContent(<LogShow key={'node_logs'} node={this.state.data.node} />)} title='View node logs' />}\n     {old && <DeleteButton key='logc' onClick={() => this.changeContent(<LogClear key={'node_logc'} node={this.state.data.node} />)} title='Clear logs' />}\n    </InfoArticle>\n    <NavBar key='node_navigation' id='node_navigation' />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Reload ***************\n//\nclass Reload extends Component {\n\n componentDidMount(){\n  post_call('api/system/reload',{},{'X-Route':this.props.node}).then(result => this.setState(result))\n }\n\n render(){\n  return (!this.state) ? <Spinner /> : <CodeArticle key='nr_code' header='Module'>{this.state.modules.join('\\n')}</CodeArticle>\n }\n}\n\n// *************** LogClear ***************\n//\nclass LogClear extends Component {\n\n componentDidMount(){\n  post_call('api/system/logs_clear',{},{'X-Route':this.props.node}).then(result => this.setState({logs:result.file}))\n }\n\n render(){\n  return (!this.state) ? <Spinner /> : <CodeArticle key='nc_code' header='Cleared'>{(Object.entries(this.state.logs).map(log => `${log[0]}: ${log[1]}`)).join('\\n')}</CodeArticle>\n }\n}\n\n// *************** LogShow ***************\n//\nexport class LogShow extends Component {\n\n componentDidMount(){\n  post_call('api/system/logs_get',{},{'X-Route':this.props.node}).then(result => this.setState({logs:result}))\n }\n\n render(){\n  return (!this.state) ? <Spinner /> : <div>{Object.entries(this.state.logs).map((log,idx) => <CodeArticle key={idx} header={log[0]}>{log[1].join('\\n')}</CodeArticle>)}</div>\n }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["location.jsx","rack.jsx","infra/rack.module.css"],"names":["List","props","deleteList","id","window","confirm","post_call","then","result","deleted","setState","data","state","filter","row","changeContent","listItem","name","key","onClick","Info","title","header","thead","trows","this","componentDidMount","mountUpdate","fun","Component","onChange","e","target","value","updateInfo","op","found","prevProps","prevState","Main","compileNavItems","context","loadNavigation","Infra","type","elem","contextType","RimsContext","text","location","location_id","changeMain","rack_id","Layout","changeSelf","sort","rnd","size","console","consoles","map","hostname","label","locations","pdu_1","pdus","pdu_2","content","sign","rack","i","push","className","styles","rackLeft","style","gridRow","rackRight","forEach","dev","rackItem","gridRowStart","rack_unit","gridRowEnd","rack_size","color","grid","createRack","front","back","module","type_base","function","args","device_id","type_name","field","search","extra","exports"],"mappings":"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","file":"static/js/9.6a578e92.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row) => [row.id,row.name,<>\n   <ConfigureButton key='conf' onClick={() => this.changeContent(<Info key='location' id={row.id} />)} title='Edit location' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </>]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='location' id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidUpdate(prevProps,prevState){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_loc'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='ia_loc' header='Location'>\n     <InfoColumns key='ic'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n","import React, { Component } from 'react';\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SelectInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, GoButton, InfoButton, ItemsButton, ReloadButton, SaveButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx'\nimport styles from './infra/rack.module.css';\n\nimport { Main as DeviceMain, Info as DeviceInfo } from './device.jsx';\nimport { List as LocationList, Info as LocationInfo } from './location.jsx';\n\n// *************** Main ***************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='rack_list' />\n }\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='rack_navbar'>\n   <NavDropDown key='dev_nav_racks' title='Rack'>\n    <NavDropButton key='dev_nav_all_rack' title='Racks' onClick={() => this.changeContent(<List key='rack_list' />)} />\n    <NavDropButton key='dev_nav_all_pdu' title='PDUs' onClick={() => this.changeContent(<Infra key='pdu_list' type='pdu' />)} />\n    <NavDropButton key='dev_nav_all_con' title='Consoles' onClick={() => this.changeContent(<Infra key='console_list' type='console' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_loc' title='Locations' onClick={() => this.changeContent(<LocationList key='location_list' />)}/>\n  </NavBar>)\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <>{this.state}</>\n }\n}\nMain.contextType = RimsContext;\n\n// *************** List ***************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/list',{sort:'name'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'rl_btn_loc_'+row.id} text={row.location} onClick={() => this.changeContent(<LocationInfo key={'li_'+row.location_id} id={row.location_id} />)} />,row.name,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key={'rack_info_'+row.id} id={row.id} />)} title='Rack information' />\n   <GoButton key='go' onClick={() => this.context.changeMain(<DeviceMain key={'rack_device_'+row.id} rack_id={row.id} />)} title='Rack inventory' />\n   <ItemsButton key='items' onClick={() => this.changeContent(<Layout key={'rack_layout_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title='Rack layout'/>\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete rack' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete rack?') && post_call('api/rack/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Racks' thead={['Location','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key={'rack_new_' + rnd()} id='new' />)} title='Add rack' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nList.contextType = RimsContext;\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  post_call('api/rack/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/rack/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return <InfoArticle key='rack_article' header='Rack'>\n    <InfoColumns key='rack_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <TextInput key='size' id='size' value={this.state.data.size} onChange={this.onChange} />\n     <SelectInput key='console' id='console' value={this.state.data.console} onChange={this.onChange}>{this.state.consoles.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='location_id' id='location_id' label='Location' value={this.state.data.location_id} onChange={this.onChange}>{this.state.locations.map(row => <option key={row.id} value={row.id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='pdu_1' id='pdu_1' label='PDU1' value={this.state.data.pdu_1} onChange={this.onChange}>{this.state.pdus.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='pdu_2' id='pdu_2' label='PDU2' value={this.state.data.pdu_2} onChange={this.onChange}>{this.state.pdus.map(row => <option key={row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n    </InfoColumns>\n    <SaveButton key='ri_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// *************** Layout ***************\n//\nexport class Layout extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/devices',{id:this.props.id}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => {\n  if(this.props.changeSelf)\n   this.props.changeSelf(elem);\n }\n\n createRack(id,content,sign){\n  const rack = [];\n  for (let i = 1; i < this.state.size+1; i++)\n   rack.push(<div key={'left_'+i} className={styles.rackLeft} style={{gridRow:-i}}>{i}</div>,<div key={'right_'+i} className={styles.rackRight} style={{gridRow:-i}}>{i}</div>)\n  content.forEach(dev => rack.push(<div key={'dev_' + dev.id} className={styles.rackItem} style={{gridRowStart:this.state.size+2-sign*dev.rack_unit, gridRowEnd:this.state.size+2-(sign*dev.rack_unit+dev.rack_size)}}><HrefButton key={'rd_btn_'+dev.id} style={{color:'var(--ui-txt-color)'}} onClick={() => this.changeContent(<DeviceInfo key='device_info' id={dev.id} />)} text={dev.hostname} /></div>))\n  return <div className={styles.rack} style={{grid:`repeat(${this.state.size-1}, 2vw)/2vw 25vw 2vw`}}>{rack}</div>\n }\n\n render(){\n  if (this.state.size) {\n   return <>\n    <InfoArticle key='rl_front' header='Front'>\n     {this.createRack('front',this.state.front,1)}\n    </InfoArticle>\n    <InfoArticle key='rl_back' header='Back'>\n     {this.createRack('back',this.state.back,-1)}\n    </InfoArticle>\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Infra ***************\n//\nexport class Infra extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:this.props.type,extra:['type']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'dev_'+row.id} text={row.id} onClick={() => this.changeContent(<DeviceInfo key={'device_' + row.id} id={row.id} />)} title='Device info'/>,row.hostname,<InfoButton key={'rinfra_btn_' + row.id} onClick={() => this.context.changeMain({module:row.type_base,function:'Manage',args:{device_id:row.id, type:row.type_name}})} title='Manage device' />]\n\n render(){\n  return <>\n   <ContentList key='cl' header={this.props.type} thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\nInfra.contextType = RimsContext;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rack\":\"rack_rack__2xnnq\",\"rackLeft\":\"rack_rackLeft__1E8o9\",\"rackRight\":\"rack_rackRight__1Jn29\",\"rackItem\":\"rack_rackItem__2yVLG\"};"],"sourceRoot":""}
{"version":3,"file":"static/js/498.e8a2cea4.chunk.js","mappings":"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","sources":["server.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { SelectInput, TextLine, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, CheckButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SyncButton, SearchButton, StartButton, StopButton, UiButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.service,row.type,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key='server_info' id={row.id} />)} title='Service information' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete service' />\n   {row.hasOwnProperty('ui') && row.ui.length > 0 && <UiButton key='ui' onClick={() =>  window.open(row.ui,'_blank')} title='Server UI' />}\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete service?') && post_call('api/master/server_delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Servers' thead={['Node','Service','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='server_info' id='new' type={this.props.type} />)} title='Add service' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.componentDidMount()\n }\n\n componentDidMount(){\n  post_call('api/master/server_info',{id:this.props.id}).then(result => {\n   if (!result.data.node)\n    result.data.node = result.nodes[0];\n   if (!result.data.type_id)\n    result.data.type_id = result.services[0].id;\n   this.setState({...result, content:null});\n   })\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/master/server_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='si_art_nf'>Server with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data){\n   const id = this.state.data.id;\n   const old = (id !== 'new');\n   return <>\n    <InfoArticle key='ia' header='Server'>\n     <InfoColumns key='ic'>\n      <TextLine key='server' id='server' label='ID' text={id} />\n      <SelectInput key='node' id='node' value={this.state.data.node} onChange={this.onChange}>{this.state.nodes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Service' value={this.state.data.type_id} onChange={this.onChange}>{this.state.services.map(row => <option key={row.id} value={row.id}>{`${row.service} (${row.type})`}</option>)}</SelectInput>\n      <UrlInput key='ui' id='ui' label='UI' value={this.state.data.ui} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n     {old && <SyncButton key='sync' onClick={() => this.changeContent(<Operation key='srv_op_sync' id={id} operation='sync' />)} title='Sync service' />}\n     {old && <ReloadButton key='restart' onClick={() => this.changeContent(<Operation key='srv_op_rst'  id={id} operation='restart' />)} title='Restart service' />}\n     {old && <CheckButton key='params' onClick={() => this.changeContent(<Operation key='srv_op_params' id={id} operation='parameters' />)} title='Service parameters' />}\n     {old && <SearchButton key='status' onClick={() => this.changeContent(<Operation key='srv_op_stat' id={id} operation='status' />)} title='Service status' />}\n     {old && <StartButton key='start' onClick={() => this.changeContent(<Operation key='srv_op_start' id={id} operation='start' />)} title='Start service' />}\n     {old && <StopButton key='stop' onClick={() => this.changeContent(<Operation key='srv_op_stop' id={id} operation='stop' />)} title='Stop service' />}\n    </InfoArticle>\n    <NavBar key='server_navigation' id='server_navigation' />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:true}\n }\n componentDidMount(){\n  post_call('api/master/server_operation',{op:this.props.operation,id:this.props.id}).then(result => this.setState({result:result, wait:false}))\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.setState({wait:true})\n   this.componentDidMount();\n  }\n }\n\n render(){\n  return (this.state.wait) ? <Spinner /> : <CodeArticle key='srv_operation'>{JSON.stringify(this.state.result,null,2)}</CodeArticle>\n }\n}\n"],"names":["List","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","listItem","row","node","service","type","_jsxs","_Fragment","children","_jsx","InfoButton","onClick","changeContent","Info","id","title","DeleteButton","deleteList","hasOwnProperty","ui","length","UiButton","window","open","confirm","post_call","then","result","deleted","setState","data","state","filter","_createClass","key","value","_this2","this","prevProps","_this3","_this4","ContentList","header","thead","trows","ReloadButton","componentDidMount","AddButton","ContentData","mountUpdate","fun","Component","_Component2","_super2","_this5","elem","content","onChange","e","_objectSpread","_defineProperty","target","name","updateInfo","op","found","_this6","nodes","type_id","services","_this7","old","InfoArticle","InfoColumns","TextLine","label","text","SelectInput","map","concat","UrlInput","SaveButton","SyncButton","Operation","operation","CheckButton","SearchButton","StartButton","StopButton","NavBar","Spinner","_Component3","_super3","_this8","wait","_this9","CodeArticle","JSON","stringify"],"sourceRoot":""}
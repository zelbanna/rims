{"version":3,"sources":["server.jsx"],"names":["List","props","listItem","row","node","service","type","onClick","changeContent","Info","id","title","deleteList","hasOwnProperty","ui","length","window","open","confirm","post_call","then","result","deleted","setState","data","state","filter","this","prevProps","header","thead","trows","componentDidMount","mountUpdate","fun","Component","elem","content","onChange","e","target","name","value","updateInfo","op","found","nodes","type_id","services","old","label","text","map","Operation","operation","wait","JSON","stringify"],"mappings":"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","file":"static/js/22.94ac16bf.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { SelectInput, TextLine, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, CheckButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SyncButton, SearchButton, StartButton, StopButton, UiButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.service,row.type,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key='server_info' id={row.id} />)} title='Service information' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete service' />\n   {row.hasOwnProperty('ui') && row.ui.length > 0 && <UiButton key='ui' onClick={() =>  window.open(row.ui,'_blank')} title='Server UI' />}\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete service?') && post_call('api/master/server_delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Servers' thead={['Node','Service','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='server_info' id='new' type={this.props.type} />)} title='Add service' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.componentDidMount()\n }\n\n componentDidMount(){\n  post_call('api/master/server_info',{id:this.props.id}).then(result => {\n   if (!result.data.node)\n    result.data.node = result.nodes[0];\n   if (!result.data.type_id)\n    result.data.type_id = result.services[0].id;\n   this.setState({...result, content:null});\n   })\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/master/server_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='si_art_nf'>Server with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data){\n   const id = this.state.data.id;\n   const old = (id !== 'new');\n   return <>\n    <InfoArticle key='ia' header='Server'>\n     <InfoColumns key='ic'>\n      <TextLine key='server' id='server' label='ID' text={id} />\n      <SelectInput key='node' id='node' value={this.state.data.node} onChange={this.onChange}>{this.state.nodes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Service' value={this.state.data.type_id} onChange={this.onChange}>{this.state.services.map(row => <option key={row.id} value={row.id}>{`${row.service} (${row.type})`}</option>)}</SelectInput>\n      <UrlInput key='ui' id='ui' label='UI' value={this.state.data.ui} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n     {old && <SyncButton key='sync' onClick={() => this.changeContent(<Operation key='srv_op_sync' id={id} operation='sync' />)} title='Sync service' />}\n     {old && <ReloadButton key='restart' onClick={() => this.changeContent(<Operation key='srv_op_rst'  id={id} operation='restart' />)} title='Restart service' />}\n     {old && <CheckButton key='params' onClick={() => this.changeContent(<Operation key='srv_op_params' id={id} operation='parameters' />)} title='Service parameters' />}\n     {old && <SearchButton key='status' onClick={() => this.changeContent(<Operation key='srv_op_stat' id={id} operation='status' />)} title='Service status' />}\n     {old && <StartButton key='start' onClick={() => this.changeContent(<Operation key='srv_op_start' id={id} operation='start' />)} title='Start service' />}\n     {old && <StopButton key='stop' onClick={() => this.changeContent(<Operation key='srv_op_stop' id={id} operation='stop' />)} title='Stop service' />}\n    </InfoArticle>\n    <NavBar key='server_navigation' id='server_navigation' />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:true}\n }\n componentDidMount(){\n  post_call('api/master/server_operation',{op:this.props.operation,id:this.props.id}).then(result => this.setState({result:result, wait:false}))\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.setState({wait:true})\n   this.componentDidMount();\n  }\n }\n\n render(){\n  return (this.state.wait) ? <Spinner /> : <CodeArticle key='srv_operation'>{JSON.stringify(this.state.result,null,2)}</CodeArticle>\n }\n}\n"],"sourceRoot":""}
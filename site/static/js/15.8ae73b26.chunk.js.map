{"version":3,"sources":["inventory.jsx"],"names":["Main","compileNavItems","context","loadNavigation","key","title","onClick","changeContent","Search","changeSelf","Vendor","List","changeLocation","then","lib","setState","elem","this","prevProps","props","state","Component","contextType","RimsContext","listItem","row","id","serial","model","Info","deleteList","searchHandler","e","searchfield","target","value","content","window","confirm","post_call","result","deleted","data","filter","args","inv_list","length","includes","header","thead","trows","componentDidMount","rnd","placeholder","onChange","name","type","field","search","updateInfo","op","found","vendor","label","product","description","location_id","locations","map","idx","receive_date","purchase_order","license","license_key","support_contract","support_end_date","comments","text","count","Report","extra","sort"],"mappings":"8TASaA,EAAb,4MAWCC,gBAAkB,kBAAM,EAAKC,QAAQC,eAAe,kBAAC,SAAD,CAAQC,IAAI,oBAC9D,kBAAC,cAAD,CAAaA,IAAI,cAAcC,MAAM,aACpC,kBAAC,gBAAD,CAAeD,IAAI,eAAeC,MAAM,SAASC,QAAS,kBAAM,EAAKC,cAAc,kBAACC,EAAD,CAAQJ,IAAI,cAAcK,WAAY,EAAKF,oBAC9H,kBAAC,gBAAD,CAAeH,IAAI,eAAeC,MAAM,SAASC,QAAS,kBAAM,EAAKC,cAAc,kBAACG,EAAD,CAAQN,IAAI,cAAcK,WAAY,EAAKF,oBAC9H,kBAAC,gBAAD,CAAeH,IAAI,eAAeC,MAAM,OAASC,QAAS,kBAAM,EAAKC,cAAc,kBAACI,EAAD,CAAMP,IAAI,OAAOK,WAAY,EAAKF,qBAEtH,kBAAC,YAAD,CAAWH,IAAI,cAAcC,MAAM,YAAYC,QAAS,kBAAM,EAAKM,uBAjBtE,EAoBCA,eAAiB,kBAAM,6BAAyBC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,kBAACD,EAAIH,KAAL,CAAUP,IAAI,uBApBzF,EAsBCG,cAAgB,SAACS,GAAD,OAAU,EAAKD,SAASC,IAtBzC,kEAGEC,KAAKhB,oBAHP,yCAMoBiB,GACfA,IAAcD,KAAKE,OACrBF,KAAKhB,oBARR,+BAyBE,OAAQ,kBAAC,WAAD,CAAUG,IAAI,aAAaa,KAAKG,WAzB1C,GAA0BC,aA4B1BrB,EAAKsB,YAAcC,c,IAIbZ,E,kDACL,WAAYQ,GAAO,IAAD,8BACjB,cAAMA,IAQPK,SAAW,SAACC,GAAD,MAAS,CAACA,EAAIC,GAAGD,EAAIE,OAAOF,EAAIG,MAAM,kBAAC,WAAD,CAAUxB,IAAK,qBAAqBqB,EAAIC,IACvF,kBAAC,aAAD,CAAYtB,IAAK,gBAAgBqB,EAAIC,GAAKpB,QAAS,kBAAM,EAAKC,cAAc,kBAACsB,EAAD,CAAMzB,IAAK,aAAaqB,EAAIC,GAAIA,GAAID,EAAIC,OAAUrB,MAAM,wBACpI,kBAAC,eAAD,CAAcD,IAAK,kBAAkBqB,EAAIC,GAAIpB,QAAS,kBAAM,EAAKwB,WAAWL,EAAIC,KAAKrB,MAAM,6BAX3E,EAclB0B,cAAgB,SAACC,GAAD,OAAO,EAAKjB,SAAS,CAACkB,YAAYD,EAAEE,OAAOC,SAdzC,EAelB5B,cAAgB,SAACS,GAAD,OAAU,EAAKD,SAAS,CAACqB,QAAQpB,KAf/B,EAgBlBc,WAAa,SAACJ,GAAD,OAASW,OAAOC,QAAQ,uBAAyBC,YAAU,uBAAwB,CAACb,GAAGA,IAAKb,MAAK,SAAA2B,GAAM,OAAIA,EAAOC,SAAW,EAAK1B,SAAS,CAAC2B,KAAK,EAAKtB,MAAMsB,KAAKC,QAAO,SAAAlB,GAAG,OAAKA,EAAIC,KAAOA,KAAKU,QAAQ,WAdpN,EAAKhB,MAAQ,CAACa,YAAY,IAFT,E,gEAKE,IAAD,OAClBM,YAAU,qBAAqBtB,KAAKE,MAAMyB,MAAM/B,MAAK,SAAA2B,GAAM,OAAI,EAAKzB,SAASyB,Q,+BAYrE,IAAD,OACP,GAAKvB,KAAKG,MAAMsB,KAEX,CACJ,IAAMG,EAA8C,IAAlC5B,KAAKG,MAAMa,YAAYa,OAAgB7B,KAAKG,MAAMsB,KAAOzB,KAAKG,MAAMsB,KAAKC,QAAO,SAAAlB,GAAG,OAAKA,EAAIG,MAAMmB,SAAS,EAAK3B,MAAMa,cAAgBR,EAAIE,OAAOoB,SAAS,EAAK3B,MAAMa,gBACvL,OAAO,kBAAC,WAAD,CAAU7B,IAAI,gBACpB,kBAAC,cAAD,CAAaA,IAAI,SAAS4C,OAAO,YAAYC,MAAO,CAAC,KAAK,SAAS,QAAQ,IAAKC,MAAOL,EAAUrB,SAAUP,KAAKO,SAAUgB,OAAQvB,KAAKG,MAAMoB,QAC5I,kBAAC,eAAD,CAAcpC,IAAI,iBAAiBE,QAAS,kBAAM,EAAK6C,uBACvD,kBAAC,YAAD,CAAW/C,IAAI,cAAcE,QAAS,kBAAM,EAAKC,cAAc,kBAACsB,EAAD,CAAMzB,IAAK,iBAAmBgD,cAAO1B,GAAG,UAAYrB,MAAM,uBACzH,kBAAC,cAAD,CAAaD,IAAI,YAAY2B,cAAed,KAAKc,cAAeI,MAAOlB,KAAKG,MAAMa,YAAaoB,YAAY,uCAE5G,kBAAC,cAAD,CAAajD,IAAI,UAAUa,KAAKG,MAAMgB,UATvC,OAAO,kBAAC,UAAD,U,GArBSf,aAsCbb,E,kDACL,WAAYW,GAAO,IAAD,8BACjB,cAAMA,IAIPZ,cAAgB,SAACS,GAAD,OAAU,EAAKG,MAAMV,WAAWO,IAL9B,EAOlBsC,SAAW,SAACtB,GAAD,OAAO,EAAKjB,SAAS,CAAC2B,KAAK,eAAI,EAAKtB,MAAMsB,KAAhB,eAAuBV,EAAEE,OAAOqB,KAAMvB,EAAEE,OAA0B,aAAlBF,EAAEE,OAAOsB,KAAuB,QAAU,gBAL9H,EAAKpC,MAAQ,CAACsB,KAAK,CAACe,MAAM,SAASC,OAAO,KAFzB,E,qDASR,IAAD,OACR,OAAO,kBAAC,cAAD,CAAatD,IAAI,eAAe4C,OAAO,oBAC7C,kBAAC,cAAD,CAAa5C,IAAI,QAAQsB,GAAG,QAAQS,MAAOlB,KAAKG,MAAMsB,KAAKe,MAAOH,SAAUrC,KAAKqC,UAAU,4BAAQnB,MAAM,UAAd,UAAsC,4BAAQA,MAAM,UAAd,WACjI,kBAAC,YAAD,CAAW/B,IAAI,SAASsB,GAAG,SAASS,MAAOlB,KAAKG,MAAMsB,KAAKgB,OAAQL,YAAY,SAASC,SAAUrC,KAAKqC,WACvG,kBAAC,eAAD,CAAclD,IAAI,iBAAiBE,QAAS,kBAAM,EAAKC,cAAc,kBAACI,EAAD,CAAMP,IAAI,iBAAiBwC,KAAM,EAAKxB,MAAMsB,SAAWrC,MAAM,0B,GAdhHgB,aAqBRQ,EAAb,kDACC,WAAYV,GAAO,IAAD,8BACjB,cAAMA,IAQPmC,SAAW,SAACtB,GAAD,OAAO,EAAKjB,SAAS,CAAC2B,KAAK,eAAI,EAAKtB,MAAMsB,KAAhB,eAAuBV,EAAEE,OAAOqB,KAAMvB,EAAEE,OAA0B,aAAlBF,EAAEE,OAAOsB,KAAuB,QAAU,gBAT7G,EAWlBjD,cAAgB,SAACS,GAAD,OAAU,EAAKD,SAAS,CAACqB,QAAQpB,KAX/B,EAalB2C,WAAa,kBAAMpB,YAAU,qBAAD,aAAuBqB,GAAG,UAAa,EAAKxC,MAAMsB,OAAO7B,MAAK,SAAA2B,GAAM,OAAI,EAAKzB,SAASyB,OAXjH,EAAKpB,MAAQ,CAACsB,KAAK,KAAMmB,OAAM,GAFd,EADnB,gEAMqB,IAAD,OAClBtB,YAAU,qBAAqB,CAACb,GAAGT,KAAKE,MAAMO,KAAKb,MAAK,SAAA2B,GAAM,OAAI,EAAKzB,SAASyB,QAPlF,+BAgBW,IAAD,OACR,GAAIvB,KAAKG,MAAMsB,KAAK,CACnB,IAAMA,EAAOzB,KAAKG,MAAMsB,KACxB,OAAO,kBAAC,cAAD,CAAatC,IAAI,cAAc4C,OAAO,kBAC3C,kBAAC,cAAD,CAAa5C,IAAI,eAChB,kBAAC,YAAD,CAAWA,IAAI,SAASsB,GAAG,SAASS,MAAOO,EAAKoB,OAAQR,SAAUrC,KAAKqC,WACvE,kBAAC,YAAD,CAAWlD,IAAI,SAASsB,GAAG,SAASqC,MAAM,MAAM5B,MAAOO,EAAKf,OAAQ2B,SAAUrC,KAAKqC,WACnF,kBAAC,YAAD,CAAWlD,IAAI,UAAUsB,GAAG,UAAUS,MAAOO,EAAKsB,QAASV,SAAUrC,KAAKqC,WAC1E,kBAAC,YAAD,CAAWlD,IAAI,QAAQsB,GAAG,QAAQS,MAAOO,EAAKd,MAAO0B,SAAUrC,KAAKqC,WACpE,kBAAC,YAAD,CAAWlD,IAAI,cAAcsB,GAAG,cAAcS,MAAOO,EAAKuB,YAAaX,SAAUrC,KAAKqC,WACtF,kBAAC,cAAD,CAAalD,IAAI,cAAcsB,GAAG,cAAcqC,MAAM,WAAW5B,MAAOO,EAAKwB,YAAaZ,SAAUrC,KAAKqC,UAAWrC,KAAKG,MAAM+C,UAAUC,KAAI,SAAC3C,EAAI4C,GAAL,OAAa,4BAAQjE,IAAK,MAAMiE,EAAKlC,MAAOV,EAAIC,IAAKD,EAAI8B,UACtM,kBAAC,YAAD,CAAWnD,IAAI,eAAesB,GAAG,eAAeqC,MAAM,WAAW5B,MAAOO,EAAK4B,aAAchB,SAAUrC,KAAKqC,WAC1G,kBAAC,YAAD,CAAWlD,IAAI,iBAAiBsB,GAAG,iBAAiBqC,MAAM,iBAAiB5B,MAAOO,EAAK6B,eAAgBjB,SAAUrC,KAAKqC,WACtH,kBAAC,gBAAD,CAAelD,IAAI,UAAUsB,GAAG,UAAUS,MAAOO,EAAK8B,QAASlB,SAAUrC,KAAKqC,WAC5EZ,EAAK8B,SAAW,kBAAC,YAAD,CAAWpE,IAAI,cAAcsB,GAAG,cAAcqC,MAAM,MAAM5B,MAAOO,EAAK+B,YAAanB,SAAUrC,KAAKqC,WACpH,kBAAC,gBAAD,CAAelD,IAAI,mBAAmBsB,GAAG,mBAAmBS,MAAOO,EAAKgC,iBAAkBpB,SAAUrC,KAAKqC,WACvGZ,EAAKgC,kBAAoB,kBAAC,YAAD,CAAWtE,IAAI,mBAAmBsB,GAAG,mBAAmBqC,MAAM,eAAe5B,MAAOO,EAAKiC,iBAAkBrB,SAAUrC,KAAKqC,WACrJ,kBAAC,YAAD,CAAWlD,IAAI,WAAWsB,GAAG,WAAWS,MAAOO,EAAKkC,SAAUtB,SAAUrC,KAAKqC,YAE9E,kBAAC,eAAD,CAAclD,IAAI,iBAAiBE,QAAS,kBAAM,EAAK6C,uBACvD,kBAAC,aAAD,CAAY/C,IAAI,eAAeE,QAAS,kBAAM,EAAKqD,cAActD,MAAM,UAGzE,OAAO,kBAAC,UAAD,UAvCV,GAA0BgB,aA6CpBX,E,kDACL,WAAYS,GAAO,IAAD,8BACjB,cAAMA,IAQPZ,cAAgB,SAACS,GAAD,OAAU,EAAKG,MAAMV,WAAWO,IAT9B,EAWlBQ,SAAW,SAACC,GAAD,MAAS,CAAC,kBAAC,aAAD,CAAYrB,IAAK,UAAWqB,EAAIqC,OAAQe,KAAMpD,EAAIqC,OAAQxD,QAAS,kBAAM,EAAKC,cAAc,kBAACI,EAAD,CAAMP,IAAI,iBAAiBwC,KAAM,CAACa,MAAM,SAAUC,OAAOjC,EAAIqC,cAAiBrC,EAAIqD,QATlM,EAAK1D,MAAQ,GAFI,E,gEAKE,IAAD,OAClBmB,YAAU,6BAA6B1B,MAAK,SAAA2B,GAAM,OAAI,EAAKzB,SAASyB,Q,+BAQpE,OAAO,kBAAC,WAAD,CAAUpC,IAAI,gBACpB,kBAAC,cAAD,CAAaA,IAAI,SAAS4C,OAAO,UAAUC,MAAO,CAAC,OAAO,SAAUC,MAAOjC,KAAKG,MAAMsB,KAAMlB,SAAUP,KAAKO,WAC3G,kBAAC,cAAD,CAAapB,IAAI,UAAUa,KAAKG,MAAMgB,c,GAjBpBf,aAwBR0D,EAAb,kDACC,WAAY5D,GAAO,IAAD,8BACjB,cAAMA,IAQPK,SAAW,SAACC,GAAD,MAAS,CAACA,EAAIC,GAAGD,EAAIE,OAAOF,EAAIqC,OAAOrC,EAAIG,MAAMH,EAAIuC,QAAQvC,EAAIwC,cAP3E,EAAK7C,MAAQ,GAFI,EADnB,gEAMqB,IAAD,OAClBmB,YAAU,qBAAsB,CAAEyC,MAAM,CAAC,SAAS,UAAU,eAAgBC,KAAK,WAAWpE,MAAK,SAAA2B,GAAM,OAAI,EAAKzB,SAASyB,QAP3H,+BAaE,OAAO,kBAAC,gBAAD,CAAepC,IAAI,SAAS4C,OAAO,YAAYC,MAAO,CAAC,KAAK,SAAS,SAAS,QAAQ,UAAU,eAAgBC,MAAOjC,KAAKG,MAAMsB,KAAMlB,SAAUP,KAAKO,eAbhK,GAA4BH","file":"static/js/15.8ae73b26.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, LineArticle, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { TextInput, SearchInput, SelectInput, DateInput, CheckboxInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SearchButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems()\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='inventory_navbar'>\n   <NavDropDown key='inv_nav_inv' title='Inventory'>\n    <NavDropButton key='inv_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='search_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_vend' title='Vendor' onClick={() => this.changeContent(<Vendor key='vendor_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_list' title='List'   onClick={() => this.changeContent(<List key='list' changeSelf={this.changeContent} />)} />\n   </NavDropDown>\n   <NavButton key='inv_nav_loc' title='Locations' onClick={() => this.changeLocation()} />\n  </NavBar>)\n\n changeLocation = () => import('./location.jsx').then(lib => this.setState(<lib.List key='location_list' />));\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list',this.props.args).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.model,<Fragment key={'inventory_buttons_'+row.id}>\n   <InfoButton key={'inv_btn_info_'+row.id}  onClick={() => this.changeContent(<Info key={'inventory_'+row.id} id={row.id} />) } title='View inventory item' />\n   <DeleteButton key={'inv_btn_delete_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete inventory item' />\n  </Fragment>]\n\n searchHandler = (e) => this.setState({searchfield:e.target.value})\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete item') && post_call('api/inventory/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  if (!this.state.data)\n   return <Spinner />\n  else {\n   const inv_list = (this.state.searchfield.length === 0) ? this.state.data : this.state.data.filter(row => (row.model.includes(this.state.searchfield) || row.serial.includes(this.state.searchfield)));\n   return <Fragment key='inv_fragment'>\n    <ContentList key='inv_cl' header='Inventory' thead={['ID','Serial','Model','']} trows={inv_list} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='inv_btn_reload' onClick={() => this.componentDidMount() } />\n     <AddButton key='inv_btn_add' onClick={() => this.changeContent(<Info key={'inventory_new_' + rnd()} id='new' />) } title='Add inventory item' />\n     <SearchInput key='dl_search' searchHandler={this.searchHandler} value={this.state.searchfield} placeholder='Search inventory (case sensitive)' />\n    </ContentList>\n    <ContentData key='inv_cd'>{this.state.content}</ContentData>\n   </Fragment>\n  }\n }\n}\n\n// ************** Search **************\n//\nclass Search extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{field:'serial',search:''}}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n render() {\n  return <LineArticle key='inv_srch_art' header='Inventory search'>\n   <SelectInput key='field' id='field' value={this.state.data.field} onChange={this.onChange}><option value='serial'>Serial</option><option value='vendor'>Vendor</option></SelectInput>\n   <TextInput key='search' id='search' value={this.state.data.search} placeholder='search' onChange={this.onChange} />\n   <SearchButton key='inv_btn_search' onClick={() => this.changeContent(<List key='inventory_list' args={this.state.data} />)} title='Search inventory' />\n  </LineArticle>\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidMount(){\n  post_call('api/inventory/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/inventory/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (this.state.data){\n   const data = this.state.data;\n   return <InfoArticle key='inv_article' header='Inventory Item'>\n     <InfoColumns key='inv_content'>\n      <TextInput key='vendor' id='vendor' value={data.vendor} onChange={this.onChange} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n      <TextInput key='product' id='product' value={data.product} onChange={this.onChange} />\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} />\n      <TextInput key='description' id='description' value={data.description} onChange={this.onChange} />\n      <SelectInput key='location_id' id='location_id' label='Location' value={data.location_id} onChange={this.onChange}>{this.state.locations.map((row,idx) => <option key={'ii_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <DateInput key='receive_date' id='receive_date' label='Received' value={data.receive_date} onChange={this.onChange} />\n      <TextInput key='purchase_order' id='purchase_order' label='Purchase Order' value={data.purchase_order} onChange={this.onChange} />\n      <CheckboxInput key='license' id='license' value={data.license} onChange={this.onChange} />\n      {(data.license && <TextInput key='license_key' id='license_key' label='Key' value={data.license_key} onChange={this.onChange} />)}\n      <CheckboxInput key='support_contract' id='support_contract' value={data.support_contract} onChange={this.onChange} />\n      {(data.support_contract && <DateInput key='support_end_date' id='support_end_date' label='Contract End' value={data.support_end_date} onChange={this.onChange} />)}\n      <TextInput key='comments' id='comments' value={data.comments} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='inv_btn_reload' onClick={() => this.componentDidMount() } />\n     <SaveButton key='inv_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Vendor **************\n//\nclass Vendor extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/vendor_list').then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n listItem = (row) => [<HrefButton key={'search_' +row.vendor} text={row.vendor} onClick={() => this.changeContent(<List key='inventory_list' args={{field:'vendor', search:row.vendor}} />)} />,row.count]\n\n render(){\n  return <Fragment key='inv_fragment'>\n   <ContentList key='inv_cl' header='Vendors' thead={['Name','Count']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='inv_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/inventory/list', { extra:['vendor','product','description'], sort:'vendor'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.vendor,row.model,row.product,row.description]\n\n render(){\n  return <ContentReport key='inv_cr' header='Inventory' thead={['ID','Serial','Vendor','Model','Product','Description']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n"],"sourceRoot":""}
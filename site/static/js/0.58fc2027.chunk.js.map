{"version":3,"sources":["device.jsx","fdb.jsx"],"names":["Main","props","compileNavItems","context","loadNavigation","key","title","onClick","changeContent","List","rack_id","state","New","ip","Search","changeSelf","TypeList","ModelList","OUISearch","OUIList","changeImport","pdu","length","map","row","idx","hostname","device_id","id","type","console","name","style","float","elem","setState","content","undefined","this","post_call","then","result","Object","assign","prevProps","module","func","args","lib","Elem","Component","contextType","RimsContext","onChange","e","target","value","field","search","header","label","placeholder","sortList","method","data","sort","a","b","localeCompare","Number","split","num","slice","join","listItem","text","Info","ip_state","if_state","deleteList","window","confirm","deleted","filter","hasOwnProperty","searchfield","toLowerCase","dev_list","includes","thead","highlight","trows","componentDidMount","Discover","searchFire","s","updateInfo","op","reload","rack","vm","lookupInfo","changeInterfaces","found","navconf","extra","class","change_self","has_ip","interface_ip","function_strings","functions","types","find","tp","parseInt","type_id","mac","management_id","interface_mac","classes","model","version","serial","rack_name","rack_unit","rack_size","console_name","console_port","pems","pem","pdu_name","pdu_unit","host","device_uuid","maxWidth","server_uuid","clear","comment","url","Control","Template","Logs","changeMain","type_base","function","type_name","open","username","console_url","JSON","stringify","update","ManagementInfo","base","RackInfo","PemList","StatisticsList","fun","replace","Function","domains","a_domain_id","interfaces","interface_id","snmp","oid","oui","status","racked","racks","console_id","consoles","pdu_id","pdu_slot","PemInfo","lookup","empty","pdus","pdu_info","slots","i","push","loadList","inserts","lookupStats","measurement","tags","StatisticsInfo","operationDev","msg","wait","device_op","operationPem","pem_op","pem_id","lookupState","log","htmlFor","clearLog","time","message","info","addDevice","searchIP","ipam_network_id","network_id","networks","if_domain_id","netasc","description","runDiscovery","Report","icon","syncModels","ModelInfo","defaults_file","image_file","parameters","ouiSearch","company","substring","head","keys","hd","Device","changeInterface","vlan","snmp_index","toUpperCase","syncFDB","changeSearch","changeVisualize","device"],"mappings":"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","file":"static/js/0.58fc2027.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Flex, Spinner, StateLeds, CodeArticle, InfoArticle, InfoColumns, LineArticle, Result, ContentList, ContentData, ContentReport, MemoContentList } from './infra/UI.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx'\nimport { TextAreaInput, TextInput, TextLine, StateLine, SelectInput, UrlInput, SearchInput } from './infra/Inputs.jsx';\nimport { AddButton, BackButton, CheckButton, ConfigureButton, DeleteButton, GoButton, HeaderButton, HrefButton, InfoButton, ItemsButton, LogButton, NetworkButton, ReloadButton, SaveButton, SearchButton, ShutdownButton, StartButton, SyncButton, TermButton, UiButton } from './infra/Buttons.jsx';\n\nimport { List as VisualizeList, Edit as VisualizeEdit } from './visualize.jsx';\nimport { List as FdbList, Device as FdbDevice, Search as FdbSearch } from './fdb.jsx';\n\n// **************** Main ****************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {pdu:[], console:[], name:'N/A', rack_id:undefined}\n }\n\n componentDidMount(){\n  if (this.props.rack_id)\n   post_call('api/rack/inventory',{id:this.props.rack_id}).then(result => {\n    Object.assign(this.state,{rack_id:this.props.rack_id, ...result})\n    this.compileNavItems();\n   })\n  else\n   this.compileNavItems();\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => {\n  this.context.loadNavigation(<NavBar key='device_navbar'>\n   <NavDropDown key='dev_nav_devs' title='Devices'>\n    <NavDropButton key='dev_nav_list' title='List' onClick={() => this.changeContent(<List key='dl' rack_id={this.state.rack_id} />)} />\n    <NavDropButton key='dev_nav_new' title='New' onClick={() => this.changeContent(<New key='device_new' ip='0.0.0.0' />)} />\n    <NavDropButton key='dev_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='ds' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_types' title='Types' onClick={() => this.changeContent(<TypeList key='dtl' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_model' title='Models' onClick={() => this.changeContent(<ModelList key='dml' />)} />\n   </NavDropDown>\n   <NavDropDown key='dev_nav_tools' title='Tools'>\n    <NavDropButton key='dev_nav_fdbx' title='FDB Search' onClick={() => this.changeContent(<FdbSearch key='fdb_search' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_fdbs' title='FDB List' onClick={() => this.changeContent(<FdbList key='fdb_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_ouis' title='OUI Search' onClick={() => this.changeContent(<OUISearch key='oui_search' />)} />\n    <NavDropButton key='dev_nav_ouil' title='OUI List' onClick={() => this.changeContent(<OUIList key='oui_list' />)} />\n    <NavDropButton key='dev_nav_resv' title='Reservations' onClick={() => this.changeImport('reservation','List',{})} />\n   </NavDropDown>\n   {(this.state.pdu.length > 0) && <NavDropDown key='dev_nav_pdus' title='PDUs'>{this.state.pdu.map((row,idx) => <NavDropButton key={'dev_nav_pdu_' + idx} title={row.hostname} onClick={() => this.changeImport('pdu','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(this.state.console.length > 0) && <NavDropDown key='dev_nav_consoles' title='Consoles'>{this.state.console.map((row,idx) => <NavDropButton key={'dev_nav_console_' + idx} title={row.hostname} onClick={() => this.changeImport('console','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(this.state.rack_id) && <NavButton key='dev_nav_rack' title={this.state.name} onClick={() => this.changeImport('rack','Layout',{id:this.state.rack_id})} />}\n   <NavButton key='dev_nav_maps' title='Maps' onClick={() => this.changeContent(<VisualizeList key='visualize_list' />)} style={{float:'right'}}/>\n   <NavDropDown key='dev_nav_ipam' title='IPAM' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_nets' title='Networks' onClick={() => this.changeImport('ipam','NetworkList',{})} />\n    <NavDropButton key='dev_nav_isrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'DHCP'})} />\n   </NavDropDown>\n   <NavDropDown key='dev_nav_dns' title='DNS' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_doms' title='Domains' onClick={() => this.changeImport('dns','DomainList',{})} />\n    <NavDropButton key='dev_nav_dsrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'NAMESERVER'})} />\n    <NavDropButton key='dev_nav_recs' title='Recursors' onClick={() => this.changeImport('server','List',{type:'RECURSOR'})} />\n   </NavDropDown>\n  </NavBar>)\n }\n\n changeImport(module,func,args){\n  import('./'+module+'.jsx').then(lib => {\n   var Elem = lib[func];\n   this.setState({content:<Elem key={module+'_'+func} {...args} />})\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return  <Fragment>{this.state.content}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Search **************\n//\nclass Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'ip',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='ds_art' header='Device Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <optgroup label='Group'>\n     <option value='hostname'>Hostname</option>\n     <option value='type'>Type</option>\n    </optgroup>\n    <optgroup label='Unique'>\n     <option value='id'>ID</option>\n     <option value='ip'>IP</option>\n     <option value='mac'>MAC</option>\n     <option value='ipam_id'>IPAM ID</option>\n    </optgroup>\n    </SelectInput>\n    <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n    <SearchButton key='ds_btn_search' onClick={() => this.changeContent(<List key='device_list' {...this.state} />)} title='Search devices' />\n   </LineArticle>\n }\n}\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, content:null, sort:(props.hasOwnProperty('sort')) ? props.sort : 'hostname', rack_id:this.props.rack_id, searchfield:'', field:this.props.field, search:this.props.search}\n }\n\n componentDidMount(){\n  post_call('api/device/list', {sort:this.state.sort, rack_id:this.state.rack_id, field:this.state.field, search:this.state.search}).then(result => this.setState(result));\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n sortList = (method) => {\n  if (method === 'hostname')\n   this.state.data.sort((a,b) => a.hostname.localeCompare(b.hostname));\n  else\n   this.state.data.sort((a,b) => {\n    if (a.ip && b.ip){\n     const num1 = Number(a.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     const num2 = Number(b.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     return num1-num2;\n   } else if (a.ip)\n    return 1;\n   else\n    return a.hostname.localeCompare(b.hostname)\n   });\n  this.setState({sort:method});\n }\n\n listItem = (row) => [row.ip,<HrefButton key={'dl_btn_info_'+row.id} text={row.hostname} onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />,<Fragment>\n  <StateLeds key={'dl_state_' + row.id} state={(row.ip_state) ? row.ip_state : row.if_state} />\n  <InfoButton key={'dl_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />\n  <DeleteButton key={'dl_btn_del_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete device' />\n </Fragment>]\n\n deleteList = (id) => (window.confirm('Really delete device '+id+'?') && post_call('api/device/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  if (this.state.data){\n   const data = this.state.data\n   const searchfield = this.state.searchfield.toLowerCase();\n   const dev_list = (searchfield.length === 0) ? data : data.filter(row => (row.hostname.toLowerCase().includes(searchfield) || (row.ip && row.ip.includes(searchfield))));\n   const thead = [<HeaderButton key='dl_btn_ip' text='IP' highlight={(this.state.sort === 'ip')} onClick={() => this.sortList('ip')} />,<HeaderButton key='dl_btn_hostname' text='Hostname' highlight={(this.state.sort === 'hostname')} onClick={() => this.sortList('hostname')} />,''];\n   return <Fragment>\n    <MemoContentList key='dl_list' header='Device List' thead={thead} listItem={this.listItem} trows={dev_list}>\n     <ReloadButton key='dl_btn_reload' onClick={() => this.componentDidMount()} />\n     <ItemsButton key='dl_btn_items' onClick={() => { Object.assign(this.state,{rack_id:undefined,field:undefined,search:undefined}); this.componentDidMount(); }} title='List all items' />\n     <AddButton key='dl_btn_add' onClick={() => this.changeContent(<New key='dn_new' ip='0.0.0.0' />)} title='Add device' />\n     <SearchButton key='dl_btn_devices' onClick={() => this.changeContent(<Discover key='dd' />) } title='Discover new devices' />\n     <SearchInput key='dl_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search devices' />\n    </MemoContentList>\n    <ContentData key='dl_content'>{this.state.content}</ContentData>\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null, navconf:false}\n }\n\n componentDidMount(){\n  post_call('api/device/info',{id:this.props.id, extra:['types','classes']}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n updateInfo = () => post_call('api/device/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n reload = () => {\n  this.setState({rack:undefined,vm:undefined});\n  post_call('api/device/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n lookupInfo = () => {\n  this.setState({content:<Spinner />,result:''})\n  post_call('api/device/info',{id:this.props.id, op:'lookup'}).then(result => this.setState({...result,content:null}))\n }\n\n changeInterfaces = () => import('./interface.jsx').then(lib => this.changeContent(<lib.List key='interface_list' device_id={this.props.id} changeSelf={this.changeContent} />))\n\n render() {\n  if(this.state.data){\n   const data = this.state.data;\n   const extra = this.state.extra;\n   const vm = (data.class === 'vm' && this.state.vm) ? this.state.vm : false;\n   const rack = (this.state.rack && data.class !== 'vm') ? this.state.rack : false;\n   const change_self = (this.props.changeSelf);\n   const has_ip = (extra.interface_ip);\n   const function_strings = (extra.functions.length >0) ? extra.functions.split(',') : [];\n   const type = this.state.types.find(tp => tp.id === parseInt(data.type_id));\n   return <Fragment>\n    <InfoArticle key='di_art' header='Device'>\n     <InfoColumns key='di_info' style={{float:'left'}}>\n      <TextLine key='hostname' id='hostname' text={data.hostname} />\n      <TextInput key='mac' id='mac' label='MAC' value={data.mac} title='System MAC' onChange={this.onChange} />\n      {data.management_id && <TextLine key='if_mac' id='if_mac' label='Mgmt MAC' text={extra.interface_mac} title='Management Interface MAC' />}\n      {data.management_id && <TextLine key='if_ip' id='if_ip' label='Mgmt IP' text={extra.interface_ip} />}\n      {data.management_id && <StateLine key='state' id='state' state={[extra.if_state,extra.ip_state]} />}\n     </InfoColumns>\n     <InfoColumns key='di_extra' style={{float:'left'}}>\n      <SelectInput key='class' id='class' value={data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Type' value={data.type_id} onChange={this.onChange}>{this.state.types.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} extra={data.model} />\n      <TextLine key='version' id='version' text={data.version} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n     </InfoColumns>\n     <InfoColumns key='di_rack' style={{float:'left'}}>\n      {rack && <TextLine key='rack_pos' id='rack_pos' label='Rack/Pos' text={`${rack.rack_name} (${rack.rack_unit})`} />}\n      {rack && <TextLine key='rack_size' id='rack_size' label='Size (U)' text={rack.rack_size} />}\n      {rack && <TextLine key='rack_con' id='rack_con' label='TS/Port' text={`${rack.console_name} (${rack.console_port})`} />}\n      {rack && this.state.pems.map(pem => <TextLine key={pem.id} id={'pem_'+pem.id} label={pem.name+' PDU'} text={`${pem.pdu_name} (${pem.pdu_unit})`} />)}\n     </InfoColumns>\n     <InfoColumns key='di_vm' style={{float:'left'}}>\n      {vm && <TextLine key='vm_name' id ='vm_name' label='VM Name' text={vm.name} />}\n      {vm && <TextLine key='vm_host' id ='vm_host' label='VM Host' text={vm.host} />}\n      {vm && <TextLine key='vm_uuid' id ='vm_uuid' label='VM UUID' text={vm.device_uuid} style={{maxWidth:170}} extra={vm.device_uuid} />}\n      {vm && <TextLine key='vm_uuhost' id ='vm_uuhost' label='Host UUID' text={vm.server_uuid} style={{maxWidth:170}} extra={vm.server_uuid} />}\n     </InfoColumns>\n     <InfoColumns key='di_text' style={{clear:'both'}}>\n      <TextInput key='comment' id='comment' value={data.comment} onChange={this.onChange} />\n      <UrlInput key='url' id='url' label='URL' value={data.url} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='di_btn_reload' onClick={() => this.reload()} />\n     <SaveButton key='di_btn_save' onClick={() => this.updateInfo()} title='Save' />\n     <ConfigureButton key='di_btn_edit' onClick={() => this.setState({navconf:!this.state.navconf})} title='Toggle config mode' />\n     <StartButton key='di_btn_cont' onClick={() => this.changeContent(<Control key='device_control' id={this.props.id} />)} title='Device control' />\n     <CheckButton key='di_btn_conf' onClick={() => this.changeContent(<Template key='device_configure' id={this.props.id} />)} title='Configuration template' />\n     {change_self && <NetworkButton key='di_btn_netw' onClick={() => this.changeSelf(<VisualizeEdit key={'ve_'+this.props.id} type='device' id={this.props.id} changeSelf={this.props.changeSelf} />)} title='Connectivity map' />}\n     {has_ip && <SearchButton key='di_btn_srch' onClick={() => this.lookupInfo()} title='Information lookup' />}\n     {has_ip && <LogButton key='di_btn_logs' onClick={() => this.changeContent(<Logs key='device_logs' id={this.props.id} />)} title='Logs' />}\n     {function_strings.includes('manage') && <GoButton key='d_btn_manage' onClick={() => this.context.changeMain({module:this.state.extra.type_base,function:'Manage',args:{device_id:this.props.id, type:this.state.extra.type_name}})} title={'Manage ' + data.hostname} />}\n     {has_ip && <TermButton key='di_btn_ssh' onClick={() => window.open(`ssh://${extra.username}@${extra.interface_ip}`,'_self')} title='SSH connection' />}\n     {rack && rack.console_url && <TermButton key='di_btn_console' onClick={() => window.open(rack.console_url,'_self')} title='Serial Connection' /> }\n     {data.url && <UiButton key='di_btn_ui' onClick={() => window.open(data.url,'_blank')} title='Web UI' />}\n     <Result key='dev_result' result={JSON.stringify(this.state.update)} />\n    </InfoArticle>\n    <NavBar key='di_navigation' id='di_navigation'>\n     {this.state.navconf && <NavButton key='di_nav_management' title='Management' onClick={() => this.changeContent(<ManagementInfo key='device_configure' id={this.props.id} />)} />}\n     {this.state.navconf && <NavButton key='di_nav_interfaces' title='Interfaces' onClick={() => this.changeInterfaces()} />}\n     {!this.state.navconf && type.base === 'network' && has_ip && <NavButton key='di_nav_fdb' title='FDB' onClick={() => this.changeContent(<FdbDevice key='fdb_device' id={this.props.id} ip={extra.interface_ip} type={type.name} changeSelf={this.changeContent} />)} />}\n     {this.state.navconf && ['infrastructure','out-of-band'].includes(data.class) && <NavButton key='di_nav_rack' title='Rack' onClick={() => this.changeContent(<RackInfo key='device_rack_info' device_id={this.props.id} />)} />}\n     {this.state.navconf && ['device','infrastructure','out-of-band'].includes(data.class) && <NavButton key='di_nav_pems' title='PEMs' onClick={() => this.changeContent(<PemList key='device_pem_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {this.state.navconf && <NavButton key='di_nav_stats' title='Statistics' onClick={() => this.changeContent(<StatisticsList key='device_statistics_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {!this.state.navconf && function_strings.filter(fun => fun !== 'manage').map((op,idx) => <NavButton key={'di_nav_'+idx} title={op.replace('_',' ')} onClick={() => this.changeContent(<Function key={'dev_func_'+op} id={this.props.id} op={op} type={this.state.extra.type_name} />)} />)}\n    </NavBar>\n    {this.state.content}\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\nInfo.contextType = RimsContext;\n\n// ************* Configure *************\n//\nclass ManagementInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null}\n }\n\n componentDidMount(){\n  post_call('api/device/extended',{id:this.props.id, extra:['domains']}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/device/extended',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (this.state.data && this.state.domains)\n   return <InfoArticle key='d_conf_art' header='Management Configuration'>\n    <InfoColumns key='d_conf_ic'>\n     <TextInput key='d_conf_hostname' id='hostname' value={this.state.data.hostname} onChange={this.onChange} />\n     <SelectInput key='d_conf_a_domain_id' id='a_domain_id' label='Host Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='d_conf_management_id' id='management_id' label='Mgmt Interface' value={this.state.data.management_id} onChange={this.onChange}>{this.state.interfaces.map((row,idx) => <option key={idx} value={row.interface_id}>{`${row.name} (${row.ip})`}</option>)}</SelectInput>\n     <TextLine key='id' id='id' label='Local ID'  text={this.props.id} title='Database ID' />\n     <TextLine key='snmp' id='snmp' label='SNMP' text={this.state.data.snmp} />\n     <TextLine key='d_conf_oid' id='oid' label='Priv OID' text={this.state.extra.oid} />\n     <TextLine key='d_conf_oui' id='oui' label='System OUI' text={this.state.extra.oui} />\n    </InfoColumns>\n    <SaveButton key='d_conf_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_conf_result' result={this.state.status} />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// ************* RackInfo **************\n//\nclass RackInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/rack',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => post_call('api/device/rack',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   const racked = (this.state.data.rack_id && this.state.data.rack_id !== 'NULL');\n   return <InfoArticle key='d_rack_art' header='Rack'>\n    <InfoColumns key='d_rack_ic'>\n     <SelectInput key='d_rack_id' id='rack_id' label='Rack ID' value={this.state.data.rack_id} onChange={this.onChange}>{this.state.racks.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     {racked && <TextInput key='d_rack_size' id='rack_size' label='Size' value={this.state.data.rack_size} onChange={this.onChange} title='Size of device in U' />}\n     {racked && <TextInput key='d_rack_unit' id='rack_unit' label='Unit' value={this.state.data.rack_unit} onChange={this.onChange} title='First unit of placement' />}\n     {racked && <SelectInput key='d_rack_con_id' id='console_id' label='Console' value={this.state.data.console_id} onChange={this.onChange}>{this.state.consoles.map((row,idx) => <option key={idx} value={row.id}>{row.hostname}</option>)}</SelectInput>}\n     {racked && <TextInput key='d_rack_con_port' id='console_port' label='Console Port' value={this.state.data.console_port} onChange={this.onChange} />}\n    </InfoColumns>\n    <SaveButton key='d_rack_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* PEMs **************\n//\nclass PemList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/pem/list',{device_id:this.props.device_id,lookup:true}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete PEM?') && post_call('api/pem/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n listItem = (row) => [row.id,row.name,row.pdu_id,row.pdu_name,row.pdu_slot,row.pdu_unit,<Fragment>\n  <InfoButton key={'pem_btn_info_' + row.id} onClick={() => this.changeContent(<PemInfo key={'pem_info_'+row.id} id={row.id} device_id={this.props.device_id} changeSelf={this.changeContent} />)} title='Edit PEM information' />\n  <DeleteButton key={'pem_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete PEM' />\n </Fragment>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='pems' header='PEMs' thead={['ID','Name','PDU ID','PDU Name','PDU Slot','PDU Unit','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='pems_btn_reload' onClick={() => this.componentDidMount()} />\n   <AddButton key='pems_btn_add' onClick={() => this.changeContent(<PemInfo key='pem_new' id='new' device_id={this.props.device_id} changeSelf={this.changeContent} />)} title='Add PEM' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n// ************* PemInfo **************\n//\nclass PemInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/pem/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n  post_call('api/pdu/list',{device_id:this.props.device_id, empty:true}).then(result => this.setState({pdus:result.data}))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => post_call('api/pem/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data && this.state.pdus){\n   const pdu_info = this.state.pdus.find(pdu => parseInt(pdu.device_id) === parseInt(this.state.data.pdu_id));\n   let slots = []\n   if (pdu_info){\n    for (let i = 0; i < pdu_info.slots; i++)\n     slots.push({id:i,name:pdu_info[`${i}_slot_name`]});\n   }\n   return <InfoArticle key='d_pem_art' header='PEM'>\n    <InfoColumns key='d_pem_ic'>\n     <TextInput key='d_pem_name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <SelectInput key='d_pem_pdu_id' id='pdu_id' label='PDU' value={this.state.data.pdu_id} onChange={this.onChange}>{this.state.pdus.map((row,idx) => <option key={idx} value={row.device_id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='d_pem_pdu_slot' id='pdu_slot' label='Slot' value={this.state.data.pdu_slot} onChange={this.onChange}>{slots.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <TextInput key='d_pem_pdu_unit' id='pdu_unit' label='Unit' value={this.state.data.pdu_unit} onChange={this.onChange} />\n    </InfoColumns>\n    <BackButton key='d_pem_btn_back' onClick={() => this.props.changeSelf(<PemList key='device_pem_list' device_id={this.props.device_id} changeSelf={this.props.changeSelf} />)} />\n    <SaveButton key='d_pem_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_pem_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : ''} />\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* StatisticsList **************\n//\nclass StatisticsList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.loadList()\n }\n\n loadList = (clear) => post_call('api/statistics/list',{device_id:this.props.device_id}).then(result => this.setState((clear)? {...result,result:'',inserts:''} : result));\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete statistics point?') && post_call('api/statistics/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n lookupStats = () => post_call('api/statistics/lookup',{device_id:this.props.device_id}).then(result => { this.setState(result); this.loadList()} )\n\n listItem = (row) => [row.id,row.measurement,row.tags,row.name,row.oid,<Fragment>\n  <InfoButton key={'stats_btn_info_' + row.id} onClick={() => this.changeContent(<StatisticsInfo key={'statistics_info_'+row.id} id={row.id} device_id={this.props.device_id} />)} title='Edit data point' />\n  <DeleteButton key={'stats_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete data point' />\n </Fragment>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='stats' header='Device statistics' thead={['ID','Measurement','Tags','Name','OID','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n   <ReloadButton key='stats_btn_reload' onClick={() => this.loadList(true)} />\n   <SearchButton key='stats_btn_lookup' onClick={() => this.lookupStats()} title='Lookup device type stats' />\n   <AddButton key='stats_btn_add' onClick={() => this.changeContent(<StatisticsInfo key={'stats_new_'} id='new' device_id={this.props.device_id} />)} title='Add statistics' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n// ************* PemInfo **************\n//\nclass StatisticsInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/statistics/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => post_call('api/statistics/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   return <InfoArticle key='d_stat_art' header='Data point'>\n    <InfoColumns key='d_stat_ic'>\n     <TextInput key='d_stat_measurement' id='measurement' value={this.state.data.measurement} onChange={this.onChange} title='Group, or measurement, that the data point belongs to' />\n     <TextInput key='d_stat_tags' id='tags' value={this.state.data.tags} onChange={this.onChange} title='Tags are comma separated values that extend TSDB grouping' />\n     <TextInput key='d_stat_name' id='name' value={this.state.data.name} onChange={this.onChange} title='Data point name' />\n     <TextInput key='d_stat_oid' id='oid' value={this.state.data.oid} onChange={this.onChange} />\n    </InfoColumns>\n    <SaveButton key='d_stat_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_stat_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : JSON.stringify(this.state.update)} />\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Control **************\n//\nclass Control extends Component {\n constructor(props){\n  super(props)\n  this.state = {pems:[]}\n }\n\n componentDidMount(){\n  post_call('api/device/control',{id:this.props.id}).then(result => this.setState(result));\n }\n\n operationDev = (op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   post_call('api/device/control',{id:this.props.id, device_op:op}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n operationPem = (id,op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   post_call('api/device/control',{id:this.props.id, pem_op:op, pem_id:id}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n lookupState = (id) => console.log('State lookup TODO');\n\n render() {\n  return (\n   <InfoArticle key='dc_art' header='Device Control'>\n    <InfoColumns key='dc_ic'>\n     <label htmlFor='reboot'>Reboot:</label><ReloadButton id='reboot' key='dev_ctr_reboot' onClick={() => this.operationDev('reboot','Really reboot?')} title='Restart device' />\n     <label htmlFor='shutdown'>Shutdown:</label><ShutdownButton id='shutdown' key='dev_ctr_shutdown' onClick={() => this.operationDev('shutdown','Really shutdown?')} title='Shutdown' />\n     {this.state.pems.map(pem => {\n      if(pem.state === 'off')\n       return <Fragment key={pem.id}><label htmlFor={pem.id}>{pem.name}:</label><StartButton key={'dc_btn_start_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'on','Power on PEM?')} title='Power ON' /></Fragment>\n      else if (pem.state === 'on')\n       return <Fragment key={pem.id}><label htmlFor={pem.id}>{pem.name}:</label><ShutdownButton key={'dc_btn_stop_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'off','Power off PEM?')} title='Power OFF' /></Fragment>\n      else\n       return <Fragment key={pem.id}><label htmlFor={pem.id}>{pem.name}:</label><SearchButton key={'dc_btn_lookup_'+pem.id} id={pem.id} onClick={() => this.lookupState(pem.id)} title='Lookup State' /></Fragment>\n     })}\n    </InfoColumns>\n    <Result key='dc_result' result={JSON.stringify(this.state.result)} />\n    {this.state.wait}\n   </InfoArticle>)\n }\n}\n\n// ************** Logs **************\n//\nexport class Logs extends Component {\n componentDidMount(){\n  post_call('api/device/log_get',{id:this.props.id}).then(result => this.setState(result));\n }\n\n clearLog = () => post_call('api/device/log_clear',{id:this.props.id}).then(result => (result.deleted && this.setState({data:[]})));\n\n render() {\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_log_cr' header='Devices' thead={['Time','Message']} trows={this.state.data} listItem={(row) => [row.time,row.message]}>\n   <DeleteButton key='devlog_btn_delete' onClick={() => this.clearLog()} title='Clear device logs' />\n  </ContentReport>\n }\n}\n\n// ******** Template *********\n//\nclass Template extends Component {\n componentDidMount(){\n  post_call('api/device/configuration_template',{id:this.props.id}).then(result => this.setState(result));\n }\n\n render() {\n  return (!this.state) ? <Spinner /> : <CodeArticle key='dtemp_art'>{(this.state.status === 'OK') ? this.state.data.join('\\n') : this.state.info}</CodeArticle>\n }\n}\n\n// ************** New **************\n//\nexport class New extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{ip:this.props.ip,mac:'00:00:00:00:00:00',class:'device',ipam_network_id:this.props.ipam_network_id,hostname:''}, found:true}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n componentDidMount(){\n  post_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n  post_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  post_call('api/device/class_list').then(result => this.setState({classes:result.data}))\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.setState({data:{ip:this.props.ip,mac:'00:00:00:00:00:00',class:'device',ipam_network_id:this.props.ipam_network_id,hostname:''}})\n }\n\n addDevice = () => {\n  if (this.state.data.hostname)\n   post_call('api/device/new',this.state.data).then(result => this.setState({result:JSON.stringify(result)}))\n }\n\n searchIP = () => {\n  if (this.state.data.ipam_network_id)\n   post_call('api/ipam/address_find',{network_id:this.state.data.ipam_network_id}).then(result => this.setState({data:{...this.state.data, ip:result.ip}}))\n }\n\n render() {\n  if (!this.state.domains || !this.state.classes || !this.state.networks)\n   return <Spinner />\n  else\n   return (\n    <InfoArticle key='dn_art' header='Device Add'>\n     <InfoColumns key='dn_content'>\n      <TextInput key='dn_hostname' id='hostname' value={this.state.data.hostname} placeholder='Device hostname' onChange={this.onChange} />\n      <SelectInput key='dn_class' id='class' label='Device Class' value={this.state.data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='dn_a_domain_id' id='a_domain_id' label='Host Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <SelectInput key='dn_if_domain_id' id='if_domain_id' label='Interface Domain' value={this.state.data.if_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <SelectInput key='dn_ipam_network_id' id='ipam_network_id' label='Interface Network' value={this.state.data.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n      <TextInput key='dn_ip' id='ip' label='IP' value={this.state.data.ip} onChange={this.onChange} />\n      <TextInput key='dn_mac' id='mac' label='MAC' value={this.state.data.mac} onChange={this.onChange} />\n     </InfoColumns>\n     <StartButton key='dn_btn_start' onClick={() => this.addDevice()} title='Add device' />\n     <SearchButton key='dn_btn_search' onClick={() => this.searchIP()} title='Find available IP' />\n     <Result key='dn_result' result={this.state.result} />\n    </InfoArticle>\n   )\n }\n}\n\n// ************** Discover **************\n//\nclass Discover extends Component {\n constructor(props){\n  super(props)\n  this.state = {ipam_network_id:undefined,a_domain_id:undefined,content:null}\n }\n\n componentDidMount(){\n  post_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  post_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n changeContent = (elem) => this.setState({content:elem})\n\n runDiscovery(){\n  this.setState({content:<Spinner />})\n  post_call('api/device/discover',{network_id:this.state.ipam_network_id, a_domain_id:this.state.a_domain_id,if_domain_id:this.state.if_domain_id}).then(result => this.setState({content:<CodeArticle key='dd_result'>{JSON.stringify(result,null,2)}</CodeArticle>}))\n }\n\n render() {\n  if (this.state.networks && this.state.domains){\n   return (\n    <Fragment>\n     <InfoArticle key='dd_art' header='Device Discovery'>\n      <InfoColumns key='dd_content'>\n       <SelectInput key='dd_ipam_network_id' id='ipam_network_id' label='Network' value={this.state.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n       <SelectInput key='dd_a_domain_id' id='a_domain_id' label='Host Domain' value={this.state.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n       <SelectInput key='dd_if_domain_id' id='if_domain_id' label='Interface Domain' value={this.state.if_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      </InfoColumns>\n      <StartButton key='dd_btn_start' onClick={() => this.runDiscovery()} title='Start discovery' />\n     </InfoArticle>\n     <NavBar key='dd_navigation' id='dd_navigation' />\n     {this.state.content}\n    </Fragment>\n   )\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n componentDidMount(){\n  post_call('api/device/list', { extra:['system','mac','type','oui','class']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.hostname,row.class,row.ip,row.mac,row.oui,row.type_name,row.oid,row.serial,<StateLeds key={'dr_'+row.id} state={row.state} />]\n\n render(){\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_cr' header='Devices' thead={['ID','Hostname','Class','IP','MAC','OUI','Type','OID','Serial','State']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Type List **************\n//\nclass TypeList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/type_list').then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem});\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n listItem = (row) => [row.base,<HrefButton key={'tl_btn_' + row.name} text={row.name} onClick={() => this.changeSelf(<List key='device_list' field='type' search={row.name} />)} />,row.icon]\n\n render(){\n  return (this.state.data) ? <Fragment>\n   <ContentList key='dev_tp_cl' header='Device Types' thead={['Class','Name','Icon']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='dev_tp_cd'>{this.state.content}</ContentData>\n  </Fragment> : <Spinner />\n }\n}\n\n// ************** Model List **************\n//\nclass ModelList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/model_list').then(result => this.setState({...result,result:'OK'}))\n }\n\n syncModels = () => post_call('api/device/model_list',{op:'sync'}).then(result => this.setState(result))\n\n listItem = (row) => [row.id,row.name,row.type,<Fragment>\n  <ConfigureButton key={'ml_btn_info_' + row.id} onClick={() => this.changeContent(<ModelInfo key={'model_info_'+row.id} id={row.id} />)} title='Edit model information' />\n  <DeleteButton key={'ml_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete model' />\n </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete model?') && post_call('api/device/model_delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return (this.state.data) ? <Fragment>\n   <ContentList key='ml_cl' header='Device Models' thead={['ID','Model','Type','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n    <ReloadButton key='ml_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='ml_btn_sync' onClick={() => this.syncModels() } title='Resync models' />\n   </ContentList>\n   <ContentData key='ml_cd'>{this.state.content}</ContentData>\n  </Fragment> : <Spinner />\n }\n}\n\n// ************** Model Info **************\n//\nexport class ModelInfo extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  post_call('api/device/model_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/device/model_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return <InfoArticle key='dm_art' header='Device Model'>\n    <InfoColumns key='dm_content'>\n     <TextLine key='dm_name' id='name' text={this.state.data.name} />\n     <TextLine key='dm_type' id='type' text={this.state.extra.type} />\n     <TextInput key='dm_defaults_file' id='defaults_file' label='Default File' value={this.state.data.defaults_file} onChange={this.onChange} />\n     <TextInput key='dm_image_file' id='image_file' label='Image  File' value={this.state.data.image_file} onChange={this.onChange} />\n    </InfoColumns>\n    <TextAreaInput key='dm_parameters'  id='parameters' onChange={this.onChange} value={this.state.data.parameters} />\n    <SaveButton key='dm_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// ************** OUI Search **************\n//\nclass OUISearch extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{oui:''},content:null}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n ouiSearch = () => {\n  post_call('api/master/oui_info',{oui:this.state.data.oui}).then(result => this.setState({content:<InfoArticle key='os_art'><InfoColumns key='os_cont'><label htmlFor='oui'>OUI:</label><span id='oui'>{result.data.oui}</span><label htmlFor='company'>Company:</label><span id='company'>{result.data.company}</span></InfoColumns></InfoArticle>}))\n }\n\n render() {\n  return <Flex key='flex'>\n   <LineArticle key='os_art'>\n    Type MAC address to find <TextInput key='oui' id='oui' onChange={this.onChange} value={this.state.data.oui} placeholder='00:00:00' />\n    <SearchButton key='os_btn_search' onClick={() => this.ouiSearch()} title='Search for OUI' />\n   </LineArticle>\n   {this.state.content}\n  </Flex>\n }\n}\n\n// ************** OUI List **************\n//\nclass OUIList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/oui_list').then(result => this.setState(result))\n }\n\n render(){\n   return (this.state.data) ? <ContentReport key='oui_list_cr' header='OUI' thead={['oui','company']} trows={this.state.data} listItem={(row)=> [`${row.oui.substring(0,2)}:${row.oui.substring(2,4)}:${row.oui.substring(4,6)}`,row.company]} /> : <Spinner />\n }\n}\n\n// ************** Function **************\n//\nclass Function extends Component {\n componentDidMount(){\n  post_call('api/device/function',{op:this.props.op, id:this.props.id, type:this.props.type}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state)\n   return <Spinner />\n  else if (this.state.status === 'OK'){\n   if(this.state.data.length > 0){\n    const head = Object.keys(this.state.data[0]);\n    return <ContentReport key='df_cr' thead={head} trows={this.state.data} listItem={(row) => head.map(hd => row[hd])} />\n   } else\n    return <InfoArticle key='df_art'>No Data</InfoArticle>\n  } else\n   return <CodeArticle key='df_art'>Error in devdata: {this.state.info}</CodeArticle>\n }\n}\n","import React, { Component, Fragment } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, LineArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SearchInput, SelectInput } from './infra/Inputs.jsx';\nimport { HrefButton, InfoButton, NetworkButton, ReloadButton, SearchButton, SyncButton } from './infra/Buttons.jsx';\n\nimport { Edit as VisualizeEdit } from './visualize.jsx';\n\n// ************** Search **************\n//\nexport class Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'mac',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='fs_art' header='FDB Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <option value='mac'>MAC</option>\n    <option value='device_id'>Device ID</option>\n   </SelectInput>\n   <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n   <SearchButton key='fs_btn_search' onClick={() => this.changeContent(<List key='fdb_list' {...this.state} changeSelf={this.props.changeSelf} />)} title='Search FDB' />\n  </LineArticle>\n }\n}\n\n// *************** Device *****************\n//\nexport class Device extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:null, searchfield:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n componentDidMount(){\n  post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState(result))\n }\n\n syncFDB(){\n  this.setState({wait:<Spinner />})\n  post_call('api/fdb/sync',{id:this.props.id, ip:this.props.ip, type:this.props.type}).then(result => this.setState({wait:null}));\n }\n\n changeInterface = (interface_id) => import('./interface.jsx').then(lib => this.changeContent(<lib.Info key='interface_info' device_id={this.props.id} interface_id={interface_id} changeSelf={this.changeContent} />))\n\n listItem = (row,idx) => [row.vlan,row.snmp_index,<HrefButton key={'fd_intf_'+row.interface_id} text={row.name} onClick={() => this.changeInterface(row.interface_id)} />,row.mac,row.oui]\n\n render(){\n  if (this.state.data) {\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <ContentReport key='fd_cr' header='FDB' thead={['VLAN','SNMP','Interface','MAC','OUI']} trows={data} listItem={this.listItem}>\n    <ReloadButton key='fd_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='fd_btn_sync' onClick={() => this.syncFDB() } title='Resync FDB' />\n    <SearchInput key='fd_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' />\n    {this.state.wait}\n   </ContentReport>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** List *****************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:'', content:null}\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/list',{search:this.props.search, field:this.props.field, extra:['device_id','hostname']}).then(result => this.setState(result))\n }\n\n changeSearch = (mac,idx) => this.setState({content:<Info key={'fi_'+idx} mac={mac} />});\n\n changeVisualize = (device_id) => ('changeSelf' in this.props && this.setState({content:<VisualizeEdit key={'viz_id_' + device_id} type='device' id={device_id} />}));\n\n listItem = (row,idx) => [row.device_id,row.hostname,row.vlan,row.snmp_index,row.name,<HrefButton key={'fd_intf_'+idx} text={row.mac} onClick={() => this.setState({searchfield:row.mac})} />,<Fragment><InfoButton key={'fd_intf_'+idx}  onClick={() => this.changeSearch(row.mac,idx)} title='Find interface(s)' /><NetworkButton key={'fd_map_'+idx} onClick={() => this.changeVisualize(row.device_id)} /></Fragment>]\n\n render(){\n  if (this.state.data){\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <Fragment>\n    <ContentList key='fl_cr' header='FDB' thead={['ID','Hostname','VLAN','SNMP','Interface','MAC','']} trows={data} listItem={this.listItem}>\n     <ReloadButton key='fl_btn_reload' onClick={() => this.componentDidMount()} />\n     <SearchInput key='fl_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' text={this.state.searchfield} />\n    </ContentList>\n    <ContentData key='fl_content'>{this.state.content}</ContentData>\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Info *****************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/fdb/search',{mac:this.props.mac}).then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.device)\n   return <ContentReport key='fd_cr' header={`${this.state.device.hostname} (${this.state.device.id})`} thead={['ID','Interface','Description','OUI']} trows={this.state.interfaces} listItem={(row) => [row.interface_id,row.name,row.description,row.oui]} />\n  else if (this.state.oui)\n   return <LineArticle key='fd_oui_la' header='Search result'>OUI: {this.state.oui}</LineArticle>\n  else if (this.state.status)\n   return <LineArticle key='fd_oui_la' header='Search result'>Search result: {this.state.info}</LineArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["fdb.jsx"],"names":["Search","props","changeContent","elem","changeSelf","onChange","e","setState","target","name","value","state","field","search","key","header","id","this","placeholder","onClick","List","title","Component","Device","changeInterface","interface_id","then","lib","Info","device_id","listItem","row","idx","vlan","snmp_index","text","mac","wait","post_call","result","ip","type","data","thead","trows","componentDidMount","syncFDB","changeSearch","content","searchHandler","searchfield","hostname","extra","toUpperCase","length","filter","includes","device","interfaces","description","status","info"],"mappings":"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","file":"static/js/14.7f85f0aa.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, LineArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SearchInput, SelectInput } from './infra/Inputs.jsx';\nimport { HrefButton, ReloadButton, SearchButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************** Search **************\n//\nexport class Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'mac',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='fs_art' header='FDB Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <option value='mac'>MAC</option>\n    <option value='device_id'>Device ID</option>\n   </SelectInput>\n   <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n   <SearchButton key='fs_btn_search' onClick={() => this.changeContent(<List key='fdb_list' {...this.state} changeSelf={this.props.changeSelf} />)} title='Search FDB' />\n  </LineArticle>\n }\n}\n\n// *************** Device *****************\n//\nexport class Device extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:null}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n componentDidMount(){\n  post_call('api/fdb/list',{field:\"device_id\",search:this.props.id}).then(result => this.setState(result))\n }\n\n syncFDB(){\n  this.setState({wait:<Spinner />})\n  post_call('api/fdb/sync',{id:this.props.id, ip:this.props.ip, type:this.props.type}).then(result => this.setState({wait:null}));\n }\n\n changeInterface = (interface_id) => import('./interface.jsx').then(lib => this.changeContent(<lib.Info key='interface_info' device_id={this.props.id} interface_id={interface_id} changeSelf={this.changeContent} />))\n\n listItem = (row,idx) => [row.vlan,row.snmp_index,<HrefButton key={'fd_intf_'+row.interface_id} text={row.name} onClick={() => this.changeInterface(row.interface_id)} />,row.mac]\n\n render(){\n  if (this.state.data)\n   return <ContentReport key='fd_cr' header='FDB' thead={['VLAN','SNMP','Interface','MAC']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='fd_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='fd_btn_sync' onClick={() => this.syncFDB() } title='Resync FDB' />\n    {this.state.wait}\n   </ContentReport>\n  else\n   return <Spinner />\n }\n}\n\n// *************** List *****************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:'', content:null}\n }\n\n componentDidMount(){\n  post_call('api/fdb/list',{search:this.props.search, field:this.props.field, extra:['device_id','hostname']}).then(result => this.setState(result))\n }\n\n changeSearch = (mac,idx) => this.setState({content:<Info key={'fi_'+idx} mac={mac} />});\n\n searchHandler = (e) => this.setState({searchfield:e.target.value})\n\n listItem = (row,idx) => [row.device_id,row.hostname,row.vlan,row.snmp_index,row.name,<HrefButton key={'fd_intf_'+idx} text={row.mac} onClick={() => this.changeSearch(row.mac,idx)} />]\n\n render(){\n  if (this.state.data){\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <Fragment key='fl_frag'>\n    <ContentList key='fl_cr' header='FDB' thead={['ID','Hostname','VLAN','SNMP','Interface','MAC']} trows={data} listItem={this.listItem}>\n     <ReloadButton key='fl_btn_reload' onClick={() => this.componentDidMount()} />\n     <SearchInput key='fl_search' searchHandler={this.searchHandler} value={this.state.searchfield} placeholder='Search MAC' />\n    </ContentList>\n    <ContentData key='fl_content'>{this.state.content}</ContentData>\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Info *****************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/fdb/search',{mac:this.props.mac}).then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.device)\n   return <ContentReport key='fd_cr' header={`${this.state.device.hostname} (${this.state.device.id})`} thead={['ID','Name','Description']} trows={this.state.interfaces} listItem={(row) => [row.interface_id,row.name,row.description]} />\n  else if (this.state.status)\n   return <LineArticle key='fd_la' header='Search error'>Search result: {this.state.info}</LineArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
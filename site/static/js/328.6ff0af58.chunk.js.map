{"version":3,"file":"static/js/328.6ff0af58.chunk.js","mappings":"yNAQO,MAAMA,UAAeC,EAAAA,UAC1BC,WAAAA,CAAYC,GACZC,MAAMD,GAAM,KAIbE,cAAiBC,GAASC,KAAKJ,MAAMK,WAAWF,GAAM,KAEtDG,SAAYC,GAAMH,KAAKI,SAAS,CAAC,CAACD,EAAEE,OAAOC,MAAMH,EAAEE,OAAOE,QALzDP,KAAKQ,MAAQ,CAACC,MAAM,MAAMC,OAAO,GAClC,CAMAC,MAAAA,GACC,OAAOC,EAAAA,EAAAA,MAACC,EAAAA,YAAW,CAAcC,OAAO,aAAYC,SAAA,EACnDH,EAAAA,EAAAA,MAACI,EAAAA,YAAW,CAAaC,GAAG,QAAQf,SAAUF,KAAKE,SAAUK,MAAOP,KAAKQ,MAAMC,MAAMM,SAAA,EACpFG,EAAAA,EAAAA,KAAA,UAAQX,MAAM,MAAKQ,SAAC,SACpBG,EAAAA,EAAAA,KAAA,UAAQX,MAAM,YAAWQ,SAAC,gBAFV,UAIjBG,EAAAA,EAAAA,KAACC,EAAAA,UAAS,CAAcF,GAAG,SAASf,SAAUF,KAAKE,SAAUK,MAAOP,KAAKQ,MAAME,OAAQU,YAAY,UAApF,WACfF,EAAAA,EAAAA,KAACG,EAAAA,aAAY,CAAqBC,QAASA,IAAMtB,KAAKF,eAAcoB,EAAAA,EAAAA,KAACK,EAAI,IAAoBvB,KAAKQ,MAAOP,WAAYD,KAAKJ,MAAMK,YAAlD,aAAmEuB,MAAM,cAArI,mBANK,SAQzB,EAKM,MAAMC,UAAe/B,EAAAA,UAC3BC,WAAAA,CAAYC,GACXC,MAAMD,GAAM,KAIbE,cAAiBC,GAASC,KAAKJ,MAAMK,WAAWF,GAAM,KAWtD2B,gBAAmBC,GAAiB,6BAA0BC,KAAKC,GAAO7B,KAAKF,eAAcoB,EAAAA,EAAAA,KAACW,EAAIC,KAAI,CAAsBC,UAAW/B,KAAKJ,MAAMqB,GAAIU,aAAcA,EAAc1B,WAAYD,KAAKF,eAAxF,oBAA2G,KAEtNkC,SAAW,CAACC,EAAIC,IAAQ,CAACD,EAAIE,KAAKF,EAAIG,YAAWlB,EAAAA,EAAAA,KAACmB,EAAAA,WAAU,CAAmCC,KAAML,EAAI3B,KAAMgB,QAASA,IAAMtB,KAAK0B,gBAAgBO,EAAIN,eAArF,WAAWM,EAAIN,cAAwFM,EAAIM,IAAIN,EAAIO,KAhBpLxC,KAAKQ,MAAQ,CAACiC,KAAK,KAAMC,YAAY,GACtC,CAIAC,iBAAAA,IACCC,EAAAA,EAAAA,IAAU,eAAe,CAACnC,MAAM,YAAYC,OAAOV,KAAKJ,MAAMqB,GAAI4B,MAAM,CAAC,SAASjB,KAAKkB,GAAU9C,KAAKI,SAAS0C,GAChH,CAEAC,OAAAA,GACC/C,KAAKI,SAAS,CAACqC,MAAKvB,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,OAC5BJ,EAAAA,EAAAA,IAAU,eAAe,CAAC3B,GAAGjB,KAAKJ,MAAMqB,GAAIgC,GAAGjD,KAAKJ,MAAMqD,GAAIC,KAAKlD,KAAKJ,MAAMsD,OAAOtB,KAAKkB,GAA4B,OAAlBA,EAAOK,SAAmBP,EAAAA,EAAAA,IAAU,eAAe,CAACnC,MAAM,YAAYC,OAAOV,KAAKJ,MAAMqB,GAAI4B,MAAM,CAAC,SAASjB,KAAKkB,GAAU9C,KAAKI,SAAS,IAAI0C,EAAQL,KAAK,QAC/P,CAMA9B,MAAAA,GACC,GAAIX,KAAKQ,MAAM4C,KAAM,CACpB,MAAM1C,EAASV,KAAKQ,MAAMkC,YAAYW,cAChCD,EAA0B,IAAlB1C,EAAO4C,OAAgBtD,KAAKQ,MAAM4C,KAAOpD,KAAKQ,MAAM4C,KAAKG,OAAOtB,GAAOA,EAAIM,IAAIiB,SAAS9C,IACtG,OAAOE,EAAAA,EAAAA,MAAC6C,EAAAA,cAAa,CAAa3C,OAAO,MAAM4C,MAAO,CAAC,OAAO,OAAO,YAAY,MAAM,OAAQC,MAAOP,EAAMpB,SAAUhC,KAAKgC,SAASjB,SAAA,EACnIG,EAAAA,EAAAA,KAAC0C,EAAAA,aAAY,CAAqBtC,QAASA,IAAMtB,KAAK2C,qBAApC,kBAClBzB,EAAAA,EAAAA,KAAC2C,EAAAA,WAAU,CAAmBvC,QAASA,IAAMtB,KAAK+C,UAAYvB,MAAM,cAApD,gBAChBN,EAAAA,EAAAA,KAAC4C,EAAAA,YAAW,CAAiBC,WAAaC,GAAMhE,KAAKI,SAAS,CAACsC,YAAYsB,IAAK5C,YAAY,cAA3E,aAChBpB,KAAKQ,MAAMiC,OAJa,QAM3B,CACC,OAAOvB,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,GACjB,EAKM,MAAMzB,UAAa7B,EAAAA,UACzBC,WAAAA,CAAYC,GACXC,MAAMD,GAAM,KAcbqE,aAAe,CAAC1B,EAAIL,IAAQlC,KAAKF,eAAcoB,EAAAA,EAAAA,KAACY,EAAI,CAAgBS,IAAKA,GAAhB,aAAwB,KAEjF2B,gBAAmBnC,GAAe,eAAgB/B,KAAKJ,OAAS,6BAA0BgC,KAAKC,GAAO7B,KAAKF,eAAcoB,EAAAA,EAAAA,KAACW,EAAIsC,KAAI,CAA6BjB,KAAK,SAASjC,GAAIc,GAAzC,UAAYA,KAA8C,KAElMC,SAAW,CAACC,EAAIC,IAAQ,CAACD,EAAIF,UAAUE,EAAImC,SAASnC,EAAIE,KAAKF,EAAIG,WAAWH,EAAI3B,MAAKY,EAAAA,EAAAA,KAACmB,EAAAA,WAAU,CAAmBC,KAAML,EAAIM,IAAKjB,QAASA,IAAMtB,KAAKI,SAAS,CAACsC,YAAYT,EAAIM,OAA1E,QAAQL,IAA4EtB,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAAtD,SAAA,EACxLG,EAAAA,EAAAA,KAACoD,EAAAA,WAAU,CAAYhD,QAASA,IAAMtB,KAAKiE,aAAahC,EAAIM,IAAIL,GAAMV,MAAM,qBAA5D,SAChBN,EAAAA,EAAAA,KAACqD,EAAAA,cAAa,CAAWjD,QAASA,IAAMtB,KAAKkE,gBAAgBjC,EAAIF,YAA9C,WAnBpB/B,KAAKQ,MAAQ,CAACkC,YAAY,GAC3B,CAEA8B,kBAAAA,CAAmBC,GACfA,IAAczE,KAAKJ,OACrBI,KAAK2C,mBAEP,CAEAA,iBAAAA,IACCC,EAAAA,EAAAA,IAAU,eAAe,CAAClC,OAAOV,KAAKJ,MAAMc,OAAQD,MAAMT,KAAKJ,MAAMa,MAAOoC,MAAM,CAAC,YAAY,cAAcjB,KAAKkB,GAAU9C,KAAKI,SAAS0C,GAC3I,CAWAnC,MAAAA,GACC,GAAIX,KAAKQ,MAAM4C,KAAK,CACnB,MAAM1C,EAASV,KAAKQ,MAAMkC,YAAYW,cAChCD,EAA0B,IAAlB1C,EAAO4C,OAAgBtD,KAAKQ,MAAM4C,KAAOpD,KAAKQ,MAAM4C,KAAKG,OAAOtB,GAAOA,EAAIM,IAAIiB,SAAS9C,IACtG,OAAOE,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAAtD,SAAA,EACNH,EAAAA,EAAAA,MAAC8D,EAAAA,YAAW,CAAU5D,OAAO,MAAM4C,MAAO,CAAC,KAAK,WAAW,OAAO,OAAO,YAAY,MAAM,IAAKC,MAAOP,EAAMpB,SAAUhC,KAAKgC,SAASjB,SAAA,EACpIG,EAAAA,EAAAA,KAAC0C,EAAAA,aAAY,CAActC,QAASA,IAAMtB,KAAK2C,qBAA7B,WAClBzB,EAAAA,EAAAA,KAAC4C,EAAAA,YAAW,CAAcC,WAAaC,GAAMhE,KAAKI,SAAS,CAACsC,YAAYsB,IAAK5C,YAAY,aAAakB,KAAMtC,KAAKQ,MAAMkC,aAAtG,YAFD,OAIjBxB,EAAAA,EAAAA,KAACyD,EAAAA,YAAW,CAAWC,YAAcC,GAAQ7E,KAAKF,cAAgB+E,GAAjD,SAEnB,CACC,OAAO3D,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,GACjB,EAKD,MAAMlB,UAAapC,EAAAA,UAClBC,WAAAA,CAAYC,GACXC,MAAMD,GACNI,KAAKQ,MAAQ,CAAC,CACf,CAEAgE,kBAAAA,CAAmBC,GACdA,IAAczE,KAAKJ,OACtBI,KAAK2C,mBAEP,CAEAA,iBAAAA,IACCC,EAAAA,EAAAA,IAAU,iBAAiB,CAACL,IAAIvC,KAAKJ,MAAM2C,MAAMX,KAAKkB,GAAU9C,KAAKI,SAAS0C,GAC/E,CAEAnC,MAAAA,GACC,OAAIX,KAAKQ,MAAMsE,QACP5D,EAAAA,EAAAA,KAACuC,EAAAA,cAAa,CAAa3C,OAAQ,GAAGd,KAAKQ,MAAMsE,OAAOV,aAAapE,KAAKQ,MAAMsE,OAAO7D,MAAOyC,MAAO,CAAC,KAAK,YAAY,cAAc,OAAQC,MAAO3D,KAAKQ,MAAMuE,WAAY/C,SAAWC,GAAQ,CAACA,EAAIN,aAAaM,EAAI3B,KAAK2B,EAAI+C,YAAY/C,EAAIO,MAA1N,SAClBxC,KAAKQ,MAAMgC,KACZ5B,EAAAA,EAAAA,MAACC,EAAAA,YAAW,CAAiBC,OAAO,gBAAeC,SAAA,CAAC,QAAMf,KAAKQ,MAAMgC,MAApD,aAChBxC,KAAKQ,MAAM2C,QACZvC,EAAAA,EAAAA,MAACC,EAAAA,YAAW,CAAiBC,OAAO,gBAAeC,SAAA,CAAC,kBAAgBf,KAAKQ,MAAMyE,OAA9D,cAEjB/D,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,GACjB,E","sources":["fdb.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, LineArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SearchField, SelectInput } from './infra/Inputs.jsx';\nimport { HrefButton, InfoButton, NetworkButton, ReloadButton, SearchButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************** Search **************\n//\nexport class Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'mac',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='fs_art' header='FDB Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <option value='mac'>MAC</option>\n    <option value='device_id'>Device ID</option>\n   </SelectInput>\n   <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n   <SearchButton key='fs_btn_search' onClick={() => this.changeContent(<List key='fdb_list' {...this.state} changeSelf={this.props.changeSelf} />)} title='Search FDB' />\n  </LineArticle>\n }\n}\n\n// *************** Device *****************\n//\nexport class Device extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:null, searchfield:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n componentDidMount(){\n  post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState(result))\n }\n\n syncFDB(){\n  this.setState({wait:<Spinner />})\n  post_call('api/fdb/sync',{id:this.props.id, ip:this.props.ip, type:this.props.type}).then(result => result.status === 'OK' && post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState({...result, wait:null})));\n }\n\n changeInterface = (interface_id) => import('./interface.jsx').then(lib => this.changeContent(<lib.Info key='interface_info' device_id={this.props.id} interface_id={interface_id} changeSelf={this.changeContent} />))\n\n listItem = (row,idx) => [row.vlan,row.snmp_index,<HrefButton key={'fd_intf_'+row.interface_id} text={row.name} onClick={() => this.changeInterface(row.interface_id)} />,row.mac,row.oui]\n\n render(){\n  if (this.state.data) {\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <ContentReport key='fd_cr' header='FDB' thead={['VLAN','SNMP','Interface','MAC','OUI']} trows={data} listItem={this.listItem}>\n    <ReloadButton key='fd_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='fd_btn_sync' onClick={() => this.syncFDB() } title='Resync FDB' />\n    <SearchField key='fd_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' />\n    {this.state.wait}\n   </ContentReport>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** List *****************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/list',{search:this.props.search, field:this.props.field, extra:['device_id','hostname']}).then(result => this.setState(result))\n }\n\n changeSearch = (mac,idx) => this.changeContent(<Info key='fdb_info' mac={mac} />)\n\n changeVisualize = (device_id) => ('changeSelf' in this.props && import('./visualize.jsx').then(lib => this.changeContent(<lib.Edit key={'viz_id_' + device_id} type='device' id={device_id} />)));\n\n listItem = (row,idx) => [row.device_id,row.hostname,row.vlan,row.snmp_index,row.name,<HrefButton key={'intf_'+idx} text={row.mac} onClick={() => this.setState({searchfield:row.mac})} />,<>\n   <InfoButton key='info' onClick={() => this.changeSearch(row.mac,idx)} title='Find interface(s)' />\n   <NetworkButton key='map' onClick={() => this.changeVisualize(row.device_id)} />\n  </>]\n\n render(){\n  if (this.state.data){\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <>\n    <ContentList key='cl' header='FDB' thead={['ID','Hostname','VLAN','SNMP','Interface','MAC','']} trows={data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n     <SearchField key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' text={this.state.searchfield} />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Info *****************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/search',{mac:this.props.mac}).then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.device)\n   return <ContentReport key='fd_cr' header={`${this.state.device.hostname} (${this.state.device.id})`} thead={['ID','Interface','Description','OUI']} trows={this.state.interfaces} listItem={(row) => [row.interface_id,row.name,row.description,row.oui]} />\n  else if (this.state.oui)\n   return <LineArticle key='fd_oui_la' header='Search result'>OUI: {this.state.oui}</LineArticle>\n  else if (this.state.status)\n   return <LineArticle key='fd_oui_la' header='Search result'>Search result: {this.state.info}</LineArticle>\n  else\n   return <Spinner />\n }\n}\n"],"names":["Search","Component","constructor","props","super","changeContent","elem","this","changeSelf","onChange","e","setState","target","name","value","state","field","search","render","_jsxs","LineArticle","header","children","SelectInput","id","_jsx","TextInput","placeholder","SearchButton","onClick","List","title","Device","changeInterface","interface_id","then","lib","Info","device_id","listItem","row","idx","vlan","snmp_index","HrefButton","text","mac","oui","wait","searchfield","componentDidMount","post_call","extra","result","syncFDB","Spinner","ip","type","status","data","toUpperCase","length","filter","includes","ContentReport","thead","trows","ReloadButton","SyncButton","SearchField","searchFire","s","changeSearch","changeVisualize","Edit","hostname","_Fragment","InfoButton","NetworkButton","componentDidUpdate","prevProps","ContentList","ContentData","mountUpdate","fun","device","interfaces","description","info"],"sourceRoot":""}
{"version":3,"sources":["pdu.jsx"],"names":["Manage","changeContent","elem","setState","post_call","id","this","props","device_id","then","result","context","loadNavigation","title","data","onClick","Inventory","type","Info","state","Component","contextType","RimsContext","lookupSlots","op","slots","i","push","label","text","style","justifyContent","header","JSON","stringify","componentDidMount","listItem","row","idx","slotname","unit","Unit","name","Operation","thead","trows","undefined","mountUpdate","fun","operation","wait","slot","status","off","onChange","e","target","value","updatePDU","info"],"mappings":"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","file":"static/js/19.7d55fdf5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Flex, InfoArticle, InfoColumns, Spinner, ContentList, ContentData, Result } from './infra/UI.jsx';\nimport { TextInput, TextLine } from './infra/Inputs.jsx';\nimport { HrefButton, ReloadButton, SaveButton, SearchButton, StartButton, StopButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavInfo } from './infra/Navigation.jsx';\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n componentDidMount(){\n  post_call('api/device/hostname',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='pdu_navbar'>\n    <NavInfo key='pdu_nav_name' title={result.data} />\n    <NavButton key='pdu_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='pdu_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    <NavButton key='pdu_nav_info' title='Info' onClick={() => this.changeContent(<Info key='pdu_info' device_id={this.props.device_id} type={this.props.type} />)} />\n   </NavBar>)\n  })\n  this.setState(<Inventory key='pdu_inventory' device_id={this.props.device_id} type={this.props.type} />);\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <>{this.state}</>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Info **************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/info',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n lookupSlots = () => post_call('api/devices/'+this.props.type+'/info',{device_id:this.props.device_id,op:'lookup'}).then(result => this.setState(result))\n\n render(){\n  if (this.state.data){\n   let slots = [];\n   for (let i = 0; i < this.state.data.slots; i++){\n    slots.push(<TextLine key={'pi_sn_' + i} id={'pi_slot_name_' + i} label={'Slot ' + i + ' Name'} text={this.state.data[i + '_slot_name']} />);\n    slots.push(<TextLine key={'pi_si_' + i} id={'pi_slot_id_' + i} label={'Slot ' + i + ' ID'} text={this.state.data[i + '_slot_id']} />);\n   }\n   return <Flex key='pi_flex' style={{justifyContent:'space-evenly'}}>\n    <InfoArticle key='pi_article' header={'PDU Device Info - '+this.props.type}>\n     <InfoColumns key='pi_info'>\n      <TextLine key='pi_slots' id='slots' label='Right/Left slots' text={JSON.stringify(this.state.data.slots === 2)} />\n      {slots}\n     </InfoColumns>\n     <ReloadButton key='pi_btn_reload' onClick={() => this.componentDidMount() } />\n     <SearchButton key='pi_btn_search' onClick={() => this.lookupSlots() } />\n    </InfoArticle>\n   </Flex>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n listItem = (row,idx) => [`${row.slotname}.${row.unit}`,<HrefButton key={'inv_' + idx} onClick={() => this.changeContent(<Unit key={'pdu_unit_'+idx} device_id={this.props.device_id} type={this.props.type} {...row} />)} text={row.name} title='Edit port info' />,<Operation key={'state_'+idx} idx={idx} device_id={this.props.device_id} type={this.props.type} {...row} />]\n\n render(){\n  if (this.state.data){\n   return <>\n    <ContentList key='cl' header='Inventory' thead={['Position','Device','State']} trows={this.state.data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component{\n constructor(props){\n  super(props)\n  this.state = {state:this.props.state, status:'',wait:null};\n }\n\n operation = (state) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/op',{device_id:this.props.device_id, slot:this.props.slot, unit:this.props.unit, state:state}).then(result => this.setState({...result, wait:null}));\n }\n\n render(){\n  const off = (this.state.state === 'off');\n  return <>\n   {off && <StartButton key='start' onClick={() => this.operation('on')} title={this.state.status} />}\n   {!off && <StopButton key='stop' onClick={() => this.operation('off')} title={this.state.status} />}\n   {!off && <ReloadButton key='reload' onClick={() => this.operation('reboot')} title={this.state.status} />}\n   {this.state.wait}\n  </>\n }\n}\n\n// ************** Unit **************\n//\nclass Unit extends Component {\n constructor(props){\n  super(props)\n  this.state = {text:this.props.name,wait:null}\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n updatePDU = () => {\n  this.setState({wait:<Spinner />, info:undefined});\n  post_call('api/devices/'+this.props.type+'/update',{op:'update',device_id:this.props.device_id,slot:this.props.slot,unit:this.props.unit,text:this.state.text}).then(result => this.setState({...result,wait:null}));\n }\n\n render(){\n  let result = ''\n  if (this.state.status)\n   result = (this.state.status === 'OK') ? 'OK' : this.state.info;\n  return <InfoArticle key='pu_article'>\n   <InfoColumns key='pu_info'>\n    <TextLine key='pu_slot_unit' id='su' label='Slot.Unit' text={`${this.props.slotname}.${this.props.unit}`} />\n    <TextInput key='pu_slot_text' id='text' value={this.state.text} onChange={this.onChange} />\n   </InfoColumns>\n   <Result key='pu_result' result={result} />\n   <SaveButton key='pu_btn_save' onClick={() => this.updatePDU()} title='Update pdu' />\n   {this.state.wait}\n  </InfoArticle>\n }\n}\n"],"sourceRoot":""}
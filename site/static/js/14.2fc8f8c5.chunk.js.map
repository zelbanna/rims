{"version":3,"sources":["fdb.jsx"],"names":["Search","props","changeContent","elem","changeSelf","onChange","e","setState","target","name","value","state","field","search","header","id","this","placeholder","onClick","List","title","Component","Device","changeInterface","interface_id","then","lib","Info","device_id","listItem","row","idx","vlan","snmp_index","text","mac","oui","wait","searchfield","post_call","extra","result","ip","type","status","data","toUpperCase","length","filter","includes","thead","trows","componentDidMount","syncFDB","searchFire","s","changeSearch","changeVisualize","Edit","hostname","prevProps","mountUpdate","fun","device","interfaces","description","info"],"mappings":"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","file":"static/js/14.2fc8f8c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, LineArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SearchField, SelectInput } from './infra/Inputs.jsx';\nimport { HrefButton, InfoButton, NetworkButton, ReloadButton, SearchButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************** Search **************\n//\nexport class Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'mac',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='fs_art' header='FDB Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <option value='mac'>MAC</option>\n    <option value='device_id'>Device ID</option>\n   </SelectInput>\n   <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n   <SearchButton key='fs_btn_search' onClick={() => this.changeContent(<List key='fdb_list' {...this.state} changeSelf={this.props.changeSelf} />)} title='Search FDB' />\n  </LineArticle>\n }\n}\n\n// *************** Device *****************\n//\nexport class Device extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:null, searchfield:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n componentDidMount(){\n  post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState(result))\n }\n\n syncFDB(){\n  this.setState({wait:<Spinner />})\n  post_call('api/fdb/sync',{id:this.props.id, ip:this.props.ip, type:this.props.type}).then(result => result.status === 'OK' && post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState({...result, wait:null})));\n }\n\n changeInterface = (interface_id) => import('./interface.jsx').then(lib => this.changeContent(<lib.Info key='interface_info' device_id={this.props.id} interface_id={interface_id} changeSelf={this.changeContent} />))\n\n listItem = (row,idx) => [row.vlan,row.snmp_index,<HrefButton key={'fd_intf_'+row.interface_id} text={row.name} onClick={() => this.changeInterface(row.interface_id)} />,row.mac,row.oui]\n\n render(){\n  if (this.state.data) {\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <ContentReport key='fd_cr' header='FDB' thead={['VLAN','SNMP','Interface','MAC','OUI']} trows={data} listItem={this.listItem}>\n    <ReloadButton key='fd_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='fd_btn_sync' onClick={() => this.syncFDB() } title='Resync FDB' />\n    <SearchField key='fd_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' />\n    {this.state.wait}\n   </ContentReport>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** List *****************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/list',{search:this.props.search, field:this.props.field, extra:['device_id','hostname']}).then(result => this.setState(result))\n }\n\n changeSearch = (mac,idx) => this.changeContent(<Info key='fdb_info' mac={mac} />)\n\n changeVisualize = (device_id) => ('changeSelf' in this.props && import('./visualize.jsx').then(lib => this.changeContent(<lib.Edit key={'viz_id_' + device_id} type='device' id={device_id} />)));\n\n listItem = (row,idx) => [row.device_id,row.hostname,row.vlan,row.snmp_index,row.name,<HrefButton key={'intf_'+idx} text={row.mac} onClick={() => this.setState({searchfield:row.mac})} />,<>\n   <InfoButton key='info' onClick={() => this.changeSearch(row.mac,idx)} title='Find interface(s)' />\n   <NetworkButton key='map' onClick={() => this.changeVisualize(row.device_id)} />\n  </>]\n\n render(){\n  if (this.state.data){\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <>\n    <ContentList key='cl' header='FDB' thead={['ID','Hostname','VLAN','SNMP','Interface','MAC','']} trows={data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n     <SearchField key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' text={this.state.searchfield} />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Info *****************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/search',{mac:this.props.mac}).then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.device)\n   return <ContentReport key='fd_cr' header={`${this.state.device.hostname} (${this.state.device.id})`} thead={['ID','Interface','Description','OUI']} trows={this.state.interfaces} listItem={(row) => [row.interface_id,row.name,row.description,row.oui]} />\n  else if (this.state.oui)\n   return <LineArticle key='fd_oui_la' header='Search result'>OUI: {this.state.oui}</LineArticle>\n  else if (this.state.status)\n   return <LineArticle key='fd_oui_la' header='Search result'>Search result: {this.state.info}</LineArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
{"version":3,"file":"static/js/631.7828c743.chunk.js","mappings":"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","sources":["console.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Flex, InfoArticle, InfoColumns, Spinner, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\nimport { ReloadButton, SaveButton, TermButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavInfo } from './infra/Navigation.jsx';\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n componentDidMount(){\n  post_call('api/device/hostname',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='cons_navbar'>\n    <NavInfo key='cons_nav_name' title={result.data} />\n    <NavButton key='cons_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='cons_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    <NavButton key='con_nav_info' title='Info' onClick={() => this.changeContent(<Info key='con_info' device_id={this.props.device_id} type={this.props.type} />)} />\n   </NavBar>)\n  })\n  this.setState(<Inventory key='cons_inventory' device_id={this.props.device_id} type={this.props.type} />);\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return <>{this.state}</>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Info **************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/info',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/devices/'+this.props.type+'/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render(){\n  if (this.state.data){\n   return <Flex key='ci_flex' style={{justifyContent:'space-evenly'}}>\n    <InfoArticle key='ci_article' header={'Console Info - ' + this.props.type}>\n     <InfoColumns key='ci_info'>\n      <TextInput key='ci_access_url' id='access_url' label='Access URL' value={this.state.data.access_url} onChange={this.onChange} title='URL used as base together with port' />\n      <TextInput key='ci_port' id='port' value={this.state.data.port} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='ci_btn_reload' onClick={() => this.componentDidMount() } />\n     <SaveButton key='ci_btn_save' onClick={() => this.updateInfo() } />\n    </InfoArticle>\n   </Flex>\n  } else\n   return <Spinner />\n }\n}\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n cnctFunction = (intf) => {\n  const port = parseInt(intf) + parseInt(this.state.extra.port);\n  window.open(`${this.state.extra.access_url}:${port}`,'_self');\n }\n\n listItem = (row) => [row.interface,row.name,<TermButton key={'con_inv_btn_cnct_' + row.interface} onClick={() => this.cnctFunction(row.interface)} title='Connect' />]\n\n render(){\n  if (this.state.data){\n   return <>\n    <ContentList key='cl' header='Inventory' thead={['Port','Device','']} trows={this.state.data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n"],"names":["Manage","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","changeContent","elem","setState","_createClass","key","value","_this2","post_call","id","this","props","device_id","then","result","context","loadNavigation","_jsxs","NavBar","children","_jsx","NavInfo","title","data","NavButton","onClick","Inventory","type","Info","_Fragment","state","Component","contextType","RimsContext","_Component2","_super2","_this3","onChange","e","_objectSpread","_defineProperty","target","name","updateInfo","op","_this4","_this5","Flex","style","justifyContent","InfoArticle","header","InfoColumns","TextInput","label","access_url","port","ReloadButton","componentDidMount","SaveButton","Spinner","_Component3","_super3","_this6","cnctFunction","intf","parseInt","extra","window","open","listItem","row","interface","TermButton","_this7","_this8","ContentList","thead","trows","undefined","ContentData","mountUpdate","fun"],"sourceRoot":""}
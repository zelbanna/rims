{"version":3,"file":"static/js/291.20adbdc7.chunk.js","mappings":"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","sources":["multimedia.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { CheckboxInput, TextLine,TextInput } from './infra/Inputs.jsx';\nimport { DocButton, DeleteButton, InfoButton, ReloadButton, SearchButton, StartButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************* Main ************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n  this.node = (this.props.node) ? this.props.node : this.context.settings.node;\n }\n\n componentDidMount(){\n  this.reloadList()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.node = (this.props.node) ? this.props.node : this.context.settings.node;\n }\n\n reloadList = () => post_call('api/multimedia/list', {}, {'X-Route':this.node}).then(result => this.setState(result));\n\n deleteList = (obj) => (window.confirm('Delete file '+obj.file+'?') && post_call('api/multimedia/delete',obj, {'X-Route':this.node}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (!(row.path === obj.path && row.file === obj.file)))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row,idx) => [row.file,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Title key={'multimedia_title_'+idx} path={row.path} file={row.file} node={this.node} />)} title='Title info' />\n   <SearchButton key='lookup' onClick={() => this.changeContent(<Lookup key={'multimedia_lookup_'+idx} path={row.path} file={row.file} node={this.node} />)} title='Lookup info' />\n   <DocButton key='subs' onClick={() => this.changeContent(<Subtitles key={'multimedia_subs_'+idx} path={row.path} file={row.file} node={this.node} />)} title='Subtitles' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row)} title='Delete file' />\n  </>]\n\n render(){\n  if(this.state.data)\n   return <>\n    <ContentList key='cl' header='Media files' thead={['File','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='reload' onClick={() => this.reloadList()} />\n     <DeleteButton key='cleanup' onClick={() => (window.confirm('Really clean up files?') && this.changeContent(<Cleanup key='multimedia_cleanup' node={this.node} />))} title='Cleanup multimedia directory' />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  else\n   return <Spinner />\n }\n}\nMain.contextType = RimsContext;\n\n// ************* Title ************\n//\nclass Title extends Component {\n constructor(props){\n  super(props)\n  this.state = {thread:true,wait:null}\n }\n\n componentDidMount(){\n  post_call('api/multimedia/check_title',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n threadChange = (e) => this.setState({[e.target.name]:e.target.checked});\n\n updateInfo = () => post_call('api/multimedia/check_title',{op:'update', ...this.state.data}, {'X-Route':this.props.node}).then(result => this.setState(result))\n\n transferFile = () => {\n  if (window.confirm('Transfer file to repository?')){\n   if(this.state.thread)\n    post_call('api/system/worker',{module:'multimedia',function:'transfer',output:true,args:{path:this.props.path,file:this.props.file}}, {'X-Route':this.props.node}).then(result => this.setState({op:'transfer',result:result}));\n   else {\n    this.setState({wait:<Spinner />})\n    post_call('api/multimedia/transfer',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState({op:'transfer',result:result,wait:null}));\n   }\n  }\n }\n\n processFile = () => {\n  if (window.confirm('Process file?')){\n   if(this.state.thread)\n    post_call('api/system/worker',{module:'multimedia',function:'process',output:true,args:{path:this.props.path,file:this.props.file,...this.state.data}}, {'X-Route':this.props.node}).then(result => this.setState({op:'process',result:result}));\n   else {\n    this.setState({wait:<Spinner />})\n    post_call('api/multimedia/process',{path:this.props.path,file:this.props.file,...this.state.data}, {'X-Route':this.props.node}).then(result => this.setState({op:'process',result:result,wait:null}));\n   }\n  }\n }\n\n render(){\n  if (this.state.op) {\n   if(this.state.thread || this.state.op === 'transfer')\n    return <InfoArticle key='mm_trans_article' header={(this.state.thread) ? 'Task activation' : 'Transfer'}>\n     <TextLine key='mm_trans_res' id='result' text={JSON.stringify(this.state.result)} />\n    </InfoArticle>\n   else {\n    if(this.state.result.status === 'NOT_OK')\n     return <CodeArticle key='mm_error_code' header='Process Error'>{JSON.stringify(this.state.result.info,null,2)}</CodeArticle>\n    else {\n     const data = this.state.result.data;\n     return <InfoArticle key='mm_proc_article' header='Process success'>\n      Elapsed time for processing file: {this.state.result.seconds} seconds\n      <InfoColumns key='mm_proc_ic'>\n       <TextLine key='mm_proc_prefix' id='prefix' text={data.prefix} />\n       <TextLine key='mm_proc_suffix' id='suffix' text={data.suffix} />\n       <TextLine key='mm_proc_dest' id='dest' label='Destination' text={JSON.stringify(data.dest)} />\n       <TextLine key='mm_proc_rename' id='rename' text={JSON.stringify(data.rename)} />\n       <TextLine key='mm_proc_aac' id='aac' label='Add AAC' text={JSON.stringify(data.aac_probe)} />\n       <TextLine key='mm_proc_chg_aac' id='chg_aac' label='Param AAC' text={data.changes.aac} />\n       <TextLine key='mm_proc_chg_aud' id='chg_aud' label='Param Audio' text={data.changes.audio} />\n       <TextLine key='mm_proc_chg_sub' id='chg_sub' label='Param Subtitles' text={data.changes.subtitle} />\n       <TextLine key='mm_proc_chg_srt' id='chg_srt' label='Param SRT files' text={data.changes.srt} />\n      </InfoColumns>\n     </InfoArticle>\n    }\n   }\n  } else if(this.state.data){\n   const data = this.state.data\n   return <InfoArticle key='mm_tit_article' header='Title'>\n    <InfoColumns key='mm_tit_ic'>\n     <TextLine key='mm_tit_type' id='type' text={data.type} />\n     <TextLine key='mm_tit_title' id='title' text={data.title} />\n     <TextLine key='mm_tit_path' id='path' text={data.path} />\n     <TextInput key='mm_tit_name' id='name' value={data.name} onChange={this.onChange} />\n     {data.epside && <TextInput key='mm_tit_eposide' id='episode' value={data.episode} onChange={this.onChange} />}\n     <TextInput key='mm_tit_info' id='info' value={data.info} onChange={this.onChange} />\n     <CheckboxInput key='mm_tit_thread' id='thread' label='Thread' value={this.state.thread} onChange={this.threadChange} title='Thread or direct execution' />\n    </InfoColumns>\n    <StartButton key='mm_tit_btn_proc' onClick={() => this.processFile()} title='Process file' />\n    <SyncButton key='mm_tit_btn_trans' onClick={() => this.transferFile()} title='Transfer file' />\n    {this.state.wait}\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Lookup ************\n//\nclass Lookup extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/multimedia/check_content',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n render(){\n  if (this.state.data) {\n   const data = this.state.data\n   return <InfoArticle key='mm_lu_article' header='Lookup'>\n    <InfoColumns key='mm_lu_ic'>\n     <TextLine key='mm_lu_file' id='file' label='File' text={this.props.file} />\n     <TextLine key='mm_lu_status' id='status' label='Result' text={this.state.status} />\n     <TextLine key='mm_lu_error' id='error' label='Error' text={this.state.info} />\n     <TextLine key='mm_lu_v_def' id='video_default' label='Video default' text={JSON.stringify(!data.video.set_default)} title='Video stream has default language' />\n     <TextLine key='mm_lu_v_lang' id='video_lang' label='Video language' text={data.video.language} title='Language set in video stream information' />\n     <TextLine key='mm_lu_a_add' id='audio_add' label='Audio keep' text={data.audio.add.join()} />\n     <TextLine key='mm_lu_a_rem' id='audio_rem' label='Audio remove' text={data.audio.remove.join()} />\n     <TextLine key='mm_lu_a_aac' id='audio_aac' label='Add AAC' text={JSON.stringify(data.audio.add_aac)} />\n     <TextLine key='mm_lu_s_add' id='sub_add' label='Subtitle keep' text={data.subtitle.add.join()} />\n     <TextLine key='mm_lu_s_rem' id='sub_rem' label='Subtitle remove' text={data.subtitle.remove.join()} />\n     <TextLine key='mm_lu_a_lang' id='sub_lang' label='Subtitle languages' text={data.subtitle.languages.join()} />\n    </InfoColumns>\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Subtitles ************\n//\nclass Subtitles extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/multimedia/check_srt',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n render(){\n  if (this.state.data) {\n   return <InfoArticle key='mm_sub_art' header='Extra subtitles'>\n    <InfoColumns key='mm_sub_ic'>\n     <TextLine key='mm_sub_path' id='path' text={this.props.path} />\n     <TextLine key='mm_sub_item' id='item' text={this.props.file} />\n     <TextLine key='mm_sub_name' id='name' text={this.state.data.name} />\n     <TextLine key='mm_sub_code' id='code' text={this.state.data.code} />\n     <TextLine key='mm_sub_file' id='file' text={this.state.data.file} />\n    </InfoColumns>\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Cleanup ************\n//\nclass Cleanup extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.componentDidMount();\n }\n\n componentDidMount(){\n  post_call('api/multimedia/cleanup', {}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n render(){\n   return (this.state.data) ? <ContentReport key='mm_clean_cr' header='delete' thead={['Type','Path','Item','Status','Info']} trows={this.state.data} listItem={(row) => [row.type,row.path,row.item,row.status,row.info]} /> : <Spinner />\n }\n}\n"],"names":["Main","Component","constructor","props","super","reloadList","post_call","this","node","then","result","setState","deleteList","obj","window","confirm","file","deleted","data","state","filter","row","path","changeContent","listItem","idx","_jsxs","_Fragment","children","_jsx","InfoButton","onClick","Title","title","SearchButton","Lookup","DocButton","Subtitles","DeleteButton","context","settings","componentDidMount","componentDidUpdate","prevProps","render","ContentList","header","thead","trows","ReloadButton","Cleanup","ContentData","mountUpdate","fun","Spinner","contextType","RimsContext","onChange","e","target","name","value","threadChange","checked","updateInfo","op","transferFile","thread","module","function","output","args","wait","processFile","InfoArticle","TextLine","id","text","JSON","stringify","status","CodeArticle","info","seconds","InfoColumns","prefix","suffix","label","dest","rename","aac_probe","changes","aac","audio","subtitle","srt","type","TextInput","epside","episode","CheckboxInput","StartButton","SyncButton","video","set_default","language","add","join","remove","add_aac","languages","code","ContentReport","item"],"sourceRoot":""}
{"version":3,"sources":["fdb.jsx"],"names":["Search","props","changeContent","elem","changeSelf","onChange","e","setState","target","name","value","state","field","search","key","header","id","this","placeholder","onClick","List","title","Component","Device","changeInterface","interface_id","then","lib","Info","device_id","listItem","row","idx","vlan","snmp_index","text","mac","oui","wait","searchfield","post_call","extra","result","ip","type","data","toUpperCase","length","filter","includes","thead","trows","componentDidMount","syncFDB","searchFire","s","changeSearch","content","changeVisualize","Edit","hostname","prevProps","device","interfaces","description","status","info"],"mappings":"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","file":"static/js/13.7847e522.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, LineArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SearchInput, SelectInput } from './infra/Inputs.jsx';\nimport { HrefButton, InfoButton, NetworkButton, ReloadButton, SearchButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************** Search **************\n//\nexport class Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'mac',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='fs_art' header='FDB Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <option value='mac'>MAC</option>\n    <option value='device_id'>Device ID</option>\n   </SelectInput>\n   <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n   <SearchButton key='fs_btn_search' onClick={() => this.changeContent(<List key='fdb_list' {...this.state} changeSelf={this.props.changeSelf} />)} title='Search FDB' />\n  </LineArticle>\n }\n}\n\n// *************** Device *****************\n//\nexport class Device extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:null, searchfield:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n componentDidMount(){\n  post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState(result))\n }\n\n syncFDB(){\n  this.setState({wait:<Spinner />})\n  post_call('api/fdb/sync',{id:this.props.id, ip:this.props.ip, type:this.props.type}).then(result => this.setState({wait:null}));\n }\n\n changeInterface = (interface_id) => import('./interface.jsx').then(lib => this.changeContent(<lib.Info key='interface_info' device_id={this.props.id} interface_id={interface_id} changeSelf={this.changeContent} />))\n\n listItem = (row,idx) => [row.vlan,row.snmp_index,<HrefButton key={'fd_intf_'+row.interface_id} text={row.name} onClick={() => this.changeInterface(row.interface_id)} />,row.mac,row.oui]\n\n render(){\n  if (this.state.data) {\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <ContentReport key='fd_cr' header='FDB' thead={['VLAN','SNMP','Interface','MAC','OUI']} trows={data} listItem={this.listItem}>\n    <ReloadButton key='fd_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='fd_btn_sync' onClick={() => this.syncFDB() } title='Resync FDB' />\n    <SearchInput key='fd_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' />\n    {this.state.wait}\n   </ContentReport>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** List *****************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:'', content:null}\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/list',{search:this.props.search, field:this.props.field, extra:['device_id','hostname']}).then(result => this.setState(result))\n }\n\n changeSearch = (mac,idx) => this.setState({content:<Info key={'fi_'+idx} mac={mac} />});\n\n changeVisualize = (device_id) => ('changeSelf' in this.props && import('./visualize.jsx').then(lib => this.setState({content:<lib.Edit key={'viz_id_' + device_id} type='device' changeSelf={this.props.changeSelf} id={device_id} />})));\n\n listItem = (row,idx) => [row.device_id,row.hostname,row.vlan,row.snmp_index,row.name,<HrefButton key={'fd_intf_'+idx} text={row.mac} onClick={() => this.setState({searchfield:row.mac})} />,<Fragment><InfoButton key={'fd_intf_'+idx}  onClick={() => this.changeSearch(row.mac,idx)} title='Find interface(s)' /><NetworkButton key={'fd_map_'+idx} onClick={() => this.changeVisualize(row.device_id)} /></Fragment>]\n\n render(){\n  if (this.state.data){\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <Fragment>\n    <ContentList key='fl_cr' header='FDB' thead={['ID','Hostname','VLAN','SNMP','Interface','MAC','']} trows={data} listItem={this.listItem}>\n     <ReloadButton key='fl_btn_reload' onClick={() => this.componentDidMount()} />\n     <SearchInput key='fl_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' text={this.state.searchfield} />\n    </ContentList>\n    <ContentData key='fl_content'>{this.state.content}</ContentData>\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Info *****************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/fdb/search',{mac:this.props.mac}).then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.device)\n   return <ContentReport key='fd_cr' header={`${this.state.device.hostname} (${this.state.device.id})`} thead={['ID','Interface','Description','OUI']} trows={this.state.interfaces} listItem={(row) => [row.interface_id,row.name,row.description,row.oui]} />\n  else if (this.state.oui)\n   return <LineArticle key='fd_oui_la' header='Search result'>OUI: {this.state.oui}</LineArticle>\n  else if (this.state.status)\n   return <LineArticle key='fd_oui_la' header='Search result'>Search result: {this.state.info}</LineArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
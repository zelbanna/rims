{"version":3,"file":"static/js/208.71521aad.chunk.js","mappings":"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","sources":["location.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row) => [row.id,row.name,<>\n   <ConfigureButton key='conf' onClick={() => this.changeContent(<Info key='location' id={row.id} />)} title='Edit location' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </>]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='location' id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidUpdate(prevProps,prevState){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_loc'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='ia_loc' header='Location'>\n     <InfoColumns key='ic'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n"],"names":["List","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","deleteList","id","window","confirm","post_call","then","result","deleted","setState","data","state","filter","row","changeContent","listItem","name","_jsxs","_Fragment","children","_jsx","ConfigureButton","onClick","Info","title","DeleteButton","_createClass","key","value","_this2","_this3","ContentList","header","thead","trows","this","ReloadButton","componentDidMount","AddButton","ContentData","mountUpdate","fun","Component","_Component2","_super2","_this4","onChange","e","_objectSpread","_defineProperty","target","updateInfo","op","found","prevProps","prevState","_this5","_this6","InfoArticle","InfoColumns","TextInput","SaveButton","Spinner"],"sourceRoot":""}
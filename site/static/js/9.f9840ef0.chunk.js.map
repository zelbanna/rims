{"version":3,"sources":["visualize.jsx","location.jsx","rack.jsx","infra/rack.module.css"],"names":["Main","props","changeContent","elem","setState","state","List","key","this","Component","listItem","row","id","name","onClick","Edit","changeSelf","type","title","window","open","deleteList","content","confirm","post_call","then","result","deleted","data","filter","header","thead","trows","componentDidMount","Show","doubleClick","params","console","log","nodes","status","url","length","username","ip","args","hasOwnProperty","vis","DataSet","edges","network","Network","refs","show_canvas","options","on","setOptions","physics","className","styles","ref","changeImport","dev","lib","Info","onChange","e","target","value","jsonHandler","JSON","parse","updateInfo","op","toggleEdit","edit","viz","manipulation","enabled","toggleFix","forEach","node","update","fixed","get","togglePhysics","physics_button","StopButton","StartButton","networkSync","storePositions","label","showDiv","display","found","results","React","createRef","edit_canvas","PhysicsButton","text","style","stringify","undefined","rnd","compileNavItems","context","loadNavigation","Infra","prevProps","contextType","RimsContext","location","location_id","changeMain","rack_id","Layout","sort","size","consoles","map","hostname","locations","pdu_1","pdus","pdu_2","sign","rack","i","push","rackLeft","gridRow","rackRight","rackItem","gridRowStart","rack_unit","gridRowEnd","rack_size","color","grid","createRack","front","back","module","type_base","function","device_id","type_name","field","search","extra","exports"],"mappings":"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","file":"static/js/9.f9840ef0.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Article, ContentData, ContentList, Result } from './infra/UI.jsx';\nimport { BackButton, DeleteButton, EditButton, FixButton, ReloadButton, SaveButton, StartButton, StopButton, TextButton, NetworkButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\nimport styles from './infra/ui.module.css';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='viz_list' />\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/visualize/list')\n   .then((result) => { this.setState(result); })\n }\n\n listItem = (row) => [row.id,row.name,<Fragment key='vl_buttons'>\n  <EditButton key={'vl_btn_edt_'+row.id} onClick={() => this.changeContent(<Edit key={'viz_edit_'+row.id} id={row.id} changeSelf={this.changeContent} type='map' />)} title='Show and edit map' />\n  <NetworkButton key={'vl_btn_net_'+row.id} onClick={() => window.open(`viz.html?id=${row.id}`,'_blank')} title='Show resulting map' />\n  <DeleteButton key={'vl_btn_del_'+row.id}  onClick={() => this.deleteList(row.id)} />\n </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Delete map?') && post_call('api/visualize/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment key='vl_fragment'>\n   <ContentList key='vl_cl' header='Maps' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='vl_btn_reload' onClick={() => this.componentDidMount() } />\n   </ContentList>\n   <ContentData key='vl_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** Show **************\n//\nexport class Show extends Component {\n\n componentDidMount(){\n  var args = (this.props.hasOwnProperty('id')) ? {id:this.props.id}:{name:this.props.name};\n  import('vis-network/standalone/esm/vis-network').then(vis => {\n   post_call('api/visualize/show',args).then(result => {\n    var nodes = new vis.DataSet(result.data.nodes);\n    var edges = new vis.DataSet(result.data.edges);\n    var network = new vis.Network(this.refs.show_canvas, {nodes:nodes, edges:edges}, result.data.options);\n    network.on('stabilizationIterationsDone', () => network.setOptions({ physics: false }))\n    network.on('doubleClick', (params) => this.doubleClick(params))\n   })\n  })\n }\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes);\n  if (params.nodes[0]){\n   post_call('api/device/management',{id:params.nodes[0]}).then(result => {\n    if (result && result.status === 'OK'){\n     if(result.data.url && result.data.url.length > 0)\n      window.open(result.data.url);\n     else\n      window.open('ssh://' + result.data.username + '@' + result.data.ip,'_self');\n    }else\n     console.log('Data not ok:' + result)\n   })\n  }\n }\n\n render(){\n  return <Article key='viz_show'><div className={styles.network} id='div_network' ref='show_canvas' /></Article>\n }\n}\n\n// ************** Edit **************\n//\nexport class Edit extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:'network', physics_button:StartButton, found:true, data:{name:'N/A'}, result:''}\n  this.viz = {network:null,nodes:null,edges:null}\n  this.results = React.createRef();\n  this.edit = false;\n }\n\n componentDidMount(){\n  import('vis-network/standalone/esm/vis-network').then(vis => {\n   post_call('api/visualize/network',{id:this.props.id,type:this.props.type}).then((result) => {\n    this.viz.nodes = new vis.DataSet(result.data.nodes);\n    this.viz.edges = new vis.DataSet(result.data.edges);\n    result.data.options.physics.enabled = true;\n    this.viz.network = new vis.Network(this.refs.edit_canvas, {nodes:this.viz.nodes, edges:this.viz.edges}, result.data.options);\n    this.viz.network.on('stabilizationIterationsDone', () => this.viz.network.setOptions({ physics: false }))\n    this.viz.network.on('doubleClick', (params) => this.doubleClick(params))\n    this.viz.network.on('dragEnd', (params) => this.networkSync(params))\n    result.data.options.physics.enabled = false;\n    this.setState(result)\n   })\n  })\n }\n\n changeImport = (dev) => import('./device.jsx').then(lib => this.props.changeSelf(<lib.Info key={'di_'+dev} id={dev} />));\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n jsonHandler = (e) => {\n  var data = {...this.state.data}\n  try {\n   data[e.target.name] = JSON.parse(e.target.value);\n   this.setState({data:data})\n  } catch {\n   console.log('Error converting string to JSON')\n  }\n }\n\n updateInfo = () => post_call('api/visualize/network',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes[0]);\n  this.props.changeSelf && this.changeImport(params.nodes[0]);\n }\n\n toggleEdit = () => {\n  this.edit = !this.edit;\n  this.viz.network.setOptions({ manipulation:{ enabled:this.edit }})\n  this.setState({result:'Edit:'+this.edit});\n }\n\n toggleFix = () => {\n  this.viz.nodes.forEach((node,id) => this.viz.nodes.update({id:id,fixed:!(node.fixed)}) );\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get()}, result:'Fix/Unfix positions'})\n }\n\n togglePhysics = () => {\n  const data = this.state.data;\n  data.options.physics.enabled = !data.options.physics.enabled;\n  this.viz.network.setOptions({ physics:data.options.physics.enabled })\n  this.setState({data:data, physics_button:(data.options.physics.enabled) ? StopButton:StartButton, result:'Physics:'+data.options.physics.enabled})\n }\n\n networkSync = (params) => {\n  this.viz.network.storePositions();\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get(), edges:this.viz.edges.get()}, result:'Moved ' + this.viz.nodes.get(params.nodes[0]).label})\n }\n\n showDiv = (id) => (id === this.state.content) ? {display:'block'} : {display:'none'}\n\n render(){\n  const PhysicsButton = this.state.physics_button;\n  return(\n   <Article key='viz_art' header='Network Map'>\n    {(this.props.type === 'device') && (this.props.changeSelf) && <BackButton key='viz_back' onClick={() => this.changeImport(this.props.id)} />}\n    <ReloadButton key='viz_reload' onClick={() => this.componentDidMount()} />\n    <EditButton key='viz_edit' onClick={() => this.toggleEdit()} />\n    <PhysicsButton key='viz_physics' onClick={() => this.togglePhysics()} />\n    <FixButton key='viz_fix' onClick={() => this.toggleFix()} />\n    <SaveButton key='viz_save' onClick={() => this.updateInfo()} />\n    <NetworkButton key='viz_net' onClick={() => this.setState({content:'network'})} />\n    <TextButton key='viz_opt' text='Options' onClick={() => this.setState({content:'options'})} />\n    <TextButton key='viz_nodes' text='Nodes' onClick={() => this.setState({content:'nodes'})} />\n    <TextButton key='viz_edges' text='Edges' onClick={() => this.setState({content:'edges'})} />\n    <TextInput key='viz_name' id='name' value={this.state.data.name} onChange={this.onChange} />\n    <Result key='viz_result' result={this.state.result} />\n    <div className={styles.network} style={this.showDiv('network')} ref='edit_canvas' />\n    <div className={styles.network} style={this.showDiv('options')}><textarea id='options' name='options' value={JSON.stringify(this.state.data.options,undefined,2)} onChange={this.jsonHandler}/></div>\n    <div className={styles.network} style={this.showDiv('nodes')}><textarea id='nodes' name='nodes' value={JSON.stringify(this.state.data.nodes,undefined,2)} onChange={this.jsonHandler} /></div>\n    <div className={styles.network} style={this.showDiv('edges')}><textarea id='edges' name='edges' value={JSON.stringify(this.state.data.edges,undefined,2)} onChange={this.jsonHandler} /></div>\n   </Article>\n  )\n }\n}\n","import React, { Fragment, Component } from 'react'\nimport { post_call, rnd } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n listItem = (row) => [row.id,row.name,<Fragment key={'location_buttons_'+row.id}>\n   <ConfigureButton key={'loc_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'location_'+row.id} id={row.id} />)} title='Edit location' />\n   <DeleteButton key={'loc_btn_delete_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </Fragment>\n  ]\n\n render(){\n  return <Fragment key='loc_fragment'>\n   <ContentList key='loc_cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='loc_btn_reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='loc_btn_add' onClick={() => this.changeContent(<Info key={'location_new_' + rnd()} id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='loc_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='loc_removed'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='loc_article' header='Location'>\n     <InfoColumns key='loc_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='loc_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n","import React, { Fragment, Component } from 'react';\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SelectInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, GoButton, InfoButton, ItemsButton, ReloadButton, SaveButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx'\nimport styles from './infra/rack.module.css';\n\nimport { Main as DeviceMain, Info as DeviceInfo } from './device.jsx';\nimport { List as LocationList, Info as LocationInfo } from './location.jsx';\n\n// *************** Main ***************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='rack_list' />\n }\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='rack_navbar'>\n   <NavDropDown key='dev_nav_racks' title='Rack'>\n    <NavDropButton key='dev_nav_all_rack' title='Racks' onClick={() => this.changeContent(<List key='rack_list' />)} />\n    <NavDropButton key='dev_nav_all_pdu' title='PDUs' onClick={() => this.changeContent(<Infra key='pdu_list' type='pdu' />)} />\n    <NavDropButton key='dev_nav_all_con' title='Consoles' onClick={() => this.changeContent(<Infra key='console_list' type='console' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_loc' title='Locations' onClick={() => this.changeContent(<LocationList key='location_list' />)}/>\n  </NavBar>)\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// *************** List ***************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/list',{sort:'name'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'rl_btn_loc_'+row.id} text={row.location} onClick={() => this.changeContent(<LocationInfo key={'li_'+row.location_id} id={row.location_id} />)} />,row.name,<Fragment key='rack_list_buttons'>\n   <InfoButton key={'rl_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'rack_info_'+row.id} id={row.id} />)} title='Rack information' />\n   <GoButton key={'rl_btn_go_'+row.id} onClick={() => this.context.changeMain(<DeviceMain key={'rack_device_'+row.id} rack_id={row.id} />)} title='Rack inventory' />\n   <ItemsButton key={'rl_btn_list_'+row.id} onClick={() => this.changeContent(<Layout key={'rack_layout_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title='Rack layout'/>\n   <DeleteButton key={'rl_btn_del_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete rack' />\n  </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete rack?') && post_call('api/rack/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment key='rack_fragment'>\n   <ContentList key='rack_cl' header='Racks' thead={['Location','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='rl_btn_reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='rl_btn_add' onClick={() => this.changeContent(<Info key={'rack_new_' + rnd()} id='new' />)} title='Add rack' />\n   </ContentList>\n   <ContentData key='rack_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\nList.contextType = RimsContext;\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  post_call('api/rack/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/rack/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return <InfoArticle key='rack_article' header='Rack'>\n    <InfoColumns key='rack_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <TextInput key='size' id='size' value={this.state.data.size} onChange={this.onChange} />\n     <SelectInput key='console' id='console' value={this.state.data.console} onChange={this.onChange}>{this.state.consoles.map(row => <option key={'ri_con_'+row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='location_id' id='location_id' label='Location' value={this.state.data.location_id} onChange={this.onChange}>{this.state.locations.map(row => <option key={'ri_loc_'+row.id} value={row.id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='pdu_1' id='pdu_1' label='PDU1' value={this.state.data.pdu_1} onChange={this.onChange}>{this.state.pdus.map(row => <option key={'ri_pdu1_'+row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='pdu_2' id='pdu_2' label='PDU2' value={this.state.data.pdu_2} onChange={this.onChange}>{this.state.pdus.map(row => <option key={'ri_pdu2_'+row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n    </InfoColumns>\n    <SaveButton key='ri_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// *************** Layout ***************\n//\nexport class Layout extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/rack/devices',{id:this.props.id}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => {\n  if(this.props.changeSelf)\n   this.props.changeSelf(elem);\n }\n\n createRack(id,content,sign){\n  const rack = [];\n  for (let i = 1; i < this.state.size+1; i++)\n   rack.push(<div key={id+'_left_'+i} className={styles.rackLeft} style={{gridRow:-i}}>{i}</div>,<div key={id+'_right_'+i} className={styles.rackRight} style={{gridRow:-i}}>{i}</div>)\n  content.forEach(dev => rack.push(<div key={'rd_' + dev.id} className={styles.rackItem} style={{gridRowStart:this.state.size+2-sign*dev.rack_unit, gridRowEnd:this.state.size+2-(sign*dev.rack_unit+dev.rack_size)}}><HrefButton key={'rd_btn_'+dev.id} style={{color:'var(--ui-txt-color)'}} onClick={() => this.changeContent(<DeviceInfo key='device_info' id={dev.id} />)} text={dev.hostname} /></div>))\n  return <div className={styles.rack} style={{grid:`repeat(${this.state.size-1}, 2vw)/2vw 25vw 2vw`}}>{rack}</div>\n }\n\n render(){\n  if (this.state.size) {\n   return (<Fragment key='rt_frag'>\n    <InfoArticle key='rl_front' header='Front'>\n     {this.createRack('front',this.state.front,1)}\n    </InfoArticle>\n    <InfoArticle key='rl_back' header='Back'>\n     {this.createRack('back',this.state.back,-1)}\n    </InfoArticle>\n   </Fragment>)\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Infra ***************\n//\nexport class Infra extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:this.props.type,extra:['type']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'rinfra_dev_'+row.id} text={row.id} onClick={() => this.changeContent(<DeviceInfo key={'device_' + row.id} id={row.id} />)} title='Device info'/>,\n   row.hostname,<Fragment key='rinfra_buttons'>\n   <InfoButton key={'rinfra_btn_' + row.id} onClick={() => this.context.changeMain({module:row.type_base,function:'Manage',args:{device_id:row.id, type:row.type_name}})} title='Manage device' />\n   </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <Fragment key='rinfra_fragment'>\n   <ContentList key='rinfra_cl' header={this.props.type} thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='rinfra_btn_reload' onClick={() => this.componentDidMount()} />\n   </ContentList>\n   <ContentData key='rinfra_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\nInfra.contextType = RimsContext;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rack\":\"rack_rack__2xnnq\",\"rackLeft\":\"rack_rackLeft__1E8o9\",\"rackRight\":\"rack_rackRight__1Jn29\",\"rackItem\":\"rack_rackItem__2yVLG\"};"],"sourceRoot":""}
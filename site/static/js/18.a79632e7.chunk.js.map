{"version":3,"sources":["node.jsx"],"names":["List","props","listItem","row","node","url","key","onClick","changeContent","Info","id","title","deleteList","window","confirm","post_call","then","result","deleted","setState","data","state","filter","header","thead","trows","this","componentDidMount","mountUpdate","fun","Component","searchInfo","found","hostname","device_id","onChange","e","target","name","value","elem","content","updateInfo","op","prevProps","old","Reload","LogShow","LogClear","modules","join","logs","file","Object","entries","map","log","args","error","console","idx"],"mappings":"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","file":"static/js/18.a79632e7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport {Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { TextInput, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, LogButton, ReloadButton, SaveButton, SearchButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/node_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.url,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key='node_info' id={row.id} />)} title='Node information' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete node' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete node?') && post_call('api/master/node_delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Nodes' thead={['Node','URL','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='node_info' id='new' />)} title='Add node' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props)\n   this.componentDidMount();\n }\n\n componentDidMount(){\n  post_call('api/master/node_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n searchInfo = () => post_call('api/device/search',{node:this.state.data.node}).then(result => result.found && this.setState({data:{...this.state.data, hostname:result.data.hostname, device_id:result.data.id}}))\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () =>  post_call('api/master/node_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_node'>Node with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data) {\n   const id = this.state.data.id;\n   const old = (id !== 'new');\n   return <>\n    <InfoArticle key='ia_node' header='Node'>\n     <InfoColumns key='ic'>\n      <TextInput key='node' id='node' value={this.state.data.node} onChange={this.onChange} />\n      <UrlInput key='url' id='url' value={this.state.data.url}  onChange={this.onChange} />\n      <TextInput key='hostname' id='hostname' value={this.state.data.hostname} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save information' />\n     {old && !this.state.data.hostname && <SearchButton key='search' onClick={this.searchInfo} title='Try to map node to device' />}\n     {old && <ReloadButton key='reload' onClick={() => this.changeContent(<Reload key={'node_reload_'+id} node={this.state.data.node} />)} />}\n     {old && <LogButton key='logs' onClick={() => this.changeContent(<LogShow key={'node_logs_'+id} node={this.state.data.node} />)} title='View node logs' />}\n     {old && <DeleteButton key='logc' onClick={() => this.changeContent(<LogClear key={'node_logc_'+id} node={this.state.data.node} />)} title='Clear logs' />}\n    </InfoArticle>\n    <NavBar key='node_navigation' id='node_navigation' />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Reload ***************\n//\nclass Reload extends Component {\n componentDidMount(){\n  post_call('api/system/reload',{},{'X-Route':this.props.node}).then(result => {\n   if (result)\n    this.setState(result);\n   else\n    this.setState({modules:['error reloading modules (check REST call)']})\n  })\n }\n\n render(){\n  return (!this.state) ? <Spinner /> : <CodeArticle key='nr_code' header='Module'>{this.state.modules.join('\\n')}</CodeArticle>\n }\n}\n\n// *************** LogClear ***************\n//\nclass LogClear extends Component {\n\n componentDidMount(){\n  post_call('api/system/logs_clear',{},{'X-Route':this.props.node}).then(result => this.setState({logs:result.file}))\n }\n\n render(){\n  return (!this.state) ? <Spinner /> : <CodeArticle key='nc_code' header='Cleared'>{(Object.entries(this.state.logs).map(log => `${log[0]}: ${log[1]}`)).join('\\n')}</CodeArticle>\n }\n}\n\n// *************** LogShow ***************\n//\nexport class LogShow extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/logs_get',{},{'X-Route':this.props.node}).then(result => {\n   const args = (result) ? {logs:result} : {error:true}\n   console.log(args);\n   this.setState(args);\n  })\n }\n\n render(){\n  if (this.state.logs)\n   return <div>{Object.entries(this.state.logs).map((log,idx) => <CodeArticle key={idx} header={log[0]}>{log[1].join('\\n')}</CodeArticle>)}</div>\n  else if (this.state.error)\n   return <CodeArticle>error retrieving logs (check REST call)</CodeArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
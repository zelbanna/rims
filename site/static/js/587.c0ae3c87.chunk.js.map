{"version":3,"file":"static/js/587.c0ae3c87.chunk.js","mappings":"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","sources":["server.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { SelectInput, TextLine, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, CheckButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SyncButton, SearchButton, StartButton, StopButton, UiButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.service,row.type,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key='server_info' id={row.id} />)} title='Service information' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete service' />\n   {row.hasOwnProperty('ui') && row.ui.length > 0 && <UiButton key='ui' onClick={() =>  window.open(row.ui,'_blank')} title='Server UI' />}\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete service?') && post_call('api/master/server_delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Servers' thead={['Node','Service','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='server_info' id='new' type={this.props.type} />)} title='Add service' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.componentDidMount()\n }\n\n componentDidMount(){\n  post_call('api/master/server_info',{id:this.props.id}).then(result => {\n   if (!result.data.node)\n    result.data.node = result.nodes[0];\n   if (!result.data.type_id)\n    result.data.type_id = result.services[0].id;\n   this.setState({...result, content:null});\n   })\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/master/server_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='si_art_nf'>Server with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data){\n   const id = this.state.data.id;\n   const old = (id !== 'new');\n   return <>\n    <InfoArticle key='ia' header='Server'>\n     <InfoColumns key='ic'>\n      <TextLine key='server' id='server' label='ID' text={id} />\n      <SelectInput key='node' id='node' value={this.state.data.node} onChange={this.onChange}>{this.state.nodes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Service' value={this.state.data.type_id} onChange={this.onChange}>{this.state.services.map(row => <option key={row.id} value={row.id}>{`${row.service} (${row.type})`}</option>)}</SelectInput>\n      <UrlInput key='ui' id='ui' label='UI' value={this.state.data.ui} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n     {old && <SyncButton key='sync' onClick={() => this.changeContent(<Operation key='srv_op_sync' id={id} operation='sync' />)} title='Sync service' />}\n     {old && <ReloadButton key='restart' onClick={() => this.changeContent(<Operation key='srv_op_rst'  id={id} operation='restart' />)} title='Restart service' />}\n     {old && <CheckButton key='params' onClick={() => this.changeContent(<Operation key='srv_op_params' id={id} operation='parameters' />)} title='Service parameters' />}\n     {old && <SearchButton key='status' onClick={() => this.changeContent(<Operation key='srv_op_stat' id={id} operation='status' />)} title='Service status' />}\n     {old && <StartButton key='start' onClick={() => this.changeContent(<Operation key='srv_op_start' id={id} operation='start' />)} title='Start service' />}\n     {old && <StopButton key='stop' onClick={() => this.changeContent(<Operation key='srv_op_stop' id={id} operation='stop' />)} title='Stop service' />}\n    </InfoArticle>\n    <NavBar key='server_navigation' id='server_navigation' />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:true}\n }\n componentDidMount(){\n  post_call('api/master/server_operation',{op:this.props.operation,id:this.props.id}).then(result => this.setState({result:result, wait:false}))\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.setState({wait:true})\n   this.componentDidMount();\n  }\n }\n\n render(){\n  return (this.state.wait) ? <Spinner /> : <CodeArticle key='srv_operation'>{JSON.stringify(this.state.result,null,2)}</CodeArticle>\n }\n}\n"],"names":["List","Component","constructor","props","super","listItem","row","node","service","type","_jsxs","_Fragment","children","_jsx","InfoButton","onClick","this","changeContent","Info","id","title","DeleteButton","deleteList","hasOwnProperty","ui","length","UiButton","window","open","confirm","post_call","then","result","deleted","setState","data","state","filter","componentDidMount","componentDidUpdate","prevProps","render","ContentList","header","thead","trows","ReloadButton","AddButton","ContentData","mountUpdate","fun","elem","content","onChange","e","target","name","value","updateInfo","op","found","nodes","type_id","services","old","InfoArticle","InfoColumns","TextLine","label","text","SelectInput","map","UrlInput","SaveButton","SyncButton","Operation","operation","CheckButton","SearchButton","StartButton","StopButton","NavBar","Spinner","wait","CodeArticle","JSON","stringify"],"sourceRoot":""}
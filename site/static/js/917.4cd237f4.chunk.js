"use strict";(self.webpackChunkrims_frontend=self.webpackChunkrims_frontend||[]).push([[917],{917:(t,e,s)=>{s.r(e),s.d(e,{Inventory:()=>u,Main:()=>c,Manage:()=>v});var i=s(43),n=s(524),a=s(662),o=s(728),d=s(97),h=s(307),r=s(772),p=s(579);class c extends i.Component{constructor(t){super(t),this.listItem=t=>{const e="up"===t.ip_state;return[t.hostname,t.type_name,(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(a.StateLeds,{state:t.ip_state},"state"),e&&"manage"===t.type_functions&&(0,p.jsx)(o.InfoButton,{onClick:()=>this.context.changeMain((0,p.jsx)(v,{device_id:t.id,type:t.type_name},"hypervisor_manage_"+t.id))},"info"),e&&t.url&&t.url.length>0&&(0,p.jsx)(o.UiButton,{onClick:()=>window.open(t.url,"_blank")},"ui")]})]},this.state={}}componentDidMount(){(0,n.Cc)("api/device/list",{field:"base",search:"hypervisor",extra:["type","functions","url"],sort:"hostname"}).then((t=>this.setState(t)))}render(){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(a.ContentList,{header:"Hypervisor",thead:["Hostname","Type",""],trows:this.state.data,listItem:this.listItem,children:(0,p.jsx)(o.SyncButton,{onClick:()=>this.changeContent((0,p.jsx)(l,{},"vm_sync"))},"sync")},"cl"),(0,p.jsx)(a.ContentData,{mountUpdate:t=>this.changeContent=t},"cda")]})}}c.contextType=a.RimsContext;class l extends i.Component{constructor(t){super(t),this.listItem=t=>[t.type,t.host_id,t.device_id,t.vm,t.bios_uuid,t.config],this.state={}}componentDidMount(){(0,n.Cc)("api/device/vm_mapping",{device_id:this.props.device_id}).then((t=>{let e=[];["existing","inventory","discovered","database"].forEach((s=>{t.hasOwnProperty(s)&&t[s].forEach((t=>{t.type=s,e.push(t)}))})),this.setState({data:e})}))}render(){return(0,p.jsx)(a.ContentReport,{header:"VM Mapping",thead:["Status","Host","Device","VM Name","Device UUID","Config"],trows:this.state.data,listItem:this.listItem},"hyp_cr")}}class v extends i.Component{constructor(t){super(t),this.changeContent=t=>this.setState({content:t}),this.state={}}componentDidMount(){(0,n.Cc)("api/device/management",{id:this.props.device_id}).then((t=>{this.context.loadNavigation((0,p.jsxs)(h.NavBar,{children:[(0,p.jsx)(h.NavButton,{title:"Inventory",onClick:()=>this.changeContent((0,p.jsx)(u,{device_id:this.props.device_id,type:this.props.type},"hypervisor_inventory"))},"hyp_nav_inv"),t.data.url&&t.data.url.length>0&&(0,p.jsx)(h.NavButton,{title:"UI",onClick:()=>window.open(t.data.url,"_blank")},"hyp_nav_ui"),(0,p.jsx)(h.NavInfo,{title:t.data.hostname},"hyp_nav_name")]},"hypervisor_navbar")),this.setState({...t,content:(0,p.jsx)(u,{device_id:this.props.device_id,type:this.props.type},"hypervisor_inventory")})}))}render(){return(0,p.jsx)(p.Fragment,{children:this.state.content})}}v.contextType=a.RimsContext;class u extends i.Component{constructor(t){super(t),this.sortList=t=>{const e=this.state.data;"name"===t?e.sort(((t,e)=>t.name.localeCompare(e.name))):e.sort(((t,e)=>t.id-e.id)),this.setState({sort:t})},this.listItem=t=>[t.id,t.name,(0,p.jsx)(m,{vm_id:t.id,device_id:this.props.device_id,type:this.props.type,changeContent:t=>this.changeContent(t),state:t.state},"hl_op_"+t.id)],this.state={sort:"name",searchfield:""}}componentDidMount(){(0,n.Cc)("api/devices/"+this.props.type+"/inventory",{device_id:this.props.device_id,sort:this.state.sort}).then((t=>this.setState(t)))}render(){if(this.state.data){const t=this.state.searchfield,e=0===t.length?this.state.data:this.state.data.filter((e=>e.name.toLowerCase().includes(t))),s=[(0,p.jsx)(o.HeaderButton,{text:"ID",highlight:"id"===this.state.sort,onClick:()=>this.sortList("id")},"id"),(0,p.jsx)(o.HeaderButton,{text:"VM",highlight:"name"===this.state.sort,onClick:()=>this.sortList("name")},"vm"),"Operations"];return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)(a.ContentList,{header:"Inventory",thead:s,trows:e,listItem:this.listItem,children:[(0,p.jsx)(o.ReloadButton,{onClick:()=>{this.setState({data:void 0}),this.componentDidMount()}},"reload"),(0,p.jsx)(o.SyncButton,{onClick:()=>this.changeContent((0,p.jsx)(l,{device_id:this.props.device_id},"vm_sync")),title:"Map VMs"},"sync"),(0,p.jsx)(d.SearchField,{searchFire:t=>this.setState({searchfield:t}),placeholder:"Search inventory"},"search")]},"cl"),(0,p.jsx)(a.ContentData,{mountUpdate:t=>this.changeContent=t},"cda")]})}return(0,p.jsx)(a.Spinner,{})}}class m extends i.Component{constructor(t){super(t),this.operation=t=>{this.setState({wait:(0,p.jsx)(a.Spinner,{})}),(0,n.Cc)("api/devices/"+this.props.type+"/vm_op",{device_id:this.props.device_id,vm_id:this.props.vm_id,op:t}).then((t=>this.setState({...t,wait:null})))},this.snapshot=t=>{this.setState({wait:(0,p.jsx)(a.Spinner,{})}),(0,n.Cc)("api/devices/"+this.props.type+"/vm_snapshot",{device_id:this.props.device_id,vm_id:this.props.vm_id,op:t}).then((t=>this.setState({...t,wait:null})))},this.state={state:this.props.state,status:"",wait:null}}render(){const t="on"===this.state.state,e="off"===this.state.state;return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(o.InfoButton,{onClick:()=>this.props.changeContent((0,p.jsx)(_,{device_id:this.props.device_id,vm_id:this.props.vm_id,type:this.props.type,changeSelf:this.props.changeContent},"hypervisor_info")),title:"VM info"},"info"),(e||"suspended"===this.state.state)&&(0,p.jsx)(o.StartButton,{onClick:()=>this.operation("on"),title:this.state.status},"start"),t&&(0,p.jsx)(o.StopButton,{onClick:()=>this.operation("shutdown"),title:this.state.status},"stop"),t&&(0,p.jsx)(o.ReloadButton,{onClick:()=>this.operation("reboot"),title:this.state.status},"reload"),t&&(0,p.jsx)(o.PauseButton,{onClick:()=>this.operation("suspend"),title:this.state.status},"suspend"),(t||"suspended"===this.state.state)&&(0,p.jsx)(o.ShutdownButton,{onClick:()=>this.operation("off"),title:this.state.status},"shutdown"),e&&(0,p.jsx)(o.SnapshotButton,{onClick:()=>this.snapshot("create"),title:"Take snapshot"},"snapshot"),e&&(0,p.jsx)(o.ItemsButton,{onClick:()=>this.props.changeContent((0,p.jsx)(x,{device_id:this.props.device_id,vm_id:this.props.vm_id,type:this.props.type},"hypervisor_snapshots_"+this.props.vm_id)),title:"Snapshot info"},"snapshots"),this.state.wait]})}}class _ extends i.Component{constructor(t){super(t),this.onChange=t=>this.setState({data:{...this.state.data,[t.target.name]:t.target.value}}),this.changeSelf=t=>this.props.changeSelf(t),this.changeContent=t=>this.setState({content:t}),this.changeImport=t=>s.e(617).then(s.bind(s,617)).then((e=>this.setState({content:(0,p.jsx)(e.Info,{device_id:this.state.data.device_id,class:"virtual",mac:t.mac,name:t.name,interface_id:t.interface_id,description:t.port,changeSelf:this.changeContent},"interface_info")}))),this.state={}}componentDidUpdate(t){t!==this.props&&this.componentDidMount()}componentDidMount(){(0,n.Cc)("api/devices/"+this.props.type+"/vm_info",{device_id:this.props.device_id,vm_id:this.props.vm_id}).then((t=>{null===t.data.device_id&&(t.data.device_id=""),this.setState(t)}))}syncDatabase(){(0,n.Cc)("api/devices/"+this.props.type+"/vm_info",{device_id:this.props.device_id,vm_id:this.props.vm_id,op:"update"}).then((t=>this.setState(t)))}updateInfo(){(0,n.Cc)("api/devices/"+this.props.type+"/vm_map",{bios_uuid:this.state.data.bios_uuid,device_id:this.state.data.device_id,host_id:this.props.device_id,op:"update"}).then((t=>this.setState({update:t.update})))}interfaceButton(t,e){return this.state.data.device_id?e.interface_id?(0,p.jsx)(o.InfoButton,{onClick:()=>this.changeImport({interface_id:e.interface_id})},"info"):(0,p.jsx)(o.AddButton,{onClick:()=>this.changeImport({...e,interface_id:"new"})},"add"):(0,p.jsx)("div",{})}render(){if(this.state.data){const t=this.state.data;return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)(a.InfoArticle,{header:"VM info",children:[(0,p.jsxs)(a.InfoColumns,{columns:3,children:[(0,p.jsx)(d.TextLine,{id:"name",text:t.name},"name"),(0,p.jsx)("div",{}),(0,p.jsx)(d.TextInput,{id:"device_id",label:"Device ID",value:t.device_id,onChange:this.onChange},"device_id"),(0,p.jsx)("div",{}),(0,p.jsx)(d.TextLine,{id:"device",label:"Device Name",text:t.device_name},"device_name"),(0,p.jsx)("div",{}),(0,p.jsx)(d.TextLine,{id:"snmp_id",label:"SNMP id",text:t.snmp_id},"snmp"),(0,p.jsx)("div",{}),(0,p.jsx)(d.TextLine,{id:"uuid",label:"UUID",text:t.bios_uuid},"uuid"),(0,p.jsx)("div",{}),(0,p.jsx)(d.StateLine,{id:"state",state:t.state},"state"),(0,p.jsx)("div",{}),(0,p.jsx)(d.TextLine,{id:"config",text:t.config},"config"),(0,p.jsx)("div",{}),Object.entries(this.state.interfaces).map((t=>(0,p.jsxs)(i.Fragment,{children:[(0,p.jsx)(d.TextLine,{id:"interface_"+t[0],label:"Interface",text:`${t[1].name} - ${t[1].mac} - ${t[1].port}`},"interface"),this.interfaceButton(t[0],t[1])]},t[0])))]},"hyp_ic"),(0,p.jsx)(o.ReloadButton,{onClick:()=>this.componentDidMount(),title:"Reload"},"reload"),(0,p.jsx)(o.SaveButton,{onClick:()=>this.updateInfo(),title:"Save mapping"},"save"),(0,p.jsx)(o.SyncButton,{onClick:()=>this.syncDatabase(),title:"Resync database with VM info"},"sync"),t.device_id&&(0,p.jsx)(o.GoButton,{onClick:()=>this.changeSelf((0,p.jsx)(r.Info,{id:t.device_id,changeSelf:this.props.changeSelf},"device_info")),title:"VM device info"},"go"),(0,p.jsx)(a.Result,{result:JSON.stringify(this.state.update)},"result")]},"hyp_article"),(0,p.jsx)(h.NavBar,{}),this.state.content]})}return(0,p.jsx)(a.Spinner,{})}}class x extends i.Component{constructor(t){super(t),this.snapshot=(t,e)=>{this.setState({wait:(0,p.jsx)(a.Spinner,{})}),(0,n.Cc)("api/devices/"+this.props.type+"/vm_snapshot",{device_id:this.props.device_id,vm_id:this.props.vm_id,op:t,snapshot:e}).then((t=>this.setState({...t,wait:null})))},this.deleteList=t=>{window.confirm("Really delete snapshot?")&&(this.setState({wait:(0,p.jsx)(a.Spinner,{})}),(0,n.Cc)("api/devices/"+this.props.type+"/vm_snapshot",{device_id:this.props.device_id,vm_id:this.props.vm_id,op:"remove",snapshot:t}).then((e=>{if(e.deleted){let e=0;const s=this.state.data.filter((e=>e.id!==t));s.forEach((t=>{e=e<parseInt(t.id)?parseInt(t.id):e})),this.setState({data:s,highest:e,wait:null})}})))},this.listItem=t=>[t.name,t.id,t.desc,t.created,t.state,(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(o.RevertButton,{onClick:()=>this.snapshot("revert",t.id),title:"Revert to snapshot"},"revert"),(0,p.jsx)(o.DeleteButton,{onClick:()=>this.deleteList(t.id),title:"Delete snapshot"},"del")]})],this.state={}}componentDidMount(){this.snapshot("list",void 0)}render(){return(0,p.jsxs)(a.ContentReport,{header:`Snapshot (${this.props.vm_id}) Highest ID:${this.state.highest}`,thead:["Name","ID","Description","Created","State",""],trows:this.state.data,listItem:this.listItem,children:[(0,p.jsx)(o.ReloadButton,{onClick:()=>this.snapshot("list",void 0),title:"Reload list"},"reload"),this.state.wait]},"hyp_snapshot_cr")}}}}]);
//# sourceMappingURL=917.4cd237f4.chunk.js.map
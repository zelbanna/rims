{"version":3,"sources":["hypervisor.jsx"],"names":["Main","props","listItem","row","up","ip_state","hostname","type_name","key","state","type_functions","onClick","context","changeMain","Manage","id","device_id","type","url","length","window","open","changeContent","elem","setState","content","post_call","field","search","extra","sort","then","result","header","thead","trows","this","data","Sync","Component","contextType","RimsContext","host_id","vm","device_uuid","config","entries","forEach","hasOwnProperty","entry","push","loadNavigation","title","Inventory","sortList","method","a","b","name","localeCompare","Operation","vm_id","text","highlight","undefined","componentDidMount","operation","op","wait","snapshot","status","on","off","Info","changeSelf","Snapshots","onChange","e","target","value","changeImport","intf","lib","class","mac","interface_id","update","columns","label","device_name","snmp_id","Object","interfaces","map","idx","port","interfaceButton","updateInfo","syncDatabase","JSON","stringify","deleteList","confirm","deleted","highest","filter","parseInt","desc","created"],"mappings":"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","file":"static/js/14.041173dc.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Result, Spinner, StateLeds, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, GoButton, HeaderButton, InfoButton, ItemsButton, LogButton, PauseButton, RevertButton, ReloadButton, SaveButton, ShutdownButton, SnapshotButton, StartButton, StopButton, SyncButton, UiButton } from './infra/Buttons.jsx';\nimport { StateLine, TextInput, TextLine } from './infra/Inputs.jsx';\nimport { NavBar, NavInfo, NavButton } from './infra/Navigation.jsx';\n\nimport { Info as DeviceInfo, Logs as DeviceLogs } from './device.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/list',{field:'base',search:'hypervisor',extra:['type','functions','url'],sort:'hostname'}).then(result => this.setState(result))\n }\n\n listItem = (row) => {\n  const up =  (row.ip_state === 'up');\n  return [row.hostname,row.type_name,<>\n   <StateLeds key='state' state={row.ip_state} />\n   {up && row.type_functions === 'manage' && <InfoButton key='info' onClick={() => this.context.changeMain(<Manage key={'hypervisor_manage_'+row.id} device_id={row.id} type={row.type_name} />)} />}\n   {up && row.url && row.url.length > 0 && <UiButton key='ui' onClick={() => window.open(row.url,'_blank') } />}\n   </>]\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <>\n   <ContentList key='hyp_cl' header='Hypervisor' thead={['Hostname','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <SyncButton key='sync' onClick={() => this.changeContent(<Sync />) } />\n   </ContentList>\n   <ContentData key='hyp_cd'>{this.state.content}</ContentData>\n  </>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Sync **************\n//\nclass Sync extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/vm_mapping').then(result => {\n    let entries = [];\n    ['existing','inventory','discovered','database'].forEach(type => {\n     if (result.hasOwnProperty(type))\n      result[type].forEach(entry => { entry.type = type; entries.push(entry); })\n    })\n    this.setState({data:entries})\n   })\n }\n\n listItem = (row) => [row.type,row.host_id,row.device_id,row.vm,row.device_uuid,row.config]\n\n render(){\n  return <ContentReport key='hyp_cr' header='VM Mapping' thead={['Status','Host','Device','VM Name','Device UUID','Config']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Manage **************\n//\nexport class Manage extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/management',{id:this.props.device_id}).then(result => {\n   this.context.loadNavigation(<NavBar key='hypervisor_navbar'>\n    <NavButton key='hyp_nav_inv' title='Inventory' onClick={() => this.changeContent(<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />)} />\n    <NavButton key='hyp_nav_logs' title='Logs' onClick={() => this.changeContent(<DeviceLogs key='device_logs' id={this.props.device_id} />)} />\n    {result.data.url && (result.data.url.length > 0) && <NavButton key='hyp_nav_ui' title='UI' onClick={() => window.open(result.data.url,'_blank')} />}\n    <NavInfo key='hyp_nav_name' title={result.data.hostname} />\n   </NavBar>);\n   this.setState({...result,content:<Inventory key='hypervisor_inventory' device_id={this.props.device_id} type={this.props.type} />});\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <>{this.state.content}</>\n }\n}\nManage.contextType = RimsContext;\n\n// ************** Inventory **************\n//\nexport class Inventory extends Component{\n constructor(props){\n  super(props)\n  this.state = {sort:'name'}\n }\n\n componentDidMount(){\n  post_call('api/devices/' + this.props.type + '/inventory',{device_id:this.props.device_id, sort: this.state.sort}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n sortList = (method) => {\n  if (method === 'name')\n   this.state.data.sort((a,b) => a.name.localeCompare(b.name));\n  else\n   this.state.data.sort((a,b) => (a.id - b.id))\n  this.setState({sort:method})\n }\n\n listItem = (row) => [row.id,row.name,<Operation key={'hl_op_'+row.id} vm_id={row.id} device_id={this.props.device_id} type={this.props.type} changeContent={this.changeContent} state={row.state} />]\n\n render(){\n  if (this.state.data){\n   const thead = [<HeaderButton key='id' text='ID' highlight={(this.state.sort === 'id')} onClick={() => this.sortList('id')} />,<HeaderButton key='vm' text='VM' highlight={(this.state.sort === 'name')} onClick={() => this.sortList('name')} />,'Operations'];\n   return <>\n    <ContentList key='hl_cl' header='Inventory' thead={thead} trows={this.state.data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => {this.setState({data:undefined}); this.componentDidMount()} } />\n     <LogButton key='logs' onClick={() => this.changeContent(<DeviceLogs key='device_logs' id={this.props.device_id} />)} title='Device logs' />\n    </ContentList>\n    <ContentData key='hl_cd'>{this.state.content}</ContentData>\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component{\n constructor(props){\n  super(props)\n  this.state = {state:this.props.state, status:'',wait:null};\n }\n\n operation = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_op',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n snapshot = (op) => {\n  this.setState({wait:<Spinner />})\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op}).then(result => this.setState({...result, wait:null}));\n }\n\n render(){\n   const on = (this.state.state === 'on');\n   const off = (this.state.state === 'off');\n   return <>\n    <InfoButton key='info' onClick={() => this.props.changeContent(<Info key={'hypervisor_info_'+this.props.vm_id} device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} changeSelf={this.props.changeContent} />)} title='VM info' />\n    {(off || this.state.state === 'suspended')  && <StartButton key='start' onClick={() => this.operation('on')} title={this.state.status} />}\n    {on && <StopButton key='stop' onClick={() => this.operation('shutdown')} title={this.state.status} />}\n    {on && <ReloadButton key='reload' onClick={() => this.operation('reboot')} title={this.state.status} />}\n    {on && <PauseButton key='suspend' onClick={() => this.operation('suspend')} title={this.state.status} />}\n    {(on || this.state.state === 'suspended') && <ShutdownButton key='shutdown' onClick={() => this.operation('off')} title={this.state.status} />}\n    {off && <SnapshotButton key='snapshot' onClick={() => this.snapshot('create')} title='Take snapshot' />}\n    {off && <ItemsButton key='snapshots' onClick={() => this.props.changeContent(<Snapshots key={'hypervisor_snapshots_'+this.props.vm_id} device_id={this.props.device_id} vm_id={this.props.vm_id} type={this.props.type} />)} title='Snapshot info' />}\n    {this.state.wait}\n   </>\n }\n}\n\n// ************ Info *************\n//\nclass Info extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n changeContent = (elem) => this.setState({content:elem});\n\n changeImport = (intf) => import('./interface.jsx').then(lib => this.setState({content:<lib.Info key={'interface_info_'+intf[0]} device_id={this.state.data.device_id} class='virtual' mac={intf[1].mac} name={intf[1].name} interface_id={intf[1].interface_id} changeSelf={this.changeContent} />}))\n\n componentDidMount(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id}).then(result => this.setState(result))\n }\n\n syncDatabase(){\n  post_call('api/devices/'+this.props.type+'/vm_info',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'update'}).then(result => this.setState(result))\n }\n\n updateInfo(){\n  post_call('api/devices/'+this.props.type+'/vm_map',{device_uuid:this.state.data.device_uuid, device_id:this.state.data.device_id, host_id:this.props.device_id, op:'update'}).then(result => this.setState({update:result.update}))\n }\n\n interfaceButton(intf){\n  if(this.state.data.device_id){\n   if (intf[1].interface_id)\n    return <InfoButton key={'hyp_if_btn_'+intf[0]} onClick={() => this.changeImport([intf[0],{interface_id:intf[1].interface_id}])} />\n   else\n    return <AddButton key={'hyp_if_btn_'+intf[0]} onClick={() => this.changeImport({...intf,interface_id:'new'})} />\n  } else\n   return <div />\n }\n\n render(){\n  if (this.state.data) {\n   const data = this.state.data;\n   return <>\n    <InfoArticle key='hyp_article' header='VM info'>\n     <InfoColumns key='hyp_ic' columns={3}>\n      <TextLine key='name' id='name' text={data.name} /><div />\n      <TextInput key='device_id' id='device_id' label='Device ID' value={data.device_id} onChange={this.onChange} /><div />\n      <TextLine key='device_name' id='device' label='Device Name' text={data.device_name} /><div />\n      <TextLine key='snmp' id='snmp_id' label='SNMP id' text={data.snmp_id} /><div />\n      <TextLine key='uuid' id='uuid' label='UUID' text={data.device_uuid} /><div />\n      <StateLine key='state' id='state' state={data.state} /><div />\n      <TextLine key='config' id='config' text={data.config} /><div />\n      {Object.entries(this.state.interfaces).map((row,idx) => <Fragment key={idx}><TextLine key='intf' id={'interface_'+row[0]} label='Interface' text={`${row[1].name} - ${row[1].mac} - ${row[1].port}`} />{this.interfaceButton(row)}</Fragment>)}\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save mapping' />\n     <SyncButton key='sync' onClick={() => this.syncDatabase()} title='Resync database with VM info' />\n     {data.device_id && <GoButton key='go' onClick={() => this.changeSelf(<DeviceInfo key='device_info' id={data.device_id} changeSelf={this.props.changeSelf} />)} title='VM device info' />}\n     <Result key='result' result={JSON.stringify(this.state.update)} />\n    </InfoArticle>\n    <NavBar />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// ************ Snapshots *************\n//\nclass Snapshots extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.snapshot('list',undefined);\n }\n\n snapshot = (op,id) => {\n  this.setState({wait:<Spinner />});\n  post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:op, snapshot:id}).then(result => this.setState({...result, wait:null}));\n }\n\n deleteList = (id) => {\n  if (window.confirm('Really delete snapshot?')){\n   this.setState({wait:<Spinner />})\n   post_call('api/devices/'+this.props.type+'/vm_snapshot',{device_id:this.props.device_id, vm_id:this.props.vm_id, op:'remove', snapshot:id}).then(result => {\n    if(result.deleted){\n     let highest = 0;\n     const data = this.state.data.filter(row => (row.id !== id));\n     data.forEach(row => { highest = (highest < parseInt(row.id)) ? parseInt(row.id) : highest });\n     this.setState({data:data,highest:highest,wait:null});\n    }\n   })\n  }\n }\n\n listItem = (row) => [row.name,row.id,row.desc,row.created,row.state,<>\n  <RevertButton key='revert' onClick={() => this.snapshot('revert',row.id)} title='Revert to snapshot' />\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete snapshot' />\n </>]\n\n render(){\n  return <ContentReport key='hyp_snapshot_cr' header={`Snapshot (${this.props.vm_id}) Highest ID:${this.state.highest}`} thead={['Name','ID','Description','Created','State','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='reload' onClick={() => this.snapshot('list',undefined)} title='Reload list' />\n   {this.state.wait}\n  </ContentReport>\n }\n}\n"],"sourceRoot":""}
{"version":3,"file":"static/js/823.876edc3d.chunk.js","mappings":"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","sources":["location.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/location/list',).then(result => this.setState(result))\n }\n\n deleteList = (id) => (window.confirm('Really delete location?') && post_call('api/location/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row) => [row.id,row.name,<>\n   <ConfigureButton key='conf' onClick={() => this.changeContent(<Info key='location' id={row.id} />)} title='Edit location' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </>]\n\n render(){\n  return <>\n   <ContentList key='cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='location' id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () => post_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidUpdate(prevProps,prevState){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_loc'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='ia_loc' header='Location'>\n     <InfoColumns key='ic'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n"],"names":["List","Component","constructor","props","super","deleteList","id","window","confirm","post_call","then","result","deleted","this","setState","data","state","filter","row","changeContent","listItem","name","_jsxs","_Fragment","children","_jsx","ConfigureButton","onClick","Info","title","DeleteButton","componentDidMount","render","ContentList","header","thead","trows","ReloadButton","AddButton","ContentData","mountUpdate","fun","onChange","e","target","value","updateInfo","op","found","componentDidUpdate","prevProps","prevState","InfoArticle","InfoColumns","TextInput","SaveButton","Spinner"],"sourceRoot":""}
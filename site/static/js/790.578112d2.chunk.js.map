{"version":3,"file":"static/js/790.578112d2.chunk.js","mappings":"qOASO,MAAMA,UAAaC,EAAAA,UACzBC,WAAAA,CAAYC,GACXC,MAAMD,GAAM,KAQbE,SAAYC,GAAQ,CAACA,EAAIC,KAAKD,EAAIE,KAAIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACpCC,EAAAA,EAAAA,KAACC,EAAAA,WAAU,CAAYC,QAASA,IAAMC,KAAKC,eAAcJ,EAAAA,EAAAA,KAACK,EAAI,CAAiBC,GAAIZ,EAAIY,IAApB,cAA6BC,MAAM,oBAAtF,SAChBP,EAAAA,EAAAA,KAACQ,EAAAA,aAAY,CAAWN,QAASA,IAAMC,KAAKM,WAAWf,EAAIY,IAAKC,MAAM,eAApD,WACf,KAELE,WAAcH,GAAQI,OAAOC,QAAQ,yBAA0BC,EAAAA,EAAAA,IAAU,yBAA0B,CAACN,GAAGA,IAAKO,KAAKC,IAC5GA,EAAOC,UACVZ,KAAKa,SAAS,CAACC,KAAKd,KAAKe,MAAMD,KAAKE,OAAOzB,GAAQA,EAAIY,KAAOA,KAC9DH,KAAKC,cAAc,SAfpBD,KAAKe,MAAQ,CAAC,CACf,CAEAE,iBAAAA,IACCR,EAAAA,EAAAA,IAAU,wBAAwBC,KAAKC,GAAUX,KAAKa,SAASF,GAChE,CAaAO,MAAAA,GACC,OAAOxB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACNF,EAAAA,EAAAA,MAACyB,EAAAA,YAAW,CAAUC,OAAO,QAAQC,MAAO,CAAC,OAAO,MAAM,IAAKC,MAAOtB,KAAKe,MAAMD,KAAMxB,SAAUU,KAAKV,SAASM,SAAA,EAC9GC,EAAAA,EAAAA,KAAC0B,EAAAA,aAAY,CAAcxB,QAASA,IAAMC,KAAKiB,qBAA7B,WAClBpB,EAAAA,EAAAA,KAAC2B,EAAAA,UAAS,CAAWzB,QAASA,IAAMC,KAAKC,eAAcJ,EAAAA,EAAAA,KAACK,EAAI,CAAiBC,GAAG,OAAf,cAA0BC,MAAM,YAAlF,SAFC,OAIjBP,EAAAA,EAAAA,KAAC4B,EAAAA,YAAW,CAAWC,YAAcC,GAAQ3B,KAAKC,cAAgB0B,GAAjD,SAEnB,EAKD,MAAMzB,UAAahB,EAAAA,UAClBC,WAAAA,CAAYC,GACXC,MAAMD,GAAO,KAadwC,WAAa,KAAMnB,EAAAA,EAAAA,IAAU,oBAAoB,CAACjB,KAAKQ,KAAKe,MAAMD,KAAKtB,OAAOkB,KAAKC,GAAUA,EAAOkB,OAAS7B,KAAKa,SAAS,CAACC,KAAK,IAAId,KAAKe,MAAMD,KAAMgB,SAASnB,EAAOG,KAAKgB,SAAUC,UAAUpB,EAAOG,KAAKX,OAAM,KAEjN6B,SAAYC,GAAMjC,KAAKa,SAAS,CAACC,KAAK,IAAId,KAAKe,MAAMD,KAAM,CAACmB,EAAEC,OAAOC,MAAMF,EAAEC,OAAOE,SAAS,KAE7FnC,cAAiBoC,GAASrC,KAAKa,SAAS,CAACyB,QAAQD,IAAM,KAEvDE,WAAa,KAAO9B,EAAAA,EAAAA,IAAU,uBAAuB,CAAC+B,GAAG,YAAaxC,KAAKe,MAAMD,OAAOJ,KAAKC,GAAUX,KAAKa,SAASF,IAlBpHX,KAAKe,MAAQ,CAACD,KAAK,KAAMe,OAAM,EAChC,CAEAY,kBAAAA,CAAmBC,GACdA,IAAc1C,KAAKZ,OACtBY,KAAKiB,mBACP,CAEAA,iBAAAA,IACCR,EAAAA,EAAAA,IAAU,uBAAuB,CAACN,GAAGH,KAAKZ,MAAMe,KAAKO,KAAKC,GAAUX,KAAKa,SAAS,IAAIF,EAAQ2B,QAAQ,OACvG,CAUApB,MAAAA,GACC,GAAKlB,KAAKe,MAAMc,MAEX,IAAI7B,KAAKe,MAAMD,KAAM,CACzB,MAAMX,EAAKH,KAAKe,MAAMD,KAAKX,GACrBwC,EAAc,QAAPxC,EACb,OAAOT,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACNF,EAAAA,EAAAA,MAACkD,EAAAA,YAAW,CAAexB,OAAO,OAAMxB,SAAA,EACvCF,EAAAA,EAAAA,MAACmD,EAAAA,YAAW,CAAAjD,SAAA,EACXC,EAAAA,EAAAA,KAACiD,EAAAA,UAAS,CAAY3C,GAAG,OAAOiC,MAAOpC,KAAKe,MAAMD,KAAKtB,KAAMwC,SAAUhC,KAAKgC,UAA7D,SACfnC,EAAAA,EAAAA,KAACkD,EAAAA,SAAQ,CAAW5C,GAAG,MAAMiC,MAAOpC,KAAKe,MAAMD,KAAKrB,IAAMuC,SAAUhC,KAAKgC,UAA3D,QACdnC,EAAAA,EAAAA,KAACiD,EAAAA,UAAS,CAAgB3C,GAAG,WAAWiC,MAAOpC,KAAKe,MAAMD,KAAKgB,SAAUE,SAAUhC,KAAKgC,UAAzE,cAHC,OAKjBnC,EAAAA,EAAAA,KAACmD,EAAAA,WAAU,CAAYjD,QAASA,IAAMC,KAAKuC,aAAcnC,MAAM,oBAA/C,QACfuC,IAAQ3C,KAAKe,MAAMD,KAAKgB,WAAYjC,EAAAA,EAAAA,KAACoD,EAAAA,aAAY,CAAclD,QAASC,KAAK4B,WAAYxB,MAAM,6BAAzC,UACtDuC,IAAO9C,EAAAA,EAAAA,KAAC0B,EAAAA,aAAY,CAAcxB,QAASA,IAAMC,KAAKC,eAAcJ,EAAAA,EAAAA,KAACqD,EAAM,CAAyB1D,KAAMQ,KAAKe,MAAMD,KAAKtB,MAAzC,eAAeW,KAAvE,UACzBwC,IAAO9C,EAAAA,EAAAA,KAACsD,EAAAA,UAAS,CAAYpD,QAASA,IAAMC,KAAKC,eAAcJ,EAAAA,EAAAA,KAACuD,EAAO,CAAuB5D,KAAMQ,KAAKe,MAAMD,KAAKtB,MAAvC,aAAaW,IAAqCC,MAAM,kBAA/G,QACtBuC,IAAO9C,EAAAA,EAAAA,KAACQ,EAAAA,aAAY,CAAYN,QAASA,IAAMC,KAAKC,eAAcJ,EAAAA,EAAAA,KAACwD,EAAQ,CAAuB7D,KAAMQ,KAAKe,MAAMD,KAAKtB,MAAvC,aAAaW,IAAqCC,MAAM,cAAhH,QACzBuC,IAAO9C,EAAAA,EAAAA,KAACyD,EAAAA,WAAU,CAAavD,QAASA,IAAMC,KAAKC,eAAcJ,EAAAA,EAAAA,KAAC0D,EAAQ,CAAwB/D,KAAMQ,KAAKe,MAAMD,KAAKtB,MAAxC,cAAcW,IAAqCC,MAAM,mBAAlH,WAXR,YAajBP,EAAAA,EAAAA,KAAC2D,EAAAA,OAAM,CAAuBrD,GAAG,mBAArB,mBACXH,KAAKe,MAAMuB,UAEd,CACC,OAAOzC,EAAAA,EAAAA,KAAC4D,EAAAA,QAAO,GAAG,CAtBlB,OAAO/D,EAAAA,EAAAA,MAACkD,EAAAA,YAAW,CAAAhD,SAAA,CAAe,iBAAeI,KAAKZ,MAAMe,GAAG,aAAvC,UAuB1B,EAKD,MAAM+C,UAAehE,EAAAA,UACpB+B,iBAAAA,IACCR,EAAAA,EAAAA,IAAU,oBAAoB,CAAC,EAAE,CAAC,UAAUT,KAAKZ,MAAMI,OAAOkB,KAAKC,IAC9DA,EACHX,KAAKa,SAASF,GAEdX,KAAKa,SAAS,CAAC6C,QAAQ,CAAC,gDAE3B,CAEAxC,MAAAA,GACC,OAASlB,KAAKe,OAAuBlB,EAAAA,EAAAA,KAAC8D,EAAAA,YAAW,CAAevC,OAAO,SAAQxB,SAAEI,KAAKe,MAAM2C,QAAQE,KAAK,OAAnD,YAA/B/D,EAAAA,EAAAA,KAAC4D,EAAAA,QAAO,GAChC,EAKD,MAAMJ,UAAiBnE,EAAAA,UAEtB+B,iBAAAA,IACCR,EAAAA,EAAAA,IAAU,wBAAwB,CAAC,EAAE,CAAC,UAAUT,KAAKZ,MAAMI,OAAOkB,KAAKC,GAAUX,KAAKa,SAAS,CAACgD,KAAKlD,EAAOmD,OAC7G,CAEA5C,MAAAA,GACC,OAASlB,KAAKe,OAAuBlB,EAAAA,EAAAA,KAAC8D,EAAAA,YAAW,CAAevC,OAAO,UAASxB,SAAGmE,OAAOC,QAAQhE,KAAKe,MAAM8C,MAAMI,IAAIC,GAAO,GAAGA,EAAI,OAAOA,EAAI,MAAON,KAAK,OAAtG,YAA/B/D,EAAAA,EAAAA,KAAC4D,EAAAA,QAAO,GAChC,EAKM,MAAML,UAAgBlE,EAAAA,UAC5BC,WAAAA,CAAYC,GACXC,MAAMD,GACNY,KAAKe,MAAQ,CAAC,CACf,CAEAE,iBAAAA,IACCR,EAAAA,EAAAA,IAAU,sBAAsB,CAAC,EAAE,CAAC,UAAUT,KAAKZ,MAAMI,OAAOkB,KAAKC,IACpE,MAAMwD,EAAQxD,EAAU,CAACkD,KAAKlD,GAAU,CAACyD,OAAM,GAC/CpE,KAAKa,SAASsD,IAEhB,CAEAjD,MAAAA,GACC,OAAIlB,KAAKe,MAAM8C,MACPhE,EAAAA,EAAAA,KAAA,OAAAD,SAAMmE,OAAOC,QAAQhE,KAAKe,MAAM8C,MAAMI,IAAI,CAACC,EAAIG,KAAQxE,EAAAA,EAAAA,KAAC8D,EAAAA,YAAW,CAAWvC,OAAQ8C,EAAI,GAAGtE,SAAEsE,EAAI,GAAGN,KAAK,OAAlCS,MACxErE,KAAKe,MAAMqD,OACZvE,EAAAA,EAAAA,KAAC8D,EAAAA,YAAW,CAAA/D,SAAC,6CAEbC,EAAAA,EAAAA,KAAC4D,EAAAA,QAAO,GACjB,EAKM,MAAMF,UAAiBrE,EAAAA,UAC7BC,WAAAA,CAAYC,GACXC,MAAMD,GAAM,KAWbE,SAAYC,GAAQ,CAACA,EAAI+E,OAAQ/E,EAAIgF,SAAUhF,EAAIiF,UAAWC,KAAKC,UAAUnF,EAAIoF,QAASF,KAAKC,UAAUnF,EAAI4E,OAV5GnE,KAAKe,MAAQ,CAAC,CACf,CAEAE,iBAAAA,IACCR,EAAAA,EAAAA,IAAU,uBAAuB,CAAC,EAAE,CAAC,UAAUT,KAAKZ,MAAMI,OAAOkB,KAAKC,IACrE,MAAMwD,EAAQxD,EAAU,CAACiE,MAAMjE,GAAU,CAACyD,OAAM,GAChDpE,KAAKa,SAASsD,IAEhB,CAIAjD,MAAAA,GACC,OAAIlB,KAAKe,MAAM6D,OACP/E,EAAAA,EAAAA,KAACgF,EAAAA,cAAa,CAAoBzD,OAAO,QAAQC,MAAO,CAAC,SAAS,WAAW,YAAY,SAAS,aAAcC,MAAOtB,KAAKe,MAAM6D,MAAM9D,KAAMxB,SAAUU,KAAKV,UAA1I,gBAClBU,KAAKe,MAAMqD,OACZvE,EAAAA,EAAAA,KAAC8D,EAAAA,YAAW,CAAA/D,SAAC,8CAEbC,EAAAA,EAAAA,KAAC4D,EAAAA,QAAO,GACjB,E","sources":["node.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport {Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { TextInput, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, LogButton, ReloadButton, SaveButton, SearchButton, TimeButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/node_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.url,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key='node_info' id={row.id} />)} title='Node information' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete node' />\n  </>]\n\n deleteList = (id) => (window.confirm('Really delete node?') && post_call('api/master/node_delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return <>\n   <ContentList key='cl' header='Nodes' thead={['Node','URL','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='node_info' id='new' />)} title='Add node' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props)\n   this.componentDidMount();\n }\n\n componentDidMount(){\n  post_call('api/master/node_info',{id:this.props.id}).then(result => this.setState({...result, content:null}))\n }\n\n searchInfo = () => post_call('api/device/search',{node:this.state.data.node}).then(result => result.found && this.setState({data:{...this.state.data, hostname:result.data.hostname, device_id:result.data.id}}))\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () =>  post_call('api/master/node_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ia_node'>Node with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data) {\n   const id = this.state.data.id;\n   const old = (id !== 'new');\n   return <>\n    <InfoArticle key='ia_node' header='Node'>\n     <InfoColumns key='ic'>\n      <TextInput key='node' id='node' value={this.state.data.node} onChange={this.onChange} />\n      <UrlInput key='url' id='url' value={this.state.data.url}  onChange={this.onChange} />\n      <TextInput key='hostname' id='hostname' value={this.state.data.hostname} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save information' />\n     {old && !this.state.data.hostname && <SearchButton key='search' onClick={this.searchInfo} title='Try to map node to device' />}\n     {old && <ReloadButton key='reload' onClick={() => this.changeContent(<Reload key={'node_reload_'+id} node={this.state.data.node} />)} />}\n     {old && <LogButton key='logs' onClick={() => this.changeContent(<LogShow key={'node_logs_'+id} node={this.state.data.node} />)} title='View node logs' />}\n     {old && <DeleteButton key='logc' onClick={() => this.changeContent(<LogClear key={'node_logc_'+id} node={this.state.data.node} />)} title='Clear logs' />}\n     {old && <TimeButton key='tasks' onClick={() => this.changeContent(<TaskShow key={'node_tasks_'+id} node={this.state.data.node} />)} title='View node tasks' />}\n    </InfoArticle>\n    <NavBar key='node_navigation' id='node_navigation' />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Reload ***************\n//\nclass Reload extends Component {\n componentDidMount(){\n  post_call('api/system/reload',{},{'X-Route':this.props.node}).then(result => {\n   if (result)\n    this.setState(result);\n   else\n    this.setState({modules:['error reloading modules (check REST call)']})\n  })\n }\n\n render(){\n  return (!this.state) ? <Spinner /> : <CodeArticle key='nr_code' header='Module'>{this.state.modules.join('\\n')}</CodeArticle>\n }\n}\n\n// *************** LogClear ***************\n//\nclass LogClear extends Component {\n\n componentDidMount(){\n  post_call('api/system/logs_clear',{},{'X-Route':this.props.node}).then(result => this.setState({logs:result.file}))\n }\n\n render(){\n  return (!this.state) ? <Spinner /> : <CodeArticle key='nc_code' header='Cleared'>{(Object.entries(this.state.logs).map(log => `${log[0]}: ${log[1]}`)).join('\\n')}</CodeArticle>\n }\n}\n\n// *************** LogShow ***************\n//\nexport class LogShow extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/logs_get',{},{'X-Route':this.props.node}).then(result => {\n   const args = (result) ? {logs:result} : {error:true}\n   this.setState(args);\n  })\n }\n\n render(){\n  if (this.state.logs)\n   return <div>{Object.entries(this.state.logs).map((log,idx) => <CodeArticle key={idx} header={log[0]}>{log[1].join('\\n')}</CodeArticle>)}</div>\n  else if (this.state.error)\n   return <CodeArticle>error retrieving logs (check REST call)</CodeArticle>\n  else\n   return <Spinner />\n }\n}\n\n// *************** TaskShow ***************\n//\nexport class TaskShow extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/task_list',{},{'X-Route':this.props.node}).then(result => {\n   const args = (result) ? {tasks:result} : {error:true}\n   this.setState(args);\n  })\n }\n\n listItem = (row) => [row.module, row.function, row.frequency, JSON.stringify(row.output), JSON.stringify(row.args)]\n\n render(){\n  if (this.state.tasks)\n   return <ContentReport key='cr_task_show' header='Tasks' thead={['Module','Function','Frequency','Output','Arguments']} trows={this.state.tasks.data} listItem={this.listItem} />\n  else if (this.state.error)\n   return <CodeArticle>error retrieving tasks (check REST call)</CodeArticle>\n  else\n   return <Spinner />\n }\n}\n"],"names":["List","Component","constructor","props","super","listItem","row","node","url","_jsxs","_Fragment","children","_jsx","InfoButton","onClick","this","changeContent","Info","id","title","DeleteButton","deleteList","window","confirm","post_call","then","result","deleted","setState","data","state","filter","componentDidMount","render","ContentList","header","thead","trows","ReloadButton","AddButton","ContentData","mountUpdate","fun","searchInfo","found","hostname","device_id","onChange","e","target","name","value","elem","content","updateInfo","op","componentDidUpdate","prevProps","old","InfoArticle","InfoColumns","TextInput","UrlInput","SaveButton","SearchButton","Reload","LogButton","LogShow","LogClear","TimeButton","TaskShow","NavBar","Spinner","modules","CodeArticle","join","logs","file","Object","entries","map","log","args","error","idx","module","function","frequency","JSON","stringify","output","tasks","ContentReport"],"sourceRoot":""}
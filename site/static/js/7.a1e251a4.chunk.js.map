{"version":3,"sources":["location.jsx","rack.jsx","infra/rack.module.css"],"names":["List","props","changeContent","elem","setState","content","deleteList","id","window","confirm","rest_call","then","result","deleted","data","state","filter","row","listItem","name","key","onClick","Info","title","header","thead","trows","this","componentDidMount","rnd","Component","onChange","e","target","value","updateInfo","op","found","Main","compileNavItems","context","loadNavigation","Infra","type","prevProps","contextType","RimsContext","text","location","location_id","changeMain","rack_id","Layout","changeSelf","sort","size","console","consoles","map","hostname","label","locations","pdu_1","pdus","pdu_2","sign","rack","i","push","className","styles","rackLeft","style","gridRow","rackRight","forEach","dev","rackItem","gridRowStart","rack_unit","gridRowEnd","rack_size","color","grid","createRack","front","back","module","type_base","function","args","device_id","type_name","field","search","extra","exports"],"mappings":"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","file":"static/js/7.a1e251a4.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { rest_call, rnd } from './infra/Functions.js';\nimport { Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\nconstructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/location/list',).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete location?') && rest_call('api/location/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n listItem = (row) => [row.id,row.name,<Fragment key={'location_buttons_'+row.id}>\n   <ConfigureButton key={'loc_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'location_'+row.id} id={row.id} />)} title='Edit location' />\n   <DeleteButton key={'loc_btn_delete_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete location' />\n   </Fragment>\n  ]\n\n render(){\n  return <Fragment key='loc_fragment'>\n   <ContentList key='loc_cl' header='Locations' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='loc_btn_reload' onClick={() => this.componentDidMount() } />\n    <AddButton key='loc_btn_add' onClick={() => this.changeContent(<Info key={'location_new_' + rnd()} id='new' />)} title='Add location' />\n   </ContentList>\n   <ContentData key='loc_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// *************** Info ***************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => rest_call('api/location/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  rest_call('api/location/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='loc_removed'>Location id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data)\n   return <InfoArticle key='loc_article' header='Location'>\n     <InfoColumns key='loc_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='loc_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n","import React, { Fragment, Component } from 'react';\nimport { rest_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Spinner, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SelectInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, GoButton, InfoButton, ItemsButton, ReloadButton, SaveButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx'\nimport styles from './infra/rack.module.css';\n\nimport { Main as DeviceMain, Info as DeviceInfo } from './device.jsx';\nimport { List as LocationList, Info as LocationInfo } from './location.jsx';\n\n// *************** Main ***************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='rack_list' />\n }\n\n componentDidMount(){\n  this.compileNavItems()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => this.context.loadNavigation(<NavBar key='rack_navbar'>\n   <NavDropDown key='dev_nav_racks' title='Rack'>\n    <NavDropButton key='dev_nav_all_rack' title='Racks' onClick={() => this.changeContent(<List key='rack_list' />)} />\n    <NavDropButton key='dev_nav_all_pdu' title='PDUs' onClick={() => this.changeContent(<Infra key='pdu_list' type='pdu' />)} />\n    <NavDropButton key='dev_nav_all_con' title='Consoles' onClick={() => this.changeContent(<Infra key='console_list' type='console' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_loc' title='Locations' onClick={() => this.changeContent(<LocationList key='location_list' />)}/>\n  </NavBar>)\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// *************** List ***************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/rack/list',{sort:'name'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'rl_btn_loc_'+row.id} text={row.location} onClick={() => this.changeContent(<LocationInfo key={'li_'+row.location_id} id={row.location_id} />)} />,row.name,<Fragment key='rack_list_buttons'>\n   <InfoButton key={'rl_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'rack_info_'+row.id} id={row.id} />)} title='Rack information' />\n   <GoButton key={'rl_btn_go_'+row.id} onClick={() => this.context.changeMain(<DeviceMain key={'rack_device_'+row.id} rack_id={row.id} />)} title='Rack inventory' />\n   <ItemsButton key={'rl_btn_list_'+row.id} onClick={() => this.changeContent(<Layout key={'rack_layout_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title='Rack layout'/>\n   <DeleteButton key={'rl_btn_del_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete rack' />\n  </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete rack?') && rest_call('api/rack/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment key='rack_fragment'>\n   <ContentList key='rack_cl' header='Racks' thead={['Location','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='rl_btn_reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='rl_btn_add' onClick={() => this.changeContent(<Info key={'rack_new_' + rnd()} id='new' />)} title='Add rack' />\n   </ContentList>\n   <ContentData key='rack_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\nList.contextType = RimsContext;\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  rest_call('api/rack/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  rest_call('api/rack/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return <InfoArticle key='rack_article' header='Rack'>\n    <InfoColumns key='rack_content'>\n     <TextInput key='name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <TextInput key='size' id='size' value={this.state.data.size} onChange={this.onChange} />\n     <SelectInput key='console' id='console' value={this.state.data.console} onChange={this.onChange}>{this.state.consoles.map(row => <option key={'ri_con_'+row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='location_id' id='location_id' label='Location' value={this.state.data.location_id} onChange={this.onChange}>{this.state.locations.map(row => <option key={'ri_loc_'+row.id} value={row.id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='pdu_1' id='pdu_1' label='PDU1' value={this.state.data.pdu_1} onChange={this.onChange}>{this.state.pdus.map(row => <option key={'ri_pdu1_'+row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n     <SelectInput key='pdu_2' id='pdu_2' label='PDU2' value={this.state.data.pdu_2} onChange={this.onChange}>{this.state.pdus.map(row => <option key={'ri_pdu2_'+row.id} value={row.id}>{row.hostname}</option>)}</SelectInput>\n    </InfoColumns>\n    <SaveButton key='ri_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// *************** Layout ***************\n//\nexport class Layout extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/rack/devices',{id:this.props.id}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => {\n  if(this.props.changeSelf)\n   this.props.changeSelf(elem);\n }\n\n createRack(id,content,sign){\n  const rack = [];\n  for (let i = 1; i < this.state.size+1; i++)\n   rack.push(<div key={id+'_left_'+i} className={styles.rackLeft} style={{gridRow:-i}}>{i}</div>,<div key={id+'_right_'+i} className={styles.rackRight} style={{gridRow:-i}}>{i}</div>)\n  content.forEach(dev => rack.push(<div key={'rd_' + dev.id} className={styles.rackItem} style={{gridRowStart:this.state.size+2-sign*dev.rack_unit, gridRowEnd:this.state.size+2-(sign*dev.rack_unit+dev.rack_size)}}><HrefButton key={'rd_btn_'+dev.id} style={{color:'var(--ui-txt-color)'}} onClick={() => this.changeContent(<DeviceInfo key='device_info' id={dev.id} />)} text={dev.hostname} /></div>))\n  return <div className={styles.rack} style={{grid:`repeat(${this.state.size-1}, 2vw)/2vw 25vw 2vw`}}>{rack}</div>\n }\n\n render(){\n  if (this.state.size) {\n   return (<Fragment key='rt_frag'>\n    <InfoArticle key='rl_front' header='Front'>\n     {this.createRack('front',this.state.front,1)}\n    </InfoArticle>\n    <InfoArticle key='rl_back' header='Back'>\n     {this.createRack('back',this.state.back,-1)}\n    </InfoArticle>\n   </Fragment>)\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Infra ***************\n//\nexport class Infra extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/device/list',{field:'base',search:this.props.type,extra:['type']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [<HrefButton key={'rinfra_dev_'+row.id} text={row.id} onClick={() => this.changeContent(<DeviceInfo key={'device_' + row.id} id={row.id} />)} title='Device info'/>,\n   row.hostname,<Fragment key='rinfra_buttons'>\n   <InfoButton key={'rinfra_btn_' + row.id} onClick={() => this.context.changeMain({module:row.type_base,function:'Manage',args:{device_id:row.id, type:row.type_name}})} title='Manage device' />\n   </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <Fragment key='rinfra_fragment'>\n   <ContentList key='rinfra_cl' header={this.props.type} thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='rinfra_btn_reload' onClick={() => this.componentDidMount()} />\n   </ContentList>\n   <ContentData key='rinfra_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\nInfra.contextType = RimsContext;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rack\":\"rack_rack__2xnnq\",\"rackLeft\":\"rack_rackLeft__1E8o9\",\"rackRight\":\"rack_rackRight__1Jn29\",\"rackItem\":\"rack_rackItem__2yVLG\"};"],"sourceRoot":""}
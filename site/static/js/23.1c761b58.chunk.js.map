{"version":3,"sources":["system.jsx"],"names":["Main","props","compileNavItems","master","context","settings","node","admin","class","master_admin","loadNavigation","key","title","onClick","changeImport","window","open","changeContent","Controls","Report","RestList","state","services","length","map","row","idx","name","ServiceInfo","setState","content","navinfo","elem","navitems","logs","post_call","user_id","this","id","then","result","Object","assign","prevProps","module","func","args","lib","Elem","Component","contextType","RimsContext","listItem","info","value","data","keys","sort","a","b","localeCompare","header","thead","trows","api","text","function","RestInfo","apilist","forEach","item","functions","push","information","join","RestExecute","JSON","stringify","op","FileList","loadFiles","hasOwnProperty","mode","directory","files","undefined","fullpath","status","alert","substr","src","path","alt","className","styles","href","target","rel","updateService","spinner","service","inactive","StartButton","StopButton","label","extra"],"mappings":"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","file":"static/js/23.1c761b58.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Title, Spinner, Article, CodeArticle, LineArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { StartButton, StopButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton, NavInfo, NavReload } from './infra/Navigation.jsx';\nimport { TextLine } from './infra/Inputs.jsx'\n\nimport styles from './infra/ui.module.css';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {navinfo:[], navitems:[], logs:[], services:[] }\n }\n\n componentDidMount(){\n  post_call('api/system/inventory',{user_id:this.context.settings.id}).then(result => {\n   Object.assign(this.state,result)\n   this.compileNavItems()\n  })\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => {\n  const master = (this.context.settings.node === 'master');\n  const admin = (this.context.settings.class === 'admin');\n  const master_admin = (master && admin);\n  this.context.loadNavigation(<NavBar key='system_navbar'>\n   {master_admin && <NavButton key='sys_nav_node' title='Nodes' onClick={() => this.changeImport('node','List')} />}\n   {master_admin && <NavButton key='sys_nav_srv' title='Servers' onClick={() => this.changeImport('server','List')} />}\n   {master && <NavButton key='sys_nav_erd' title='ERD'     onClick={() => window.open('erd.pdf','_blank')} />}\n   {master_admin && <NavButton key='sys_nav_user' title='Users'  onClick={() => this.changeImport('user','List')} />}\n   {master && <NavButton key='sys_nav_ctrl' title='Controls' onClick={() => this.changeContent(<Controls key='system_controls' />)} />}\n   <NavDropDown key='sys_nav_reports' title='Reports'>\n    <NavDropButton key='sys_nav_sys' title='System' onClick={() => this.changeContent(<Report key='system_report' />)} />\n    {admin && <NavDropButton key='sys_nav_act' title='Activities' onClick={() => this.changeImport('activity','Report')} />}\n    {master && <NavDropButton key='sys_nav_resv' title='Reservations' onClick={() => this.changeImport('reservation','Report')} />}\n    {master && <NavDropButton key='sys_nav_dev' title='Devices' onClick={() => this.changeImport('device','Report')} />}\n    {master && <NavDropButton key='sys_nav_inv' title='Inventory' onClick={() => this.changeImport('inventory','Report')} />}\n   </NavDropDown>\n   <NavButton key='sys_nav_logs' title='Logs' onClick={() => this.changeImport('node','LogShow',{node:this.context.settings.node})} />\n   {admin && <NavButton key='sys_nav_rest' title='REST' onClick={() => this.changeContent(<RestList key='rest_list' />)} />}\n   {admin && this.state.services.length > 0 && <NavDropDown key='sys_nav_svcs' title='Services'>{this.state.services.map((row,idx) => <NavDropButton key={'sys_nav_svcs_'+idx} title={row.name} onClick={() => this.changeContent(<ServiceInfo key={row.name} {...row} /> )} />)}</NavDropDown>}\n   <NavReload key='sys_nav_reload' onClick={() => this.setState({content:null})} />\n   {this.state.navinfo.map((row,idx) => <NavInfo key={'sys_nav_ni_'+idx} title={row} />)}\n  </NavBar>)\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n changeImport(module,func,args){\n  import('./'+module+'.jsx').then(lib => {\n   var Elem = lib[func];\n   this.setState({content:<Elem key={module+'_'+func} {...args} />})\n  })\n }\n\n render(){\n  return <Fragment key='main_base'>{this.state.content}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Report **************\n//\nexport class Report extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/report').then(result => this.setState({data:Object.keys(result).sort((a,b) => a.localeCompare(b)).map(key => ({info:key,value:result[key]})) }))\n }\n\n listItem = (row) => [row.info,row.value]\n\n render(){\n  return <ContentReport key='sys_cr' header='System Report' thead={['Key','Value']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** RestList **************\n//\nclass RestList extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/rest_explore')\n   .then((result) => {\n    var apilist = [];\n    result.data.forEach(item => item.functions.forEach(row => apilist.push({api:item.api, function:row})  ) );\n    this.setState({data:apilist});\n   })\n }\n\n listItem = (row) => [row.api,<HrefButton key={'rest_' + row.api} text={row.function} onClick={() => { this.changeContent(<RestInfo key={`rest_info_${row.api}_${row.function}`} {...row} />)}} />]\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <Fragment key='rest_tp_fragment'>\n   <ContentList key='rest_tp_cl' header='REST API' thead={['API','Function']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='rest_tp_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** RestInfo **************\n//\nclass RestInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/system/rest_information',{api:this.props.api, function:this.props.function}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.module && this.state.information) {\n   return(\n    <Article key='ri_art' header={this.props.api}>\n     {this.state.module.join('\\n')}\n     <Title text={this.props.function} />\n     {this.state.information.join('\\n')}\n    </Article>\n   )\n  } else\n   return <Spinner />\n }\n}\n\n// ************************ REST Execute ********************\n//\nclass RestExecute extends Component {\n componentDidMount(){\n  post_call('api/' + this.props.api,this.props.args).then(result => this.setState(result))\n }\n\n render(){\n  return (this.state) ? <CodeArticle key='re_code' header={this.props.text}>{JSON.stringify(this.state,null,2)}</CodeArticle> : <Spinner />\n }\n}\n\n// ************************ Controls ********************\n//\n// TODO: List should be dynamic from config and passed through REST engine\nclass Controls extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:[\n   {api:'ipam/address_events',text:'IPAM clear all status logs',args:{op:'clear'}},\n   {api:'device/log_clear',text:'Device clear all status logs'},\n   {api:'ipam/check',text:'IPAM status check'},\n   {api:'interface/check',text:'Interface status check'},\n   {api:'device/system_info_discover',text:'Discover device system information (sysmac etc)'},\n   {api:'device/model_sync',text:'Sync device model mapping'},\n   {api:'device/vm_mapping',text:'VM UUID mapping'},\n   {api:'master/oui_fetch',text:'Sync OUI database'},\n   {api:'reservation/expiration_status',text:'Check reservation status'},\n   {api:'fdb/check',text:'Update FDB'}\n  ]}\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n listItem = (row) => [<HrefButton key={'ctrl_' + row.api} text={row.text} onClick={() => { this.changeContent(<RestExecute key={'rest_' + row.api} {...row} />)}} />]\n\n render(){\n  return <Fragment key='ctl_fragment'>\n   <ContentList key='ctl_cl' header='' thead={['API']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='ctl_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** File List **************\n//\nexport class FileList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props)\n   this.loadFiles();\n }\n\n componentDidMount(){\n  this.loadFiles()\n }\n\n loadFiles = () => {\n  let state = {};\n  if (this.props.hasOwnProperty('directory'))\n   state = {mode:'directory',args:{directory:this.props.directory},files:undefined}\n  else if (this.props.hasOwnProperty('fullpath'))\n   state = {mode:'fullpath',args:{fullpath:this.props.fullpath},files:undefined}\n  else\n   state = {mode:'images',args:{},files:undefined}\n  post_call('api/system/file_list',state.args).then(result => {\n   if (result.status === 'OK')\n    this.setState({mode:state.mode,...result})\n   else {\n    window.alert('Error retrieving files:' + result.info);\n    this.setState({files:[]})\n   }\n  })\n }\n\n listItem = (row) => {\n  if (this.state.mode === 'images')\n   return (row.substr(row.length - 4) === '.png') ? [row,<img src={this.state.path +'/'+row} alt={this.state.path +'/'+row} />] : []\n  else\n   return [<Fragment key={row}>{this.state.path + '/'}<a className={styles.href} href={this.state.path + '/' + row} target='_blank' rel='noopener noreferrer'>{row}</a></Fragment>]\n }\n\n render() {\n  return (!this.state.files) ? <Spinner /> : <ContentReport header={this.state.mode} thead={[]} trows={this.state.files} listItem={this.listItem} />\n }\n}\n\n// ************** Service Info **************\n//\nclass ServiceInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {state:'inactive'}\n }\n\n componentDidMount(){\n  this.updateService({})\n }\n\n updateService(args){\n  // Always do a reset (so do a spinner)\n  this.setState({spinner:<Spinner />})\n  post_call('api/system/service_info',{service:this.props.service,...args}).then(result => {\n   if (result.status === 'OK')\n    this.setState({...result,spinner:null})\n   else\n    window.alert('Error retrieving service state:' + result.info);\n  })\n }\n\n render() {\n  const inactive = (this.state.state === 'inactive');\n  const Elem = (inactive) ? StartButton : StopButton;\n  return <LineArticle key='svc_art'>\n    <TextLine key='service_line' id='service' label={this.props.name} text={this.state.state + ' (' +this.state.extra +')'} /><Elem key={'state_change'} onClick={() => this.updateService({op:(inactive) ? 'start' : 'stop'})} title='Operate service' />\n    {this.state.spinner}\n   </LineArticle>\n }\n}\n"],"sourceRoot":""}
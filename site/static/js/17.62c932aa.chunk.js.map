{"version":3,"sources":["multimedia.jsx"],"names":["Main","props","reloadList","post_call","node","then","result","setState","deleteList","obj","window","confirm","file","deleted","data","state","filter","row","path","changeContent","listItem","idx","onClick","Title","title","Lookup","Subtitles","context","settings","this","prevProps","header","thead","trows","Cleanup","mountUpdate","fun","Component","contextType","RimsContext","onChange","e","target","name","value","threadChange","checked","updateInfo","op","transferFile","thread","module","function","output","args","wait","processFile","id","text","JSON","stringify","status","info","seconds","prefix","suffix","label","dest","rename","aac_probe","changes","aac","audio","subtitle","srt","type","epside","episode","video","set_default","language","add","join","remove","add_aac","languages","code","componentDidMount","item"],"mappings":"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","file":"static/js/17.62c932aa.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { CheckboxInput, TextLine,TextInput } from './infra/Inputs.jsx';\nimport { DocButton, DeleteButton, InfoButton, ReloadButton, SearchButton, StartButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************* Main ************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n  this.node = (this.props.node) ? this.props.node : this.context.settings.node;\n }\n\n componentDidMount(){\n  this.reloadList()\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.node = (this.props.node) ? this.props.node : this.context.settings.node;\n }\n\n reloadList = () => post_call('api/multimedia/list', {}, {'X-Route':this.node}).then(result => this.setState(result));\n\n deleteList = (obj) => (window.confirm('Delete file '+obj.file+'?') && post_call('api/multimedia/delete',obj, {'X-Route':this.node}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (!(row.path === obj.path && row.file === obj.file)))});\n   this.changeContent(null);\n  }}))\n\n listItem = (row,idx) => [row.file,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Title key={'multimedia_title_'+idx} path={row.path} file={row.file} node={this.node} />)} title='Title info' />\n   <SearchButton key='lookup' onClick={() => this.changeContent(<Lookup key={'multimedia_lookup_'+idx} path={row.path} file={row.file} node={this.node} />)} title='Lookup info' />\n   <DocButton key='subs' onClick={() => this.changeContent(<Subtitles key={'multimedia_subs_'+idx} path={row.path} file={row.file} node={this.node} />)} title='Subtitles' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row)} title='Delete file' />\n  </>]\n\n render(){\n  if(this.state.data)\n   return <>\n    <ContentList key='cl' header='Media files' thead={['File','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='reload' onClick={() => this.reloadList()} />\n     <DeleteButton key='cleanup' onClick={() => (window.confirm('Really clean up files?') && this.changeContent(<Cleanup key='multimedia_cleanup' node={this.node} />))} title='Cleanup multimedia directory' />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  else\n   return <Spinner />\n }\n}\nMain.contextType = RimsContext;\n\n// ************* Title ************\n//\nclass Title extends Component {\n constructor(props){\n  super(props)\n  this.state = {thread:true,wait:null}\n }\n\n componentDidMount(){\n  post_call('api/multimedia/check_title',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n threadChange = (e) => this.setState({[e.target.name]:e.target.checked});\n\n updateInfo = () => post_call('api/multimedia/check_title',{op:'update', ...this.state.data}, {'X-Route':this.props.node}).then(result => this.setState(result))\n\n transferFile = () => {\n  if (window.confirm('Transfer file to repository?')){\n   if(this.state.thread)\n    post_call('api/system/worker',{module:'multimedia',function:'transfer',output:true,args:{path:this.props.path,file:this.props.file}}, {'X-Route':this.props.node}).then(result => this.setState({op:'transfer',result:result}));\n   else {\n    this.setState({wait:<Spinner />})\n    post_call('api/multimedia/transfer',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState({op:'transfer',result:result,wait:null}));\n   }\n  }\n }\n\n processFile = () => {\n  if (window.confirm('Process file?')){\n   if(this.state.thread)\n    post_call('api/system/worker',{module:'multimedia',function:'process',output:true,args:{path:this.props.path,file:this.props.file,...this.state.data}}, {'X-Route':this.props.node}).then(result => this.setState({op:'process',result:result}));\n   else {\n    this.setState({wait:<Spinner />})\n    post_call('api/multimedia/process',{path:this.props.path,file:this.props.file,...this.state.data}, {'X-Route':this.props.node}).then(result => this.setState({op:'process',result:result,wait:null}));\n   }\n  }\n }\n\n render(){\n  if (this.state.op) {\n   if(this.state.thread || this.state.op === 'transfer')\n    return <InfoArticle key='mm_trans_article' header={(this.state.thread) ? 'Task activation' : 'Transfer'}>\n     <TextLine key='mm_trans_res' id='result' text={JSON.stringify(this.state.result)} />\n    </InfoArticle>\n   else {\n    if(this.state.result.status === 'NOT_OK')\n     return <CodeArticle key='mm_error_code' header='Process Error'>{JSON.stringify(this.state.result.info,null,2)}</CodeArticle>\n    else {\n     const data = this.state.result.data;\n     return <InfoArticle key='mm_proc_article' header='Process success'>\n      Elapsed time for processing file: {this.state.result.seconds} seconds\n      <InfoColumns key='mm_proc_ic'>\n       <TextLine key='mm_proc_prefix' id='prefix' text={data.prefix} />\n       <TextLine key='mm_proc_suffix' id='suffix' text={data.suffix} />\n       <TextLine key='mm_proc_dest' id='dest' label='Destination' text={JSON.stringify(data.dest)} />\n       <TextLine key='mm_proc_rename' id='rename' text={JSON.stringify(data.rename)} />\n       <TextLine key='mm_proc_aac' id='aac' label='Add AAC' text={JSON.stringify(data.aac_probe)} />\n       <TextLine key='mm_proc_chg_aac' id='chg_aac' label='Param AAC' text={data.changes.aac} />\n       <TextLine key='mm_proc_chg_aud' id='chg_aud' label='Param Audio' text={data.changes.audio} />\n       <TextLine key='mm_proc_chg_sub' id='chg_sub' label='Param Subtitles' text={data.changes.subtitle} />\n       <TextLine key='mm_proc_chg_srt' id='chg_srt' label='Param SRT files' text={data.changes.srt} />\n      </InfoColumns>\n     </InfoArticle>\n    }\n   }\n  } else if(this.state.data){\n   const data = this.state.data\n   return <InfoArticle key='mm_tit_article' header='Title'>\n    <InfoColumns key='mm_tit_ic'>\n     <TextLine key='mm_tit_type' id='type' text={data.type} />\n     <TextLine key='mm_tit_title' id='title' text={data.title} />\n     <TextLine key='mm_tit_path' id='path' text={data.path} />\n     <TextInput key='mm_tit_name' id='name' value={data.name} onChange={this.onChange} />\n     {data.epside && <TextInput key='mm_tit_eposide' id='episode' value={data.episode} onChange={this.onChange} />}\n     <TextInput key='mm_tit_info' id='info' value={data.info} onChange={this.onChange} />\n     <CheckboxInput key='mm_tit_thread' id='thread' label='Thread' value={this.state.thread} onChange={this.threadChange} title='Thread or direct execution' />\n    </InfoColumns>\n    <StartButton key='mm_tit_btn_proc' onClick={() => this.processFile()} title='Process file' />\n    <SyncButton key='mm_tit_btn_trans' onClick={() => this.transferFile()} title='Transfer file' />\n    {this.state.wait}\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Lookup ************\n//\nclass Lookup extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/multimedia/check_content',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n render(){\n  if (this.state.data) {\n   const data = this.state.data\n   return <InfoArticle key='mm_lu_article' header='Lookup'>\n    <InfoColumns key='mm_lu_ic'>\n     <TextLine key='mm_lu_file' id='file' label='File' text={this.props.file} />\n     <TextLine key='mm_lu_status' id='status' label='Result' text={this.state.status} />\n     <TextLine key='mm_lu_error' id='error' label='Error' text={this.state.info} />\n     <TextLine key='mm_lu_v_def' id='video_default' label='Video default' text={JSON.stringify(!data.video.set_default)} title='Video stream has default language' />\n     <TextLine key='mm_lu_v_lang' id='video_lang' label='Video language' text={data.video.language} title='Language set in video stream information' />\n     <TextLine key='mm_lu_a_add' id='audio_add' label='Audio keep' text={data.audio.add.join()} />\n     <TextLine key='mm_lu_a_rem' id='audio_rem' label='Audio remove' text={data.audio.remove.join()} />\n     <TextLine key='mm_lu_a_aac' id='audio_aac' label='Add AAC' text={JSON.stringify(data.audio.add_aac)} />\n     <TextLine key='mm_lu_s_add' id='sub_add' label='Subtitle keep' text={data.subtitle.add.join()} />\n     <TextLine key='mm_lu_s_rem' id='sub_rem' label='Subtitle remove' text={data.subtitle.remove.join()} />\n     <TextLine key='mm_lu_a_lang' id='sub_lang' label='Subtitle languages' text={data.subtitle.languages.join()} />\n    </InfoColumns>\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Subtitles ************\n//\nclass Subtitles extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/multimedia/check_srt',{path:this.props.path,file:this.props.file}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n render(){\n  if (this.state.data) {\n   return <InfoArticle key='mm_sub_art' header='Extra subtitles'>\n    <InfoColumns key='mm_sub_ic'>\n     <TextLine key='mm_sub_path' id='path' text={this.props.path} />\n     <TextLine key='mm_sub_item' id='item' text={this.props.file} />\n     <TextLine key='mm_sub_name' id='name' text={this.state.data.name} />\n     <TextLine key='mm_sub_code' id='code' text={this.state.data.code} />\n     <TextLine key='mm_sub_file' id='file' text={this.state.data.file} />\n    </InfoColumns>\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Cleanup ************\n//\nclass Cleanup extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.componentDidMount();\n }\n\n componentDidMount(){\n  post_call('api/multimedia/cleanup', {}, {'X-Route':this.props.node}).then(result => this.setState(result));\n }\n\n render(){\n   return (this.state.data) ? <ContentReport key='mm_clean_cr' header='delete' thead={['Type','Path','Item','Status','Info']} trows={this.state.data} listItem={(row) => [row.type,row.path,row.item,row.status,row.info]} /> : <Spinner />\n }\n}\n"],"sourceRoot":""}
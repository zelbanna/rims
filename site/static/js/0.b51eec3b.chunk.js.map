{"version":3,"sources":["device.jsx","fdb.jsx"],"names":["Main","props","compileNavItems","context","loadNavigation","title","onClick","changeContent","List","rack_id","state","Search","changeSelf","New","ip","TypeList","ModelList","Logs","count","OUISearch","OUIList","changeImport","pdu","length","map","row","idx","hostname","device_id","id","type","console","name","style","float","elem","setState","content","undefined","this","post_call","then","result","Object","assign","prevProps","module","func","args","lib","Elem","Component","contextType","RimsContext","onChange","e","target","value","field","search","header","label","placeholder","sortList","method","data","sort","a","b","localeCompare","Number","split","num","slice","join","listItem","text","Info","ip_state","if_state","deleteList","window","confirm","deleted","filter","hasOwnProperty","searchfield","toLowerCase","dev_list","includes","thead","highlight","trows","componentDidMount","Discover","searchFire","s","mountUpdate","fun","updateInfo","op","reload","rack","vm","lookupInfo","changeIpam","AddressEvents","changeInterfaces","changeVisualize","Edit","found","navconf","extra","class","change_self","has_ip","function_strings","functions","types","find","tp","parseInt","type_id","mac","classes","model","version","serial","rack_name","rack_unit","rack_size","console_name","console_port","pems","pem","pdu_name","pdu_unit","host","device_uuid","maxWidth","server_uuid","clear","comment","url","Control","Template","changeMain","type_base","function","type_name","open","username","ipam_id","console_url","JSON","stringify","update","ManagementInfo","RackInfo","PemList","StatisticsList","base","replace","Function","domains","a_domain_id","interfaces","snmp","oid","oui","status","racked","racks","console_id","consoles","pdu_id","pdu_slot","PemInfo","lookup","empty","pdus","pdu_info","slots","i","push","loadList","inserts","lookupStats","measurement","tags","StatisticsInfo","Statistics","updateItems","range","pos","forEach","item","index","dataset","vis","DataSet","params","x","y","group","graph","setItems","fit","rangeChange","gotoNow","today","Date","moveTo","getFullYear","getMonth","getDate","getHours","getMinutes","canvas","React","createRef","groups","Graph2d","current","locale","width","height","zoomMin","zoomMax","clickToUse","drawPoints","interpolation","legend","dataAxis","alignZeros","icons","left","className","styles","graphs","ref","operationDev","msg","wait","device_op","operationPem","pem_op","pem_id","lookupState","log","htmlFor","clearLog","time","message","info","addDevice","searchIP","ipam_network_id","network_id","networks","if_domain_id","netasc","description","runDiscovery","Report","icon","syncModels","ModelInfo","defaults_file","image_file","parameters","ouiSearch","company","substring","head","keys","hd","Device","changeInterface","interface_id","vlan","snmp_index","toUpperCase","syncFDB","changeSearch","device"],"mappings":"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","file":"static/js/0.b51eec3b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { RimsContext, Flex, Spinner, StateLeds, Article, CodeArticle, InfoArticle, InfoColumns, LineArticle, Result, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.jsx'\nimport { TextAreaInput, TextInput, TextLine, StateLine, SelectInput, UrlInput, SearchField, SearchInput } from './infra/Inputs.jsx';\nimport { AddButton, BackButton, CheckButton, ConfigureButton, DeleteButton, DevicesButton, GoButton, HeaderButton, HealthButton, HrefButton, InfoButton, ItemsButton, LogButton, NetworkButton, ReloadButton, RevertButton, SaveButton, SearchButton, ShutdownButton, StartButton, SyncButton, TermButton, UiButton } from './infra/Buttons.jsx';\n\nimport { List as FdbList, Device as FdbDevice, Search as FdbSearch } from './fdb.jsx';\nimport styles from './infra/ui.module.css';\n\n\n// **************** Main ****************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {pdu:[], console:[], name:'N/A', rack_id:undefined}\n }\n\n componentDidMount(){\n  if (this.props.rack_id)\n   post_call('api/rack/inventory',{id:this.props.rack_id}).then(result => {\n    Object.assign(this.state,{rack_id:this.props.rack_id, ...result})\n    this.compileNavItems();\n   })\n  else\n   this.compileNavItems();\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => {\n  this.context.loadNavigation(<NavBar key='device_navbar'>\n   <NavDropDown key='dev_nav_devs' title='Devices'>\n    <NavDropButton key='dev_nav_list' title='List' onClick={() => this.changeContent(<List key='dl' rack_id={this.state.rack_id} />)} />\n    <NavDropButton key='dev_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='ds' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_new' title='New' onClick={() => this.changeContent(<New key='dn' ip='0.0.0.0' />)} />\n    <NavDropButton key='dev_nav_types' title='Types' onClick={() => this.changeContent(<TypeList key='dtl' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_model' title='Models' onClick={() => this.changeContent(<ModelList key='dml' />)} />\n    <NavDropButton key='dev_nav_logs' title='Logs' onClick={() => this.changeContent(<Logs key='dlogs' count='80'/>)} />\n   </NavDropDown>\n   <NavDropDown key='dev_nav_tools' title='Tools'>\n    <NavDropButton key='dev_nav_fdbx' title='FDB Search' onClick={() => this.changeContent(<FdbSearch key='fdb_search' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_fdbs' title='FDB List' onClick={() => this.changeContent(<FdbList key='fdb_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_ouis' title='OUI Search' onClick={() => this.changeContent(<OUISearch key='oui_search' />)} />\n    <NavDropButton key='dev_nav_ouil' title='OUI List' onClick={() => this.changeContent(<OUIList key='oui_list' />)} />\n    <NavDropButton key='dev_nav_resv' title='Reservations' onClick={() => this.changeImport('reservation','List',{})} />\n   </NavDropDown>\n   {(this.state.pdu.length > 0) && <NavDropDown key='dev_nav_pdus' title='PDUs'>{this.state.pdu.map((row,idx) => <NavDropButton key={'dev_nav_pdu_' + idx} title={row.hostname} onClick={() => this.changeImport('pdu','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(this.state.console.length > 0) && <NavDropDown key='dev_nav_consoles' title='Consoles'>{this.state.console.map((row,idx) => <NavDropButton key={'dev_nav_console_' + idx} title={row.hostname} onClick={() => this.changeImport('console','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(this.state.rack_id) && <NavButton key='dev_nav_rack' title={this.state.name} onClick={() => this.changeImport('rack','Layout',{id:this.state.rack_id})} />}\n   <NavButton key='dev_nav_maps' title='Maps' onClick={() => this.changeImport('visualize','List',{})} style={{float:'right'}}/>\n   <NavDropDown key='dev_nav_ipam' title='IPAM' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_nets' title='Networks' onClick={() => this.changeImport('ipam','NetworkList',{})} />\n    <NavDropButton key='dev_nav_isrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'DHCP'})} />\n   </NavDropDown>\n   <NavDropDown key='dev_nav_dns' title='DNS' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_doms' title='Domains' onClick={() => this.changeImport('dns','DomainList',{})} />\n    <NavDropButton key='dev_nav_dsrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'NAMESERVER'})} />\n    <NavDropButton key='dev_nav_recs' title='Recursors' onClick={() => this.changeImport('server','List',{type:'RECURSOR'})} />\n   </NavDropDown>\n  </NavBar>)\n }\n\n changeImport(module,func,args){\n  import('./'+module+'.jsx').then(lib => {\n   var Elem = lib[func];\n   this.setState({content:<Elem key={module+'_'+func} {...args} />})\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <>{this.state.content}</>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Search **************\n//\nclass Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'ip',search:''}\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='ds_art' header='Device Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <optgroup label='Group'>\n     <option value='hostname'>Hostname</option>\n     <option value='type'>Type</option>\n    </optgroup>\n    <optgroup label='Unique'>\n     <option value='id'>ID</option>\n     <option value='ip'>IP</option>\n     <option value='mac'>MAC</option>\n     <option value='interface_id'>Interface ID</option>\n    </optgroup>\n    </SelectInput>\n    <SearchInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n    <SearchButton key='ds_btn_search' onClick={() => this.props.changeSelf(<List key='device_list' {...this.state} />)} title='Search devices' />\n   </LineArticle>\n }\n}\n// ************** List **************\n//\n// Uses mountUpdate withing ContentDate to do a late binding of changeContent to avoid re-render of entire list for each changeContent\n//\nclass List extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, sort:(props.hasOwnProperty('sort')) ? props.sort : 'hostname', rack_id:this.props.rack_id, searchfield:'', field:this.props.field ? this.props.field:'id', search:this.props.search ? this.props.search:''}\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n componentDidMount(){\n  post_call('api/device/list', {sort:this.state.sort, rack_id:this.state.rack_id, field:this.state.field, search:this.state.search}).then(result => this.setState(result));\n }\n\n sortList = (method) => {\n  if (method === 'hostname')\n   this.state.data.sort((a,b) => a.hostname.localeCompare(b.hostname));\n  else\n   this.state.data.sort((a,b) => {\n    if (a.ip && b.ip){\n     const num1 = Number(a.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     const num2 = Number(b.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     return num1-num2;\n   } else if (a.ip)\n    return 1;\n   else\n    return a.hostname.localeCompare(b.hostname)\n   });\n  this.setState({sort:method});\n }\n\n listItem = (row) => [row.ip,<HrefButton key={'info_'+row.id} text={row.hostname} onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />,<>\n  <StateLeds key='state' state={(row.ip_state) ? row.ip_state : row.if_state} />\n  <InfoButton key='info' onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete device' />\n </>]\n\n deleteList = (id) => (window.confirm('Really delete device '+id+'?') && post_call('api/device/delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  if (this.state.data){\n   const data = this.state.data\n   const searchfield = this.state.searchfield.toLowerCase();\n   const dev_list = (searchfield.length === 0) ? data : data.filter(row => (row.hostname.toLowerCase().includes(searchfield) || (row.ip && row.ip.includes(searchfield))));\n   const thead = [<HeaderButton key='sort_ip' text='IP' highlight={(this.state.sort === 'ip')} onClick={() => this.sortList('ip')} />,<HeaderButton key='sort_hostname' text='Hostname' highlight={(this.state.sort === 'hostname')} onClick={() => this.sortList('hostname')} />,''];\n   return <>\n    <ContentList key='mcl' header='Device List' thead={thead} listItem={this.listItem} trows={dev_list}>\n     <ItemsButton key='items' onClick={() => { Object.assign(this.state,{rack_id:undefined,field:'ip',search:''}); this.componentDidMount(); }} title='List all items' />\n     <AddButton key='add' onClick={() => this.changeContent(<New key='dn_new' ip='0.0.0.0' />)} title='Add device' />\n     <DevicesButton key='devices' onClick={() => this.changeContent(<Discover key='device_discover' />) } title='Discover new devices' />\n     <br />\n     <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n      <optgroup label='Group'>\n       <option value='hostname'>Hostname</option>\n       <option value='type'>Type</option>\n      </optgroup>\n      <optgroup label='Unique'>\n       <option value='id'>ID</option>\n       <option value='ip'>IP</option>\n       <option value='mac'>MAC</option>\n       <option value='interface_id'>Interface ID</option>\n      </optgroup>\n     </SelectInput>\n     <SearchInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n     <SearchButton key='reload' onClick={() => this.componentDidMount()} title='Search specific device' />\n     <SearchField key='filter' searchFire={(s) => this.setState({searchfield:s})} placeholder='Filter devices'/>\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null, navconf:false}\n }\n\n componentDidMount(){\n  post_call('api/device/info',{id:this.props.id, extra:['types','classes']}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n updateInfo = () => post_call('api/device/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n reload = () => {\n  this.setState({rack:undefined,vm:undefined});\n  post_call('api/device/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n lookupInfo = () => {\n  this.setState({content:<Spinner />,result:''})\n  post_call('api/device/info',{id:this.props.id, op:'lookup'}).then(result => this.setState({...result,content:null}))\n }\n\n changeIpam = (id) => import('./ipam.jsx').then(lib => this.changeContent(<lib.AddressEvents key='address_events' id={id} changeSelf={this.changeContent} />))\n changeInterfaces = () => import('./interface.jsx').then(lib => this.changeContent(<lib.List key='interface_list' device_id={this.props.id} changeSelf={this.changeContent} />))\n changeVisualize = () => import('./visualize.jsx').then(lib => this.changeSelf(<lib.Edit key={'viz_id_' + this.props.id} type='device' changeSelf={this.changeSelf} id={this.props.id} />))\n\n render() {\n  if(this.state.data){\n   const data = this.state.data;\n   const extra = this.state.extra;\n   const vm = (data.class === 'vm' && this.state.vm) ? this.state.vm : false;\n   const rack = (this.state.rack && data.class !== 'vm') ? this.state.rack : false;\n   const change_self = (this.props.changeSelf);\n   const has_ip = (extra.ip);\n   const function_strings = (extra.functions.length >0) ? extra.functions.split(',') : [];\n   const type = this.state.types.find(tp => tp.id === parseInt(data.type_id));\n   return <>\n    <InfoArticle key='di_ia' header='Device'>\n     <InfoColumns key='ic_info' style={{float:'left'}}>\n      <TextLine key='hostname' id='hostname' text={data.hostname} />\n      <TextInput key='mac' id='mac' label='MAC' value={data.mac} title='System MAC' onChange={this.onChange} />\n      {has_ip && <TextLine key='ip' id='ip' label='Mgmt IP' text={extra.ip} />}\n      {has_ip && <StateLine key='state' id='state' state={extra.state} />}\n      <TextLine key='system_id' id='system_id' label='System ID' text={this.props.id} />\n     </InfoColumns>\n     <InfoColumns key='ic_extra' style={{float:'left'}}>\n      <SelectInput key='class' id='class' value={data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Type' value={data.type_id} onChange={this.onChange}>{this.state.types.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} extra={data.model} />\n      <TextLine key='version' id='version' text={data.version} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n     </InfoColumns>\n     <InfoColumns key='ic_rack' style={{float:'left'}}>\n      {rack && <TextLine key='pos' id='rack_pos' label='Rack/Pos' text={`${rack.rack_name} (${rack.rack_unit})`} />}\n      {rack && <TextLine key='size' id='rack_size' label='Size (U)' text={rack.rack_size} />}\n      {rack && <TextLine key='con' id='rack_con' label='TS/Port' text={`${rack.console_name} (${rack.console_port})`} />}\n      {rack && this.state.pems.map(pem => <TextLine key={pem.id} id={'pem_'+pem.id} label={pem.name+' PDU'} text={`${pem.pdu_name} (${pem.pdu_unit})`} />)}\n     </InfoColumns>\n     <InfoColumns key='ic_vm' style={{float:'left'}}>\n      {vm && <TextLine key='name' id ='vm_name' label='VM Name' text={vm.name} />}\n      {vm && <TextLine key='host' id ='vm_host' label='VM Host' text={vm.host} />}\n      {vm && <TextLine key='uuid' id ='vm_uuid' label='VM UUID' text={vm.device_uuid} style={{maxWidth:170}} extra={vm.device_uuid} />}\n      {vm && <TextLine key='uuhost' id ='vm_uuhost' label='Host UUID' text={vm.server_uuid} style={{maxWidth:170}} extra={vm.server_uuid} />}\n     </InfoColumns>\n     <InfoColumns key='ic_text' style={{clear:'both'}}>\n      <TextInput key='comment' id='comment' value={data.comment} onChange={this.onChange} />\n      <UrlInput key='url' id='url' label='URL' value={data.url} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='reload' onClick={() => this.reload()} />\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n     <ConfigureButton key='edit' onClick={() => this.setState({navconf:!this.state.navconf})} title='Toggle config mode' />\n     <StartButton key='cont' onClick={() => this.changeContent(<Control key='device_control' id={this.props.id} />)} title='Device control' />\n     <CheckButton key='conf' onClick={() => this.changeContent(<Template key='device_configure' id={this.props.id} />)} title='Configuration template' />\n     {change_self && <NetworkButton key='netw' onClick={() => this.changeVisualize()} title='Connectivity map' />}\n     {has_ip && <SearchButton key='search' onClick={() => this.lookupInfo()} title='Information lookup' />}\n     {has_ip && <LogButton key='logs' onClick={() => this.changeContent(<Logs key='device_logs' id={this.props.id} />)} title='Logs' />}\n     {function_strings.includes('manage') && <GoButton key='manage' onClick={() => this.context.changeMain({module:this.state.extra.type_base,function:'Manage',args:{device_id:this.props.id, type:this.state.extra.type_name}})} title={'Manage ' + data.hostname} />}\n     {has_ip && <TermButton key='ssh' onClick={() => window.open(`ssh://${extra.username}@${extra.ip}`,'_self')} title='SSH connection' />}\n     {has_ip && <HealthButton key='health' onClick={() => this.changeIpam(this.state.extra.ipam_id)} title='IP health report' />}\n     {rack && rack.console_url && <TermButton key='console' onClick={() => window.open(rack.console_url,'_self')} title='Serial Connection' /> }\n     {data.url && <UiButton key='ui' onClick={() => window.open(data.url,'_blank')} title='Web UI' />}\n     <Result key='result' result={JSON.stringify(this.state.update)} />\n    </InfoArticle>\n    <NavBar key='device_navigation' id='di_navigation'>\n     {this.state.navconf && <NavButton key='management' title='Management' onClick={() => this.changeContent(<ManagementInfo key='device_configure' id={this.props.id} />)} />}\n     {this.state.navconf && ['infrastructure','out-of-band'].includes(data.class) && <NavButton key='rack' title='Rack' onClick={() => this.changeContent(<RackInfo key='device_rack_info' device_id={this.props.id} />)} />}\n     {this.state.navconf && ['device','infrastructure','out-of-band'].includes(data.class) && <NavButton key='pems' title='PEMs' onClick={() => this.changeContent(<PemList key='device_pem_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {!this.state.navconf && <NavButton key='interfaces' title='Interfaces' onClick={() => this.changeInterfaces()} />}\n     {!this.state.navconf && ['infrastructure','out-of-band','vm'].includes(data.class) && <NavButton key='stats' title='Statistics' onClick={() => this.changeContent(<StatisticsList key='statistics_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {!this.state.navconf && type.base === 'network' && has_ip && <NavButton key='fdb' title='FDB' onClick={() => this.changeContent(<FdbDevice key='fdb_device' id={this.props.id} ip={extra.ip} type={type.name} changeSelf={this.changeContent} />)} />}\n     {!this.state.navconf && function_strings.filter(fun => fun !== 'manage').map((op,idx) => <NavButton key={'nav_'+idx} title={op.replace('_',' ')} onClick={() => this.changeContent(<Function key={'dev_func_'+op} id={this.props.id} op={op} type={this.state.extra.type_name} />)} />)}\n    </NavBar>\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\nInfo.contextType = RimsContext;\n\n// ************* Configure *************\n//\nclass ManagementInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null}\n }\n\n componentDidMount(){\n  post_call('api/device/extended',{id:this.props.id, extra:['domains']}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/device/extended',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (this.state.data && this.state.domains)\n   return <InfoArticle key='d_conf_art' header='Management Configuration'>\n    <InfoColumns key='d_conf_ic'>\n     <TextInput key='d_conf_hostname' id='hostname' value={this.state.data.hostname} onChange={this.onChange} />\n     <SelectInput key='d_conf_a_domain_id' id='a_domain_id' label='Host Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='d_conf_ipam_id' id='ipam_id' label='Mgmt IP' value={this.state.data.ipam_id} onChange={this.onChange}>{this.state.interfaces.map((row,idx) => <option key={idx} value={row.ipam_id}>{`${row.ip} (${row.name})`}</option>)}</SelectInput>\n     <TextLine key='id' id='id' label='Local ID'  text={this.props.id} title='Database ID' />\n     <TextLine key='snmp' id='snmp' label='SNMP' text={this.state.data.snmp} />\n     <TextLine key='d_conf_oid' id='oid' label='Priv OID' text={this.state.extra.oid} />\n     <TextLine key='d_conf_oui' id='oui' label='System OUI' text={this.state.extra.oui} />\n    </InfoColumns>\n    <SaveButton key='d_conf_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_conf_result' result={this.state.status} />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// ************* RackInfo **************\n//\nclass RackInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/rack',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => post_call('api/device/rack',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   const racked = (this.state.data.rack_id && this.state.data.rack_id !== 'NULL');\n   return <InfoArticle key='d_rack_art' header='Rack'>\n    <InfoColumns key='d_rack_ic'>\n     <SelectInput key='d_rack_id' id='rack_id' label='Rack ID' value={this.state.data.rack_id} onChange={this.onChange}>{this.state.racks.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     {racked && <TextInput key='d_rack_size' id='rack_size' label='Size' value={this.state.data.rack_size} onChange={this.onChange} title='Size of device in U' />}\n     {racked && <TextInput key='d_rack_unit' id='rack_unit' label='Unit' value={this.state.data.rack_unit} onChange={this.onChange} title='First unit of placement' />}\n     {racked && <SelectInput key='d_rack_con_id' id='console_id' label='Console' value={this.state.data.console_id} onChange={this.onChange}>{this.state.consoles.map((row,idx) => <option key={idx} value={row.id}>{row.hostname}</option>)}</SelectInput>}\n     {racked && <TextInput key='d_rack_con_port' id='console_port' label='Console Port' value={this.state.data.console_port} onChange={this.onChange} />}\n    </InfoColumns>\n    <SaveButton key='d_rack_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* PEMs **************\n//\nclass PemList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/pem/list',{device_id:this.props.device_id,lookup:true}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete PEM?') && post_call('api/pem/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n listItem = (row) => [row.id,row.name,row.pdu_id,row.pdu_name,row.pdu_slot,row.pdu_unit,<>\n  <InfoButton key='info' onClick={() => this.changeContent(<PemInfo key={'pem_info_'+row.id} id={row.id} device_id={this.props.device_id} changeSelf={this.changeContent} />)} title='Edit PEM information' />\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id) } title='Delete PEM' />\n </>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='pems' header='PEMs' thead={['ID','Name','PDU ID','PDU Name','PDU Slot','PDU Unit','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='pems_btn_reload' onClick={() => this.componentDidMount()} />\n   <AddButton key='pems_btn_add' onClick={() => this.changeContent(<PemInfo key='pem_new' id='new' device_id={this.props.device_id} changeSelf={this.changeContent} />)} title='Add PEM' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n// ************* PemInfo **************\n//\nclass PemInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/pem/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n  post_call('api/pdu/list',{device_id:this.props.device_id, empty:true}).then(result => this.setState({pdus:result.data}))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => post_call('api/pem/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data && this.state.pdus){\n   const pdu_info = this.state.pdus.find(pdu => parseInt(pdu.device_id) === parseInt(this.state.data.pdu_id));\n   let slots = []\n   if (pdu_info){\n    for (let i = 0; i < pdu_info.slots; i++)\n     slots.push({id:i,name:pdu_info[`${i}_slot_name`]});\n   }\n   return <InfoArticle key='d_pem_art' header='PEM'>\n    <InfoColumns key='d_pem_ic'>\n     <TextInput key='d_pem_name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <SelectInput key='d_pem_pdu_id' id='pdu_id' label='PDU' value={this.state.data.pdu_id} onChange={this.onChange}>{this.state.pdus.map((row,idx) => <option key={idx} value={row.device_id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='d_pem_pdu_slot' id='pdu_slot' label='Slot' value={this.state.data.pdu_slot} onChange={this.onChange}>{slots.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <TextInput key='d_pem_pdu_unit' id='pdu_unit' label='Unit' value={this.state.data.pdu_unit} onChange={this.onChange} />\n    </InfoColumns>\n    <BackButton key='d_pem_btn_back' onClick={() => this.props.changeSelf(<PemList key='device_pem_list' device_id={this.props.device_id} changeSelf={this.props.changeSelf} />)} />\n    <SaveButton key='d_pem_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_pem_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : ''} />\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* StatisticsList **************\n//\nclass StatisticsList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.loadList()\n }\n\n loadList = (clear) => post_call('api/statistics/list',{device_id:this.props.device_id}).then(result => this.setState((clear)? {...result,result:'',inserts:''} : result));\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete statistics point?') && post_call('api/statistics/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n lookupStats = () => post_call('api/statistics/lookup',{device_id:this.props.device_id}).then(result => { this.setState(result); this.loadList()} )\n\n listItem = (row) => [row.id,row.measurement,row.tags,row.name,row.oid,<>\n  <InfoButton key='info' onClick={() => this.changeContent(<StatisticsInfo key={'statistics_info_'+row.id} id={row.id} device_id={this.props.device_id} />)} title='Edit data point' />\n  {row.measurement && row.name && <HealthButton key='stats' onClick={() => this.changeContent(<Statistics key={row.id} device_id={this.props.device_id} measurement={row.measurement} name={row.name} />)} title='Stats for data point' />}\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id) } title='Delete data point' />\n </>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='cr_stats' header='Device statistics' thead={['ID','Measurement','Tags','Name','OID','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n   <ReloadButton key='reload' onClick={() => this.loadList(true)} />\n   <SearchButton key='lookup' onClick={() => this.lookupStats()} title='Lookup device type stats' />\n   <AddButton key='add' onClick={() => this.changeContent(<StatisticsInfo key={'stats_new_'} id='new' device_id={this.props.device_id} />)} title='Add statistics' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n\n// *************** Statistics ****************\n//\nclass Statistics extends Component {\n constructor(props){\n  super(props)\n  this.state = {range:1}\n  this.canvas = React.createRef()\n  this.graph = null;\n  this.vis = null;\n }\n\n componentDidMount(){\n  import('vis-timeline/standalone/esm/vis-timeline-graph2d').then(vis => {\n   this.vis = vis;\n   const options = { locale:'en', width:'100%', height:'100%', zoomMin:60000, zoomMax:1209600000, clickToUse:true, drawPoints: false, interpolation:false, legend:true, dataAxis:{ alignZeros:false , icons: true, left:{ title:{ text:'value' } } } };\n   const groups = new this.vis.DataSet([{id:'data', content:this.props.name}]);\n   this.graph = new this.vis.Graph2d(this.canvas.current, [], groups, options);\n   this.updateItems(this.state.range);\n  })\n }\n\n updateItems = (range) => post_call('api/statistics/query_device',{device_id:this.props.device_id, measurement:this.props.measurement, name:this.props.name, range:range}).then(result => {\n  if (result.status === 'OK') {\n   const pos = {};\n   result.header.forEach((item,index) => pos[item] = index);\n   const dataset = new this.vis.DataSet(result.data.map(params => ({ x:params[pos['_time']], y:params[pos['_value']], group:'data' })));\n   this.graph.setItems(dataset);\n   this.graph.fit();\n  }\n });\n\n rangeChange = (e) => {\n  this.setState({[e.target.name]:e.target.value})\n  this.updateItems(e.target.value);\n }\n\n gotoNow = () => {\n  const today = new Date()\n  this.graph.moveTo(today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()+' '+today.getHours()+':'+today.getMinutes());\n }\n\n render(){\n  return <Article key='ds_art' header='Statistics'>\n   <ReloadButton key='reload' onClick={() => this.updateItems(this.state.range)} title='Reload' />\n   <RevertButton key='reset' onClick={() => this.gotoNow()} title='Go to now' />\n   <br />\n   <TextLine key='name' id='name' label='Device Data Point' text={this.props.name} />\n   <br />\n   <SelectInput key='range' id='range' label='Time range' value={this.state.range} onChange={this.rangeChange}>\n    <option value='1'>1h</option>\n    <option value='4'>4h</option>\n    <option value='8'>8h</option>\n    <option value='24'>24h</option>\n   </SelectInput>\n   <div className={styles.graphs} ref={this.canvas} />\n  </Article>\n }\n}\n\n// ************* PemInfo **************\n//\nclass StatisticsInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/statistics/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => post_call('api/statistics/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   return <InfoArticle key='d_stat_art' header='Data point'>\n    <InfoColumns key='d_stat_ic'>\n     <TextInput key='d_stat_measurement' id='measurement' value={this.state.data.measurement} onChange={this.onChange} title='Group, or measurement, that the data point belongs to' />\n     <TextInput key='d_stat_tags' id='tags' value={this.state.data.tags} onChange={this.onChange} title='Tags are comma separated values that extend TSDB grouping' />\n     <TextInput key='d_stat_name' id='name' value={this.state.data.name} onChange={this.onChange} title='Data point name' />\n     <TextInput key='d_stat_oid' id='oid' value={this.state.data.oid} onChange={this.onChange} />\n    </InfoColumns>\n    <SaveButton key='d_stat_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_stat_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : JSON.stringify(this.state.update)} />\n   </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Control **************\n//\nclass Control extends Component {\n constructor(props){\n  super(props)\n  this.state = {pems:[]}\n }\n\n componentDidMount(){\n  post_call('api/device/control',{id:this.props.id}).then(result => this.setState(result));\n }\n\n operationDev = (op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   post_call('api/device/control',{id:this.props.id, device_op:op}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n operationPem = (id,op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   post_call('api/device/control',{id:this.props.id, pem_op:op, pem_id:id}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n lookupState = (id) => console.log('State lookup TODO');\n\n render() {\n  return (\n   <InfoArticle key='ia_dc' header='Device Control'>\n    <InfoColumns key='ic'>\n     <label htmlFor='reboot'>Reboot:</label><ReloadButton id='reboot' key='reboot' onClick={() => this.operationDev('reboot','Really reboot?')} title='Restart device' />\n     <label htmlFor='shutdown'>Shutdown:</label><ShutdownButton id='shutdown' key='shutdown' onClick={() => this.operationDev('shutdown','Really shutdown?')} title='Shutdown' />\n     {this.state.pems.map(pem => {\n      if(pem.state === 'off')\n       return <Fragment key={pem.id}><label htmlFor={pem.id}>{pem.name}:</label><StartButton key={'dc_btn_start_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'on','Power on PEM?')} title='Power ON' /></Fragment>\n      else if (pem.state === 'on')\n       return <Fragment key={pem.id}><label htmlFor={pem.id}>{pem.name}:</label><ShutdownButton key={'dc_btn_stop_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'off','Power off PEM?')} title='Power OFF' /></Fragment>\n      else\n       return <Fragment key={pem.id}><label htmlFor={pem.id}>{pem.name}:</label><SearchButton key={'dc_btn_lookup_'+pem.id} id={pem.id} onClick={() => this.lookupState(pem.id)} title='Lookup State' /></Fragment>\n     })}\n    </InfoColumns>\n    <Result key='result' result={JSON.stringify(this.state.result)} />\n    {this.state.wait}\n   </InfoArticle>)\n }\n}\n\n// ************** Logs **************\n//\nexport class Logs extends Component {\n componentDidMount(){\n  post_call('api/device/log_get',{id:this.props.id, count:this.props.count}).then(result => this.setState(result));\n }\n\n clearLog = () => post_call('api/device/log_clear',{id:this.props.id}).then(result => (result.deleted && this.setState({data:[]})));\n\n render() {\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_log_cr' header='Logs' thead={['Time','Message']} trows={this.state.data} listItem={(row) => [row.time,row.message]}>\n   <DeleteButton key='devlog_btn_delete' onClick={() => this.clearLog()} title='Clear device logs' />\n  </ContentReport>\n }\n}\n\n// ******** Template *********\n//\nclass Template extends Component {\n componentDidMount(){\n  post_call('api/device/configuration_template',{id:this.props.id}).then(result => this.setState(result));\n }\n\n render() {\n  return (!this.state) ? <Spinner /> : <CodeArticle key='dtemp_art'>{(this.state.status === 'OK') ? this.state.data.join('\\n') : this.state.info}</CodeArticle>\n }\n}\n\n// ************** New **************\n//\nexport class New extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{ip:this.props.ip,mac:'00:00:00:00:00:00',class:'device',ipam_network_id:this.props.ipam_network_id,hostname:''}, found:true}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n componentDidMount(){\n  post_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n  post_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  post_call('api/device/class_list').then(result => this.setState({classes:result.data}))\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.setState({data:{ip:this.props.ip,mac:'00:00:00:00:00:00',class:'device',ipam_network_id:this.props.ipam_network_id,hostname:''}})\n }\n\n addDevice = () => {\n  if (this.state.data.hostname)\n   post_call('api/device/new',this.state.data).then(result => this.setState({result:JSON.stringify(result)}))\n }\n\n searchIP = () => {\n  if (this.state.data.ipam_network_id)\n   post_call('api/ipam/address_find',{network_id:this.state.data.ipam_network_id}).then(result => this.setState({data:{...this.state.data, ip:result.ip}}))\n }\n\n render() {\n  if (!this.state.domains || !this.state.classes || !this.state.networks)\n   return <Spinner />\n  else\n   return (\n    <InfoArticle key='dn_art' header='Device Add'>\n     <InfoColumns key='dn_content'>\n      <TextInput key='dn_hostname' id='hostname' value={this.state.data.hostname} placeholder='Device hostname' onChange={this.onChange} />\n      <SelectInput key='dn_class' id='class' label='Device Class' value={this.state.data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='dn_a_domain_id' id='a_domain_id' label='Host Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <SelectInput key='dn_if_domain_id' id='if_domain_id' label='Interface Domain' value={this.state.data.if_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <SelectInput key='dn_ipam_network_id' id='ipam_network_id' label='Interface Network' value={this.state.data.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n      <TextInput key='dn_ip' id='ip' label='IP' value={this.state.data.ip} onChange={this.onChange} />\n      <TextInput key='dn_mac' id='mac' label='MAC' value={this.state.data.mac} onChange={this.onChange} />\n     </InfoColumns>\n     <StartButton key='dn_btn_start' onClick={() => this.addDevice()} title='Add device' />\n     <SearchButton key='dn_btn_search' onClick={() => this.searchIP()} title='Find available IP' />\n     <Result key='dn_result' result={this.state.result} />\n    </InfoArticle>\n   )\n }\n}\n\n// ************** Discover **************\n//\nclass Discover extends Component {\n constructor(props){\n  super(props)\n  this.state = {ipam_network_id:undefined,a_domain_id:undefined,content:null}\n }\n\n componentDidMount(){\n  post_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  post_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n changeContent = (elem) => this.setState({content:elem})\n\n runDiscovery(){\n  this.setState({content:<Spinner />})\n  post_call('api/device/discover',{network_id:this.state.ipam_network_id, a_domain_id:this.state.a_domain_id,if_domain_id:this.state.if_domain_id}).then(result => this.setState({content:<CodeArticle key='dd_result'>{JSON.stringify(result,null,2)}</CodeArticle>}))\n }\n\n render() {\n  if (this.state.networks && this.state.domains){\n   return <>\n     <InfoArticle key='ia_dd' header='Device Discovery'>\n      <InfoColumns key='ic'>\n       <SelectInput key='ipam_network_id' id='ipam_network_id' label='Network' value={this.state.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n       <SelectInput key='a_domain_id' id='a_domain_id' label='Host Domain' value={this.state.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n       <SelectInput key='if_domain_id' id='if_domain_id' label='Interface Domain' value={this.state.if_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      </InfoColumns>\n      <StartButton key='start' onClick={() => this.runDiscovery()} title='Start discovery' />\n     </InfoArticle>\n     <NavBar key='dd_navigation' id='dd_navigation' />\n     {this.state.content}\n    </>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n componentDidMount(){\n  post_call('api/device/list', { extra:['system','mac','type','oui','class']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.hostname,row.class,row.ip,row.mac,row.oui,row.type_name,row.oid,row.serial,<StateLeds key={'dr_'+row.id} state={row.state} />]\n\n render(){\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_cr' header='Devices' thead={['ID','Hostname','Class','IP','MAC','OUI','Type','OID','Serial','State']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Type List **************\n//\nclass TypeList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/type_list').then(result => this.setState(result))\n }\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n listItem = (row) => [row.base,<HrefButton key={'tl_btn_' + row.name} text={row.name} onClick={() => this.changeSelf(<List key='device_list' field='type' search={row.name} />)} />,row.icon]\n\n render(){\n  return (this.state.data) ? <>\n   <ContentList key='cl' header='Device Types' thead={['Class','Name','Icon']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </> : <Spinner />\n }\n}\n\n// ************** Model List **************\n//\nclass ModelList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/device/model_list').then(result => this.setState({...result,result:'OK'}))\n }\n\n syncModels = () => post_call('api/device/model_list',{op:'sync'}).then(result => this.setState(result))\n\n listItem = (row) => [row.id,row.name,row.type,<>\n  <ConfigureButton key='info' onClick={() => this.changeContent(<ModelInfo key={'model_info_'+row.id} id={row.id} />)} title='Edit model information' />\n  <DeleteButton key='del' onClick={() => this.deleteList(row.id) } title='Delete model' />\n </>]\n\n deleteList = (id) => (window.confirm('Really delete model?') && post_call('api/device/model_delete', {id:id}).then(result => {\n  if (result.deleted){\n   this.setState({data:this.state.data.filter(row => (row.id !== id))});\n   this.changeContent(null);\n  }}))\n\n render(){\n  return (this.state.data) ? <>\n   <ContentList key='cl' header='Device Models' thead={['ID','Model','Type','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='sync' onClick={() => this.syncModels() } title='Resync models' />\n   </ContentList>\n   <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n  </> : <Spinner />\n }\n}\n\n// ************** Model Info **************\n//\nexport class ModelInfo extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  post_call('api/device/model_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  post_call('api/device/model_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return <InfoArticle key='dm_art' header='Device Model'>\n    <InfoColumns key='dm_content'>\n     <TextLine key='dm_name' id='name' text={this.state.data.name} />\n     <TextLine key='dm_type' id='type' text={this.state.extra.type} />\n     <TextInput key='dm_defaults_file' id='defaults_file' label='Default File' value={this.state.data.defaults_file} onChange={this.onChange} />\n     <TextInput key='dm_image_file' id='image_file' label='Image  File' value={this.state.data.image_file} onChange={this.onChange} />\n    </InfoColumns>\n    <TextAreaInput key='dm_parameters'  id='parameters' onChange={this.onChange} value={this.state.data.parameters} />\n    <SaveButton key='dm_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </InfoArticle>\n  else\n   return <Spinner />\n }\n}\n\n// ************** OUI Search **************\n//\nclass OUISearch extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{oui:''},content:null}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n ouiSearch = () => {\n  post_call('api/master/oui_info',{oui:this.state.data.oui}).then(result => this.setState({content:<InfoArticle key='os_art'><InfoColumns key='os_cont'><label htmlFor='oui'>OUI:</label><span id='oui'>{result.data.oui}</span><label htmlFor='company'>Company:</label><span id='company'>{result.data.company}</span></InfoColumns></InfoArticle>}))\n }\n\n render() {\n  return <Flex key='flex'>\n   <LineArticle key='os_art'>\n    Type MAC address to find <TextInput key='oui' id='oui' onChange={this.onChange} value={this.state.data.oui} placeholder='00:00:00' />\n    <SearchButton key='os_btn_search' onClick={() => this.ouiSearch()} title='Search for OUI' />\n   </LineArticle>\n   {this.state.content}\n  </Flex>\n }\n}\n\n// ************** OUI List **************\n//\nclass OUIList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/oui_list').then(result => this.setState(result))\n }\n\n render(){\n   return (this.state.data) ? <ContentReport key='oui_list_cr' header='OUI' thead={['oui','company']} trows={this.state.data} listItem={(row)=> [`${row.oui.substring(0,2)}:${row.oui.substring(2,4)}:${row.oui.substring(4,6)}`,row.company]} /> : <Spinner />\n }\n}\n\n// ************** Function **************\n//\nclass Function extends Component {\n componentDidMount(){\n  post_call('api/device/function',{op:this.props.op, id:this.props.id, type:this.props.type}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state)\n   return <Spinner />\n  else if (this.state.status === 'OK'){\n   if(this.state.data.length > 0){\n    const head = Object.keys(this.state.data[0]);\n    return <ContentReport key='df_cr' thead={head} trows={this.state.data} listItem={(row) => head.map(hd => row[hd])} />\n   } else\n    return <InfoArticle key='df_art'>No Data</InfoArticle>\n  } else\n   return <CodeArticle key='df_art'>Error in devdata: {this.state.info}</CodeArticle>\n }\n}\n","import React, { Component } from 'react';\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, LineArticle, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { TextInput, SearchField, SelectInput } from './infra/Inputs.jsx';\nimport { HrefButton, InfoButton, NetworkButton, ReloadButton, SearchButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************** Search **************\n//\nexport class Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'mac',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return <LineArticle key='fs_art' header='FDB Search'>\n   <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n    <option value='mac'>MAC</option>\n    <option value='device_id'>Device ID</option>\n   </SelectInput>\n   <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n   <SearchButton key='fs_btn_search' onClick={() => this.changeContent(<List key='fdb_list' {...this.state} changeSelf={this.props.changeSelf} />)} title='Search FDB' />\n  </LineArticle>\n }\n}\n\n// *************** Device *****************\n//\nexport class Device extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:null, searchfield:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n componentDidMount(){\n  post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState(result))\n }\n\n syncFDB(){\n  this.setState({wait:<Spinner />})\n  post_call('api/fdb/sync',{id:this.props.id, ip:this.props.ip, type:this.props.type}).then(result => result.status === 'OK' && post_call('api/fdb/list',{field:\"device_id\",search:this.props.id, extra:['oui']}).then(result => this.setState({...result, wait:null})));\n }\n\n changeInterface = (interface_id) => import('./interface.jsx').then(lib => this.changeContent(<lib.Info key='interface_info' device_id={this.props.id} interface_id={interface_id} changeSelf={this.changeContent} />))\n\n listItem = (row,idx) => [row.vlan,row.snmp_index,<HrefButton key={'fd_intf_'+row.interface_id} text={row.name} onClick={() => this.changeInterface(row.interface_id)} />,row.mac,row.oui]\n\n render(){\n  if (this.state.data) {\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <ContentReport key='fd_cr' header='FDB' thead={['VLAN','SNMP','Interface','MAC','OUI']} trows={data} listItem={this.listItem}>\n    <ReloadButton key='fd_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='fd_btn_sync' onClick={() => this.syncFDB() } title='Resync FDB' />\n    <SearchField key='fd_search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' />\n    {this.state.wait}\n   </ContentReport>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** List *****************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/list',{search:this.props.search, field:this.props.field, extra:['device_id','hostname']}).then(result => this.setState(result))\n }\n\n changeSearch = (mac,idx) => this.changeContent(<Info key='fdb_info' mac={mac} />)\n\n changeVisualize = (device_id) => ('changeSelf' in this.props && import('./visualize.jsx').then(lib => this.changeContent(<lib.Edit key={'viz_id_' + device_id} type='device' id={device_id} />)));\n\n listItem = (row,idx) => [row.device_id,row.hostname,row.vlan,row.snmp_index,row.name,<HrefButton key={'intf_'+idx} text={row.mac} onClick={() => this.setState({searchfield:row.mac})} />,<>\n   <InfoButton key='info' onClick={() => this.changeSearch(row.mac,idx)} title='Find interface(s)' />\n   <NetworkButton key='map' onClick={() => this.changeVisualize(row.device_id)} />\n  </>]\n\n render(){\n  if (this.state.data){\n   const search = this.state.searchfield.toUpperCase();\n   const data = (search.length === 0) ? this.state.data : this.state.data.filter(row => row.mac.includes(search))\n   return <>\n    <ContentList key='cl' header='FDB' thead={['ID','Hostname','VLAN','SNMP','Interface','MAC','']} trows={data} listItem={this.listItem}>\n     <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n     <SearchField key='search' searchFire={(s) => this.setState({searchfield:s})} placeholder='Search MAC' text={this.state.searchfield} />\n    </ContentList>\n    <ContentData key='cda' mountUpdate={(fun) => this.changeContent = fun} />\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Info *****************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.componentDidMount()\n  }\n }\n\n componentDidMount(){\n  post_call('api/fdb/search',{mac:this.props.mac}).then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.device)\n   return <ContentReport key='fd_cr' header={`${this.state.device.hostname} (${this.state.device.id})`} thead={['ID','Interface','Description','OUI']} trows={this.state.interfaces} listItem={(row) => [row.interface_id,row.name,row.description,row.oui]} />\n  else if (this.state.oui)\n   return <LineArticle key='fd_oui_la' header='Search result'>OUI: {this.state.oui}</LineArticle>\n  else if (this.state.status)\n   return <LineArticle key='fd_oui_la' header='Search result'>Search result: {this.state.info}</LineArticle>\n  else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
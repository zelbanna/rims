{"version":3,"sources":["server.jsx"],"names":["List","props","listItem","row","node","service","type","key","onClick","changeContent","Info","id","title","deleteList","hasOwnProperty","ui","length","window","open","elem","setState","content","confirm","post_call","then","result","deleted","data","state","filter","this","prevProps","header","thead","trows","componentDidMount","Component","onChange","e","target","name","value","updateInfo","op","found","nodes","type_id","services","old","label","text","map","Operation","operation","wait","JSON","stringify"],"mappings":"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","file":"static/js/21.9d275d91.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { post_call } from './infra/Functions.js';\nimport { Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { SelectInput, TextLine, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, CheckButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SyncButton, SearchButton, UiButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   post_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.service,row.type,<>\n   <InfoButton key='info' onClick={() => this.changeContent(<Info key='server_info' id={row.id} />)} title='Service information' />\n   <DeleteButton key='del' onClick={() => this.deleteList(row.id)} title='Delete service' />\n   {row.hasOwnProperty('ui') && row.ui.length > 0 && <UiButton key='ui' onClick={() =>  window.open(row.ui,'_blank')} title='Server UI' />}\n  </>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete service?') && post_call('api/master/server_delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <>\n   <ContentList key='sl_cl' header='Servers' thead={['Node','Service','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='add' onClick={() => this.changeContent(<Info key='server_info' id='new' type={this.props.type} />)} title='Add service' />\n   </ContentList>\n   <ContentData key='sl_cd'>{this.state.content}</ContentData>\n  </>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true, content:null};\n }\n\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.componentDidMount()\n }\n\n componentDidMount(){\n  post_call('api/master/server_info',{id:this.props.id}).then(result => {\n   if (!result.data.node)\n    result.data.node = result.nodes[0];\n   if (!result.data.type_id)\n    result.data.type_id = result.services[0].id;\n   this.setState(result);\n   })\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => post_call('api/master/server_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='si_art_nf'>Server with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data){\n   const id = this.state.data.id;\n   const old = (id !== 'new');\n   return <>\n    <InfoArticle key='ia' header='Server'>\n     <InfoColumns key='ic'>\n      <TextLine key='server' id='server' label='ID' text={id} />\n      <SelectInput key='node' id='node' value={this.state.data.node} onChange={this.onChange}>{this.state.nodes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Service' value={this.state.data.type_id} onChange={this.onChange}>{this.state.services.map(row => <option key={row.id} value={row.id}>{`${row.service} (${row.type})`}</option>)}</SelectInput>\n      <UrlInput key='ui' id='ui' label='UI' value={this.state.data.ui} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='save' onClick={() => this.updateInfo()} title='Save' />\n     {old && <SyncButton key='sync' onClick={() => this.changeContent(<Operation key='srv_op_sync' id={id} operation='sync' />)} title='Sync service' />}\n     {old && <ReloadButton key='restart' onClick={() => this.changeContent(<Operation key='srv_op_rst'  id={id} operation='restart' />)} title='Restart service' />}\n     {old && <SearchButton key='status' onClick={() => this.changeContent(<Operation key='srv_op_stat' id={id} operation='status' />)} title='Service status' />}\n     {old && <CheckButton key='params' onClick={() => this.changeContent(<Operation key='srv_op_params' id={id} operation='parameters' />)} title='Service parameters' />}\n    </InfoArticle>\n    <NavBar key='server_navigation' id='server_navigation' />\n    {this.state.content}\n   </>\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component {\n constructor(props){\n  super(props)\n  this.state = {wait:true}\n }\n componentDidMount(){\n  post_call('api/master/server_operation',{op:this.props.operation,id:this.props.id}).then(result => this.setState({result:result, wait:false}))\n }\n\n componentDidUpdate(prevProps){\n  if (prevProps !== this.props){\n   this.setState({wait:true})\n   this.componentDidMount();\n  }\n }\n\n render(){\n  return (this.state.wait) ? <Spinner /> : <CodeArticle key='srv_operation'>{JSON.stringify(this.state.result,null,2)}</CodeArticle>\n }\n}\n"],"sourceRoot":""}
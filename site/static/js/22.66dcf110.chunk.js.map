{"version":3,"sources":["user.jsx"],"names":["List","props","listItem","row","id","alias","name","key","onClick","changeContent","Info","title","deleteList","elem","setState","content","window","confirm","post_call","then","result","deleted","data","state","filter","header","thead","trows","this","componentDidMount","rnd","Component","onChange","e","target","value","updateInfo","update","password_check","context","settings","changeTheme","theme","op","found","themes","text","placeholder","class","classes","map","label","email","contextType","RimsContext","User","style","justifyContent"],"mappings":"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","file":"static/js/22.66dcf110.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { post_call, rnd } from './infra/Functions.js';\nimport { RimsContext, Flex, Spinner, InfoArticle, InfoColumns, ContentList, ContentData, Result } from './infra/UI.jsx';\nimport { AddButton, DeleteButton, ConfigureButton, ReloadButton, SaveButton } from './infra/Buttons.jsx';\nimport { TextInput, TextLine, PasswordInput, SelectInput } from './infra/Inputs.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  post_call('api/master/user_list').then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.alias,row.name,<Fragment>\n   <ConfigureButton key={'ul_btn_info_'+row.id}  onClick={() => this.changeContent(<Info key={'user_info_'+row.id} id={row.id} />)} title='Edit user' />\n   <DeleteButton key={'ul_btn_del_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete user' />\n  </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete user?') && post_call('api/master/user_delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment>\n   <ContentList key='ul_cl' header='Users' thead={['ID','Alias','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='ul_btn_reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='ul_btn_add' onClick={() => this.changeContent(<Info key={'user_new_' + rnd()} id='new' />)} title='Add user' />\n   </ContentList>\n   <ContentData key='ul_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n componentDidMount(){\n  post_call('api/portal/theme_list').then(result => this.setState({themes:result.data}))\n  post_call('api/master/user_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n updateInfo = () => {\n  this.setState({update:false,password_check:''})\n  if(this.context.settings.id === this.state.data.id)\n   this.context.changeTheme(this.state.data.theme);\n  post_call('api/master/user_info',{op:'update', ...this.state.data},{'X-Log':'false'}).then(result => this.setState(result))\n }\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='ui_art'>User with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data && this.state.themes){\n   let result = (this.state.update) ? 'OK - updated' : '';\n   return <InfoArticle key='ui_art' header='User'>\n     <InfoColumns key='ui_content'>\n      {(this.context.settings.id === this.props.id) ?  <TextLine key='alias' id='alias' text={this.state.data.alias} /> : <TextInput key='alias' id='alias' value={this.state.data.alias} onChange={this.onChange} />}\n      <PasswordInput key='password' id='password' placeholder='******' onChange={this.onChange} />\n      {this.context.settings.class === 'admin' && <SelectInput key='class' id='class' value={this.state.data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>}\n      <TextInput key='email' id='email' label='E-Mail' value={this.state.data.email} onChange={this.onChange} />\n      <TextInput key='name' id='name' label='Full name' value={this.state.data.name} onChange={this.onChange} />\n      <SelectInput key='theme' id='theme' value={this.state.data.theme} onChange={this.onChange}>{this.state.themes.map(row => <option key={row} value={row}>{row}</option>)}</SelectInput>\n     </InfoColumns>\n     <SaveButton key='ui_btn_save' onClick={() => this.updateInfo()} title='Save' />\n     <Result key='ui_operation' result={result} />\n    </InfoArticle>\n  } else\n   return <Spinner />\n }\n}\nInfo.contextType = RimsContext;\n\n// ************** User **************\n//\nexport class User extends Component {\n render() {\n  return <Flex key='u_flex' style={{justifyContent:'space-evenly'}}><Info id={this.props.id} /></Flex>\n }\n}\n"],"sourceRoot":""}
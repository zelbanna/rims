{"version":3,"sources":["server.jsx"],"names":["List","props","listItem","row","node","service","type","key","id","onClick","changeContent","Info","title","deleteList","hasOwnProperty","ui","length","window","open","elem","setState","content","confirm","rest_call","then","result","deleted","data","state","filter","this","header","thead","trows","componentDidMount","rnd","Component","onChange","e","target","name","value","updateInfo","op","found","nodes","type_id","services","old","label","text","map","idx","Operation","operation","JSON","stringify"],"mappings":"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","file":"static/js/18.bf9c6580.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { rest_call, rnd } from './infra/Functions.js';\nimport { Spinner, CodeArticle, InfoArticle, InfoColumns, ContentList, ContentData } from './infra/UI.jsx';\nimport { NavBar } from './infra/Navigation.jsx';\nimport { SelectInput, TextLine, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, ItemsButton, ReloadButton, SaveButton, SyncButton, UiButton } from './infra/Buttons.jsx';\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/master/server_list',{type:this.props.type}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.service,row.type,<Fragment key='sl_buttons'>\n   <InfoButton key={'sl_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'server_info_'+row.id} id={row.id} />)} title='Service information' />\n   <DeleteButton key={'sl_btn_delete'+row.id} onClick={() => this.deleteList(row.id)} title='Delete service' />\n   {row.hasOwnProperty('ui') && row.ui.length > 0 && <UiButton key={'sl_btn_ui'+row.id} onClick={() =>  window.open(row.ui,'_blank')} title='Server UI' />}\n  </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete service?') && rest_call('api/master/server_delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment key='sl_fragment'>\n   <ContentList key='sl_cl' header='Servers' thead={['Node','Service','Type','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='sl_btn_reload' onClick={() => this.componentDidMount()} />\n    <AddButton key='sl_btn_add' onClick={() => this.changeContent(<Info key={'sl_new_' + rnd()} id='new' type={this.props.type} />)} title='Add service' />\n   </ContentList>\n   <ContentData key='sl_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// *************** Info ***************\n//\nclass Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true, content:null};\n }\n\n componentDidMount(){\n  rest_call('api/master/server_info',{id:this.props.id}).then(result => {\n   if (!result.data.node)\n    result.data.node = result.nodes[0];\n   if (!result.data.type_id)\n    result.data.type_id = result.services[0].id;\n   this.setState(result);\n   })\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => rest_call('api/master/server_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (!this.state.found)\n   return <InfoArticle key='si_art'>Server with id: {this.props.id} removed</InfoArticle>\n  else if (this.state.data){\n   const old = (this.state.data.id !== 'new');\n   return (\n    <Fragment key='si_info_fragment'>\n    <InfoArticle key='si_art' header='Server'>\n     <InfoColumns key='si_content'>\n      <TextLine key='server' id='server' label='ID' text={this.state.data.id} />\n      <SelectInput key='node' id='node' value={this.state.data.node} onChange={this.onChange}>{this.state.nodes.map((row,idx) => <option key={'si_node_'+idx} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Service' value={this.state.data.type_id} onChange={this.onChange}>{this.state.services.map((row,idx) => <option key={'si_svc_'+idx} value={row.id}>{`${row.service} (${row.type})`}</option>)}</SelectInput>\n      <UrlInput key='ui' id='ui' label='UI' value={this.state.data.ui} onChange={this.onChange} />\n     </InfoColumns>\n     <SaveButton key='si_btn_save' onClick={() => this.updateInfo()} title='Save' />\n     {old && <SyncButton key='si_sync' onClick={() => this.changeContent(<Operation key={'srv_op_sync'} id={this.props.id} operation='sync' />)} title='Sync service' />}\n     {old && <ReloadButton key='si_restart' onClick={() => this.changeContent(<Operation key={'srv_op_rst'}  id={this.props.id} operation='restart' />)} title='Restart service' />}\n     {old && <ItemsButton key='si_status' onClick={() => this.changeContent(<Operation key={'srv_op_stat'} id={this.props.id} operation='status' />)} title='Service status' />}\n    </InfoArticle>\n    <NavBar key='server_navigation' id='server_navigation' />\n    {this.state.content}\n    </Fragment>\n   );\n  } else\n   return <Spinner />\n }\n}\n\n// *************** Operation ***************\n//\nclass Operation extends Component {\n componentDidMount(){\n  rest_call('api/master/server_' + this.props.operation,{id:this.props.id}).then(result => this.setState(result))\n }\n\n render(){\n  return (this.state) ? <CodeArticle key='srv_operation'>{JSON.stringify(this.state,null,2)}</CodeArticle> : <Spinner />\n }\n}\n"],"sourceRoot":""}
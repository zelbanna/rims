{"version":3,"sources":["inventory.jsx"],"names":["Main","changeLocation","then","lib","setState","List","key","changeContent","elem","this","context","loadNavigation","title","onClick","Search","changeSelf","Vendor","state","Component","contextType","RimsContext","props","listItem","row","id","serial","model","Info","deleteList","searchHandler","e","searchfield","target","value","content","window","confirm","rest_call","result","deleted","data","filter","args","inv_list","includes","header","thead","trows","componentDidMount","rnd","placeholder","onChange","name","type","field","search","className","updateInfo","op","found","vendor","label","product","description","location_id","locations","map","idx","receive_date","purchase_order","license","license_key","support_contract","support_end_date","comments","text","count","Report","extra","sort"],"mappings":"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","file":"static/js/13.9f19a4d8.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { rest_call, rnd } from './infra/Functions.js';\nimport { Spinner, SearchField, InfoColumns, RimsContext, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { TextInput, SelectInput, DateInput, CheckboxInput } from './infra/Inputs.jsx';\nimport { AddButton, DeleteButton, InfoButton, ReloadButton, SaveButton, SearchButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton } from './infra/Navigation.js';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n componentDidMount(){\n  this.context.loadNavigation(<NavBar key='inventory_navbar'>\n   <NavDropDown key='inv_nav_inv' title='Inventory'>\n    <NavDropButton key='inv_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='search_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_vend' title='Vendor' onClick={() => this.changeContent(<Vendor key='vendor_list' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='inv_nav_list' title='List'   onClick={() => this.changeContent(<List key='list' changeSelf={this.changeContent} />)} />\n   </NavDropDown>\n   <NavButton key='inv_nav_loc' title='Locations' onClick={() => this.changeLocation()} />\n  </NavBar>)\n }\n\n changeLocation = () => import('./location.jsx').then(lib => this.setState(<lib.List key='location_list' />));\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props)\n  this.state = {searchfield:''}\n }\n\n componentDidMount(){\n  rest_call('api/inventory/list',this.props.args).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.model,<Fragment key={'inventory_buttons_'+row.id}>\n   <InfoButton key={'inv_btn_info_'+row.id}  onClick={() => this.changeContent(<Info key={'inventory_'+row.id} id={row.id} />) } title='View inventory item' />\n   <DeleteButton key={'inv_btn_delete_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete inventory item' />\n  </Fragment>]\n\n searchHandler = (e) => this.setState({searchfield:e.target.value})\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete item') && rest_call('api/inventory/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  if (!this.state.data)\n   return <Spinner />\n  else {\n   let inv_list = this.state.data.filter(row => (row.model.includes(this.state.searchfield) || row.serial.includes(this.state.searchfield)));\n   return <Fragment key='inv_fragment'>\n    <ContentList key='inv_cl' header='Inventory' thead={['ID','Serial','Model','']} trows={inv_list} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='inv_btn_reload' onClick={() => this.componentDidMount() } />\n     <AddButton key='inv_btn_add' onClick={() => this.changeContent(<Info key={'inventory_new_' + rnd()} id='new' />) } title='Add inventory item' />\n     <SearchField key='dl_searchfield' searchHandler={this.searchHandler} value={this.state.searchfield} placeholder='Search inventory' />\n    </ContentList>\n    <ContentData key='inv_cd'>{this.state.content}</ContentData>\n   </Fragment>\n  }\n }\n}\n\n// ************** Search **************\n//\nclass Search extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{field:'serial',search:''}}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n render() {\n  return (\n   <article className='lineinput'>\n    <h1>Inventory Search</h1>\n    <div>\n     <SelectInput key='field' id='field' value={this.state.data.field} onChange={this.onChange}><option value='serial'>Serial</option><option value='vendor'>Vendor</option></SelectInput>\n     <TextInput key='search' id='search' value={this.state.data.search} placeholder='search' onChange={this.onChange} />\n    </div>\n    <SearchButton key='inv_btn_search' onClick={() => this.changeContent(<List key='inventory_list' args={this.state.data} />)} title='Search inventory' />\n   </article>\n  )\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n componentDidMount(){\n  rest_call('api/inventory/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target[(e.target.type !== 'checkbox') ? 'value' : 'checked']}})\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => rest_call('api/inventory/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n render() {\n  if (this.state.data){\n   const data = this.state.data;\n   return (\n    <article className='info'>\n     <h1>Inventory Item</h1>\n     <InfoColumns key='inventory_content'>\n      <TextInput key='vendor' id='vendor' value={data.vendor} onChange={this.onChange} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n      <TextInput key='product' id='product' value={data.product} onChange={this.onChange} />\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} />\n      <TextInput key='description' id='description' value={data.description} onChange={this.onChange} />\n      <SelectInput key='location_id' id='location_id' label='Location' value={data.location_id} onChange={this.onChange}>{this.state.locations.map((row,idx) => <option key={'ii_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <DateInput key='receive_date' id='receive_date' label='Received' value={data.receive_date} onChange={this.onChange} />\n      <TextInput key='purchase_order' id='purchase_order' label='Purchase Order' value={data.purchase_order} onChange={this.onChange} />\n      <CheckboxInput key='license' id='license' value={data.license} onChange={this.onChange} />\n      {(data.license && <TextInput key='license_key' id='license_key' label='Key' value={data.license_key} onChange={this.onChange} />)}\n      <CheckboxInput key='support_contract' id='support_contract' value={data.support_contract} onChange={this.onChange} />\n      {(data.support_contract && <DateInput key='support_end_date' id='support_end_date' label='Contract End' value={data.support_end_date} onChange={this.onChange} />)}\n      <TextInput key='comments' id='comments' value={data.comments} onChange={this.onChange} />\n     </InfoColumns>\n     <ReloadButton key='inv_btn_reload' onClick={() => this.componentDidMount() } />\n     <SaveButton key='inv_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    </article>\n   );\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Vendor **************\n//\nclass Vendor extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/inventory/vendor_list').then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n listItem = (row) => [<HrefButton key={'search_' +row.vendor} text={row.vendor} onClick={() => this.changeContent(<List key='inventory_list' args={{field:'vendor', search:row.vendor}} />)} />,row.count]\n\n render(){\n  return <Fragment key='inv_fragment'>\n   <ContentList key='inv_cl' header='Vendors' thead={['Name','Count']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='inv_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/inventory/list', { extra:['vendor','product','description'], sort:'vendor'}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.serial,row.vendor,row.model,row.product,row.description]\n\n render(){\n  return <ContentReport key='inv_cr' header='Inventory' thead={['ID','Serial','Vendor','Model','Product','Description']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n"],"sourceRoot":""}
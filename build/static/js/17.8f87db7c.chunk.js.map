{"version":3,"sources":["resource.jsx"],"names":["Main","rest_call","type","then","result","buttons","key","panel","push","title","onClick","context","changeMain","window","open","tab","id","name","src","frame","Object","entries","data","loadNavigation","Component","contextType","RimsContext"],"mappings":"gOAOaA,EAAb,4LAEqB,IAAD,OAClBC,YAAU,uBAAuB,CAACC,KAAK,SAASC,MAAK,SAACC,GAErD,IADA,IAAIC,EAAU,GADkD,uCAEtDC,EAFsD,KAEjDC,EAFiD,KAG5C,WAAfA,EAAML,KACTG,EAAQG,KAAK,kBAAC,gBAAD,CAAeF,IAAK,MAAMA,EAAKG,MAAOH,EAAKI,QAAS,kBAAM,EAAKC,QAAQC,WAAWL,OACxE,QAAfA,EAAML,KACdG,EAAQG,KAAK,kBAAC,gBAAD,CAAeF,IAAK,MAAMA,EAAKG,MAAOH,EAAKI,QAAS,kBAAMG,OAAOC,KAAKP,EAAMQ,IAAI,cACtE,UAAfR,EAAML,MACdG,EAAQG,KAAK,kBAAC,gBAAD,CAAeF,IAAK,MAAMA,EAAKG,MAAOH,EAAKI,QAAS,kBAAM,EAAKC,QAAQC,WAAW,4BAAQI,GAAG,iBAAiBC,KAAK,iBAAiBR,MAAOH,EAAKY,IAAKX,EAAMY,cAN1K,MAAyBC,OAAOC,QAAQjB,EAAOkB,MAA/C,eAAsD,IAQtD,EAAKX,QAAQY,eAAe,kBAAC,SAAD,CAAQjB,IAAI,mBAAkB,kBAAC,cAAD,CAAaA,IAAI,YAAYG,MAAM,aAAaJ,UAb7G,+BAkBE,OAAQ,kBAAC,WAAD,UAlBV,GAA0BmB,aAqB1BxB,EAAKyB,YAAcC","file":"static/js/17.8f87db7c.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { rest_call } from './infra/Functions.js';\nimport { RimsContext } from './infra/UI.jsx';\nimport { NavBar, NavDropDown, NavDropButton } from './infra/Navigation.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n\n componentDidMount(){\n  rest_call('api/portal/resources',{type:'tool'}).then((result) => {\n   let buttons = []\n   for (let [key, panel] of Object.entries(result.data)){\n    if (panel.type === 'module')\n     buttons.push(<NavDropButton key={'mb_'+key} title={key} onClick={() => this.context.changeMain(panel)} />)\n    else if (panel.type === 'tab')\n     buttons.push(<NavDropButton key={'mb_'+key} title={key} onClick={() => window.open(panel.tab,'_blank')} />)\n    else if (panel.type === 'frame')\n     buttons.push(<NavDropButton key={'mb_'+key} title={key} onClick={() => this.context.changeMain(<iframe id='resource_frame' name='resource_frame' title={key} src={panel.frame}></iframe>)} />)\n   }\n   this.context.loadNavigation(<NavBar key='resource_navbar'><NavDropDown key='resources' title='Resources'>{buttons}</NavDropDown></NavBar>)\n  })\n }\n\n render(){\n  return  <Fragment />\n }\n}\nMain.contextType = RimsContext;\n"],"sourceRoot":""}
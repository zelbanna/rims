{"version":3,"sources":["device.jsx","visualize.jsx"],"names":["Main","props","compileNavItems","state","context","loadNavigation","key","title","onClick","changeContent","List","rack_id","Search","changeSelf","TypeList","ModelList","pdu","length","map","row","idx","hostname","changeImport","device_id","id","type","console","name","OUISearch","OUIList","style","float","elem","setState","content","this","rest_call","then","result","undefined","module","func","args","lib","Elem","Component","contextType","RimsContext","onChange","e","target","value","field","search","className","label","placeholder","searchHandler","searchfield","sortList","method","data","sort","a","b","localeCompare","ip","Number","split","num","slice","join","listItem","text","Info","StateMap","deleteList","window","confirm","deleted","filter","hasOwnProperty","device_list","includes","thead","highlight","header","trows","componentDidMount","Object","assign","New","rnd","Discover","updateInfo","op","reload","rack","vm","lookupInfo","changeInterfaces","found","navconf","extra","class","change_self","has_ip","interface_ip","function_strings","functions","mac","interface_mac","snmp","if_state","ip_state","classes","type_id","types","model","version","serial","rack_name","rack_unit","rack_size","console_name","console_port","pems","pem","pdu_name","pdu_unit","host","device_uuid","maxWidth","server_uuid","comment","url","Control","Template","Logs","changeMain","type_base","function","type_name","open","username","close","console_url","JSON","stringify","update","ManagementInfo","RackInfo","PemList","StatisticsList","fun","Function","a_domain_id","mapDomain","interfaces","management_id","domains","if_obj","find","intf","parseInt","interface_id","fqdn","oid","oui","racked","racks","console_id","consoles","pdu_id","pdu_slot","PemInfo","lookup","empty","pdus","pdu_info","slots","i","push","loadList","clear","inserts","lookupStats","measurement","tags","StatisticsInfo","operationDev","msg","wait","device_op","operationPem","pem_op","pem_id","lookupState","log","htmlFor","clearLog","time","message","status","info","addDevice","searchIP","ipam_network_id","network_id","networks","netasc","description","runDiscovery","Report","base","icon","syncModels","ModelInfo","defaults_file","image_file","parameters","ouiSearch","company","required","index","substring","head","keys","hd","Edit","Show","doubleClick","params","nodes","vis","DataSet","edges","network","Network","refs","show_canvas","options","on","setOptions","physics","ref","jsonHandler","parse","toggleEdit","edit","viz","manipulation","enabled","toggleFix","forEach","node","fixed","get","togglePhysics","physics_button","StopButton","StartButton","networkSync","storePositions","showDiv","results","React","createRef","edit_canvas","PhysicsButton"],"mappings":"2bAWaA,EAAb,YACC,WAAYC,GAAO,IAAD,8BACjB,4CAAMA,KAkBPC,gBAAkB,SAACC,GAClB,EAAKC,QAAQC,eAAe,kBAAC,IAAD,CAAQC,IAAI,iBACvC,kBAAC,IAAD,CAAaA,IAAI,eAAeC,MAAM,WACrC,kBAAC,IAAD,CAAeD,IAAI,eAAeC,MAAM,OAAOC,QAAS,kBAAM,EAAKC,cAAc,kBAACC,EAAD,CAAMJ,IAAI,KAAKK,QAASR,EAAMQ,cAC/G,kBAAC,IAAD,CAAeL,IAAI,eAAeC,MAAM,SAASC,QAAS,kBAAM,EAAKC,cAAc,kBAACG,EAAD,CAAQN,IAAI,KAAKO,WAAY,EAAKJ,oBACrH,kBAAC,IAAD,CAAeH,IAAI,gBAAgBC,MAAM,QAAQC,QAAS,kBAAM,EAAKC,cAAc,kBAACK,EAAD,CAAUR,IAAI,MAAMO,WAAY,EAAKJ,oBACxH,kBAAC,IAAD,CAAeH,IAAI,gBAAgBC,MAAM,SAASC,QAAS,kBAAM,EAAKC,cAAc,kBAACM,EAAD,CAAWT,IAAI,aAEpG,kBAAC,IAAD,CAAWA,IAAI,eAAeC,MAAM,OAAOC,QAAS,kBAAM,EAAKC,cAAc,kBAAC,OAAD,CAAeH,IAAI,uBAC9FH,EAAMa,IAAIC,OAAS,GAAM,kBAAC,IAAD,CAAaX,IAAI,eAAeC,MAAM,QAAQJ,EAAMa,IAAIE,KAAI,SAACC,EAAIC,GAAL,OAAa,kBAAC,IAAD,CAAed,IAAK,eAAiBc,EAAKb,MAAOY,EAAIE,SAAUb,QAAS,kBAAM,EAAKc,aAAa,MAAM,YAAY,CAACC,UAAUJ,EAAIK,GAAGC,KAAKN,EAAIM,cAC/OtB,EAAMuB,QAAQT,OAAS,GAAM,kBAAC,IAAD,CAAaX,IAAI,mBAAmBC,MAAM,YAAYJ,EAAMuB,QAAQR,KAAI,SAACC,EAAIC,GAAL,OAAa,kBAAC,IAAD,CAAed,IAAK,mBAAqBc,EAAKb,MAAOY,EAAIE,SAAUb,QAAS,kBAAM,EAAKc,aAAa,UAAU,YAAY,CAACC,UAAUJ,EAAIK,GAAGC,KAAKN,EAAIM,cACvQtB,EAAMQ,SAAY,kBAAC,IAAD,CAAWL,IAAI,eAAeC,MAAOJ,EAAMwB,KAAMnB,QAAS,kBAAM,EAAKc,aAAa,OAAO,SAAS,CAACE,GAAGrB,EAAMQ,aAChI,kBAAC,IAAD,CAAaL,IAAI,cAAcC,MAAM,OACpC,kBAAC,IAAD,CAAeD,IAAI,eAAeC,MAAM,SAASC,QAAS,kBAAM,EAAKC,cAAc,kBAACmB,EAAD,CAAWtB,IAAI,mBAClG,kBAAC,IAAD,CAAeA,IAAI,eAAeC,MAAM,OAAOC,QAAS,kBAAM,EAAKC,cAAc,kBAACoB,EAAD,CAASvB,IAAI,kBAE/F,kBAAC,IAAD,CAAWA,IAAI,eAAeC,MAAM,eAAeC,QAAS,kBAAM,EAAKc,aAAa,cAAc,OAAO,KAAKQ,MAAO,CAACC,MAAM,WAC5H,kBAAC,IAAD,CAAazB,IAAI,eAAeC,MAAM,OAAOuB,MAAO,CAACC,MAAM,UAC1D,kBAAC,IAAD,CAAezB,IAAI,eAAeC,MAAM,UAAUC,QAAS,kBAAM,EAAKc,aAAa,SAAS,OAAO,CAACG,KAAK,YACzG,kBAAC,IAAD,CAAenB,IAAI,eAAeC,MAAM,WAAWC,QAAS,kBAAM,EAAKc,aAAa,OAAO,cAAc,QAE1G,kBAAC,IAAD,CAAahB,IAAI,cAAcC,MAAM,MAAMuB,MAAO,CAACC,MAAM,UACxD,kBAAC,IAAD,CAAezB,IAAI,eAAeC,MAAM,UAAUC,QAAS,kBAAM,EAAKc,aAAa,SAAS,OAAO,CAACG,KAAK,WACzG,kBAAC,IAAD,CAAenB,IAAI,eAAeC,MAAM,UAAUC,QAAS,kBAAM,EAAKc,aAAa,MAAM,aAAa,QAEvG,kBAAC,IAAD,CAAWhB,IAAI,iBAAiBE,QAAS,kBAAM,EAAKC,cAAc,YA5ClD,EAgDlBA,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KA9ChD,EAAK7B,MAAQ,GAFI,EADnB,iFAMqB,IAAD,OACdgC,KAAKlC,MAAMU,QACdyB,YAAU,qBAAqB,CAACZ,GAAGW,KAAKlC,MAAMU,UAAU0B,MAAK,SAAAC,GAAM,OAAI,EAAKpC,gBAAL,aAAsBS,QAAQ,EAAKV,MAAMU,SAAY2B,OAE5HH,KAAKjC,gBAAgB,CAACc,IAAI,GAAIU,QAAQ,GAAIC,KAAK,MAAOhB,aAAQ4B,MAVjE,mCAacC,EAAOC,EAAKC,GAAM,IAAD,OAC7B,MAAO,KAAKF,EAAO,QAAQH,MAAK,SAAAM,GAC/B,IAAIC,EAAOD,EAAIF,GACf,EAAKR,SAAS,CAACC,QAAQ,kBAACU,EAAD,eAAMtC,IAAKkC,EAAO,IAAIC,GAAUC,WAhB1D,+BAoDE,OAAQ,kBAAC,WAAD,CAAUpC,IAAI,aAAa6B,KAAKhC,MAAM+B,aApDhD,GAA0BW,aAuD1B7C,EAAK8C,YAAcC,c,IAIbnC,E,YACJ,WAAYX,GAAO,IAAD,8BAClB,4CAAMA,KAIPQ,cAAgB,SAACuB,GAAD,OAAU,EAAK/B,MAAMY,WAAWmB,IAL7B,EAOnBgB,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAL,eAAgBgB,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,SALzD,EAAKhD,MAAQ,CAACiD,MAAM,KAAKC,OAAO,IAFd,E,sEAST,IAAD,OACR,OACC,6BAASC,UAAU,aAClB,6CACA,6BACC,kBAAC,cAAD,CAAahD,IAAI,QAAQkB,GAAG,QAAQwB,SAAUb,KAAKa,SAAUG,MAAOhB,KAAKhC,MAAMiD,OAC9E,8BAAUG,MAAM,SACf,4BAAQJ,MAAM,YAAd,YACA,4BAAQA,MAAM,QAAd,SAED,8BAAUI,MAAM,UACf,4BAAQJ,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,WAAd,aAGF,kBAAC,YAAD,CAAW7C,IAAI,SAASkB,GAAG,SAASwB,SAAUb,KAAKa,SAAUG,MAAOhB,KAAKhC,MAAMkD,OAAQG,YAAY,YAEpG,kBAAC,eAAD,CAAclD,IAAI,gBAAgBE,QAAS,kBAAM,EAAKC,cAAc,kBAACC,EAAD,eAAMJ,IAAI,eAAkB,EAAKH,UAAYI,MAAM,wB,GA7BtGsC,aAoCfnC,E,YACL,WAAYT,GAAO,IAAD,8BACjB,4CAAMA,KAQPQ,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAT/B,EAWlByB,cAAgB,SAACR,GAAQ,EAAKhB,SAAS,CAACyB,YAAYT,EAAEC,OAAOC,SAX3C,EAalBQ,SAAW,SAACC,GACI,aAAXA,EACH,EAAKzD,MAAM0D,KAAKC,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAE1C,SAAS4C,cAAcD,EAAE3C,aAEzD,EAAKlB,MAAM0D,KAAKC,MAAK,SAACC,EAAEC,GACvB,OAAID,EAAEG,IAAMF,EAAEE,GACAC,OAAOJ,EAAEG,GAAGE,MAAM,KAAKlD,KAAI,SAAAmD,GAAG,MAAI,aAAOA,GAAOC,OAAO,MAAKC,KAAK,KACjEJ,OAAOH,EAAEE,GAAGE,MAAM,KAAKlD,KAAI,SAAAmD,GAAG,MAAI,aAAOA,GAAOC,OAAO,MAAKC,KAAK,KAErER,EAAEG,GACL,EAEAH,EAAE1C,SAAS4C,cAAcD,EAAE3C,aAEpC,EAAKY,SAAS,CAAC6B,KAAKF,KA3BH,EA8BlBY,SAAW,SAACrD,GAAD,MAAS,CAACA,EAAI+C,GAAG,kBAAC,aAAD,CAAY5D,IAAK,eAAea,EAAIK,GAAIiD,KAAMtD,EAAIE,SAAUb,QAAS,kBAAM,EAAKC,cAAc,kBAACiE,EAAD,CAAMpE,IAAK,MAAMa,EAAIK,GAAIA,GAAIL,EAAIK,GAAIX,WAAY,EAAKJ,kBAAoBF,MAAOY,EAAIK,KAAOmD,mBAAS,CAACxE,MAAMgB,EAAIhB,QAAQ,kBAAC,WAAD,CAAUG,IAAK,cAAca,EAAIK,IAClR,kBAAC,aAAD,CAAYlB,IAAK,eAAea,EAAIK,GAAIhB,QAAS,kBAAM,EAAKC,cAAc,kBAACiE,EAAD,CAAMpE,IAAK,MAAMa,EAAIK,GAAIA,GAAIL,EAAIK,GAAIX,WAAY,EAAKJ,kBAAoBF,MAAOY,EAAIK,KAC/J,kBAAC,eAAD,CAAclB,IAAK,cAAca,EAAIK,GAAIhB,QAAS,kBAAM,EAAKoE,WAAWzD,EAAIK,KAAKjB,MAAM,qBAhCtE,EAmClBqE,WAAa,SAACpD,GAAD,OAASqD,OAAOC,QAAQ,wBAAwBtD,EAAG,MAAQY,YAAU,oBAAqB,CAACZ,GAAGA,IAAKa,MAAK,SAAAC,GAAM,OAAIA,EAAOyC,SAAW,EAAK9C,SAAS,CAAC4B,KAAK,EAAK1D,MAAM0D,KAAKmB,QAAO,SAAA7D,GAAG,OAAKA,EAAIK,KAAOA,KAAKU,QAAQ,WAjC3N,EAAK/B,MAAQ,CAAC0D,KAAK,KAAM3B,QAAQ,KAAM4B,KAAM7D,EAAMgF,eAAe,QAAWhF,EAAM6D,KAAO,WAAYnD,QAAQ,EAAKV,MAAMU,QAAS+C,YAAY,GAAIN,MAAM,EAAKnD,MAAMmD,MAAOC,OAAO,EAAKpD,MAAMoD,QAF3K,E,iFAKE,IAAD,OAClBjB,YAAU,kBAAmB,CAAC0B,KAAK3B,KAAKhC,MAAM2D,KAAMnD,QAAQwB,KAAKhC,MAAMQ,QAASyC,MAAMjB,KAAKhC,MAAMiD,MAAOC,OAAOlB,KAAKhC,MAAMkD,SAAShB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BA+BxJ,IAAD,OACP,GAAIH,KAAKhC,MAAM0D,KAAK,CACnB,IAAIqB,EAAc/C,KAAKhC,MAAM0D,KAAKmB,QAAO,SAAA7D,GAAG,OAAIA,EAAIE,SAAS8D,SAAS,EAAKhF,MAAMuD,gBAC3E0B,EAAQ,CAAC,kBAAC,eAAD,CAAc9E,IAAI,YAAYmE,KAAK,KAAKY,UAAgC,OAApBlD,KAAKhC,MAAM2D,KAAgBtD,QAAS,kBAAM,EAAKmD,SAAS,SAAU,kBAAC,eAAD,CAAcrD,IAAI,kBAAkBmE,KAAK,WAAWY,UAAgC,aAApBlD,KAAKhC,MAAM2D,KAAsBtD,QAAS,kBAAM,EAAKmD,SAAS,eAAgB,GAAG,IACtR,OAAO,kBAAC,WAAD,CAAUrD,IAAK,eACrB,kBAAC,cAAD,CAAaA,IAAI,UAAUgF,OAAO,cAAcF,MAAOA,EAAOZ,SAAUrC,KAAKqC,SAAUe,MAAOL,GAC7F,kBAAC,eAAD,CAAc5E,IAAI,gBAAgBE,QAAS,kBAAM,EAAKgF,uBACtD,kBAAC,cAAD,CAAalF,IAAI,eAAeE,QAAS,WAAQiF,OAAOC,OAAO,EAAKvF,MAAM,CAACQ,aAAQ4B,EAAUa,WAAMb,EAAUc,YAAOd,IAAa,EAAKiD,qBAAwBjF,MAAM,mBACpK,kBAAC,YAAD,CAAWD,IAAI,aAAaE,QAAS,kBAAM,EAAKC,cAAc,kBAACkF,EAAD,CAAKrF,IAAK,UAAYsF,cAAOpE,GAAG,UAAWjB,MAAM,eAC/G,kBAAC,gBAAD,CAAeD,IAAI,iBAAiBE,QAAS,kBAAM,EAAKC,cAAc,kBAACoF,EAAD,CAAUvF,IAAI,SAAWC,MAAM,qBACrG,kBAAC,cAAD,CAAaD,IAAI,iBAAiBmD,cAAetB,KAAKsB,cAAeN,MAAOhB,KAAKhC,MAAMuD,YAAaF,YAAY,oBAEjH,kBAAC,cAAD,CAAalD,IAAI,cAAc6B,KAAKhC,MAAM+B,UAG3C,OAAO,kBAAC,UAAD,U,GArDSW,aA2DN6B,EAAb,YACC,WAAYzE,GAAO,IAAD,8BACjB,4CAAMA,KAQP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WATlE,EAWlB1C,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAX/B,EAalBnB,WAAa,SAACmB,GAAD,OAAU,EAAK/B,MAAMY,WAAWmB,IAb3B,EAelB8D,WAAa,kBAAM1D,YAAU,kBAAD,aAAoB2D,GAAG,UAAa,EAAK5F,MAAM0D,OAAOxB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OAf7F,EAiBlB0D,OAAS,WACR,EAAK/D,SAAS,CAACgE,UAAK1D,EAAU2D,QAAG3D,IACjCH,YAAU,kBAAkB,CAACZ,GAAG,EAAKvB,MAAMuB,KAAKa,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OAnB5D,EAsBlB6D,WAAa,WACZ,EAAKlE,SAAS,CAACC,QAAQ,kBAAC,UAAD,MAAYI,OAAO,KAC1CF,YAAU,kBAAkB,CAACZ,GAAG,EAAKvB,MAAMuB,GAAIuE,GAAG,WAAW1D,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAL,eAAkBK,EAAlB,CAAyBJ,QAAQ,YAxB5F,EA2BlBkE,iBAAmB,kBAAM,6BAA0B/D,MAAK,SAAAM,GAAG,OAAI,EAAKlC,cAAc,kBAACkC,EAAIjC,KAAL,CAAUJ,IAAI,iBAAiBiB,UAAW,EAAKtB,MAAMuB,GAAIX,WAAY,EAAKJ,qBAzB3J,EAAKN,MAAQ,CAAC0D,UAAKtB,EAAW8D,OAAM,EAAMnE,QAAQ,KAAMoE,SAAQ,GAF/C,EADnB,iFAMqB,IAAD,OAClBlE,YAAU,kBAAkB,CAACZ,GAAGW,KAAKlC,MAAMuB,GAAI+E,MAAM,CAAC,QAAQ,aAAalE,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,QAP1G,+BA8BW,IAAD,OACR,GAAGH,KAAKhC,MAAM0D,KAAK,CAClB,IAAMA,EAAO1B,KAAKhC,MAAM0D,KAClB0C,EAAQpE,KAAKhC,MAAMoG,MACnBL,IAAqB,OAAfrC,EAAK2C,QAAkBrE,KAAKhC,MAAM+F,KAAM/D,KAAKhC,MAAM+F,GACzDD,KAAQ9D,KAAKhC,MAAM8F,MAAuB,OAAfpC,EAAK2C,QAAkBrE,KAAKhC,MAAM8F,KAC7DQ,EAAetE,KAAKlC,MAAMY,WAC1B6F,EAAUH,EAAMI,aAChBC,EAAoBL,EAAMM,UAAU5F,OAAQ,EAAKsF,EAAMM,UAAUzC,MAAM,KAAO,GACpF,OACC,kBAAC,WAAD,CAAU9D,IAAI,eACb,6BAASgD,UAAU,QACnB,sCACA,kBAAC,cAAD,CAAahD,IAAI,UAAUgD,UAAU,QACpC,kBAAC,WAAD,CAAUhD,IAAI,WAAWkB,GAAG,WAAWiD,KAAMZ,EAAKxC,WAClD,kBAAC,YAAD,CAAWf,IAAI,MAAMkB,GAAG,MAAM+B,MAAM,UAAUJ,MAAOU,EAAKiD,IAAKvG,MAAM,aAAayC,SAAUb,KAAKa,WACjG,kBAAC,WAAD,CAAU1C,IAAI,SAASkB,GAAG,SAAS+B,MAAM,WAAWkB,KAAM8B,EAAMQ,cAAexG,MAAM,6BACrF,kBAAC,WAAD,CAAUD,IAAI,QAAQkB,GAAG,QAAQ+B,MAAM,UAAUkB,KAAM8B,EAAMI,eAC7D,kBAAC,WAAD,CAAUrG,IAAI,OAAOkB,GAAG,OAAO+B,MAAM,OAAOkB,KAAMZ,EAAKmD,OACvD,kBAAC,YAAD,CAAW1G,IAAI,QAAQkB,GAAG,QAAQrB,MAAO,CAACoG,EAAMU,SAASV,EAAMW,aAEhE,kBAAC,cAAD,CAAa5G,IAAI,WAAWgD,UAAU,QACrC,kBAAC,WAAD,CAAUhD,IAAI,KAAKkB,GAAG,KAAKiD,KAAMtC,KAAKlC,MAAMuB,KAC5C,kBAAC,cAAD,CAAalB,IAAI,QAAQkB,GAAG,QAAQ2B,MAAOU,EAAK2C,MAAOxD,SAAUb,KAAKa,UAAWb,KAAKhC,MAAMgH,QAAQjG,KAAI,SAAAC,GAAG,OAAI,4BAAQb,IAAK,YAAYa,EAAKgC,MAAOhC,GAAMA,OAC1J,kBAAC,cAAD,CAAab,IAAI,UAAUkB,GAAG,UAAU+B,MAAM,OAAOJ,MAAOU,EAAKuD,QAASpE,SAAUb,KAAKa,UAAWb,KAAKhC,MAAMkH,MAAMnG,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,WAAWc,EAAK+B,MAAOhC,EAAIK,IAAKL,EAAIQ,UACvL,kBAAC,YAAD,CAAWrB,IAAI,QAAQkB,GAAG,QAAQ2B,MAAOU,EAAKyD,MAAOtE,SAAUb,KAAKa,SAAUuD,MAAO1C,EAAKyD,QAC1F,kBAAC,WAAD,CAAUhH,IAAI,UAAUkB,GAAG,UAAUiD,KAAMZ,EAAK0D,QAASvE,SAAUb,KAAKa,WACxE,kBAAC,YAAD,CAAW1C,IAAI,SAASkB,GAAG,SAAS+B,MAAM,MAAMJ,MAAOU,EAAK2D,OAAQxE,SAAUb,KAAKa,YAEpF,kBAAC,cAAD,CAAa1C,IAAI,UAAUgD,UAAU,QACnC2C,GAAQ,kBAAC,WAAD,CAAU3F,IAAI,WAAWkB,GAAG,WAAW+B,MAAM,WAAWkB,KAAI,UAAKwB,EAAKwB,UAAV,aAAwBxB,EAAKyB,UAA7B,OACpEzB,GAAQ,kBAAC,WAAD,CAAU3F,IAAI,YAAYkB,GAAG,YAAY+B,MAAM,WAAWkB,KAAMwB,EAAK0B,YAC7E1B,GAAQ,kBAAC,WAAD,CAAU3F,IAAI,WAAWkB,GAAG,WAAW+B,MAAM,UAAUkB,KAAI,UAAKwB,EAAK2B,aAAV,aAA2B3B,EAAK4B,aAAhC,OACnE5B,GAAQ9D,KAAKhC,MAAM2H,KAAK5G,KAAI,SAAA6G,GAAG,OAAI,kBAAC,WAAD,CAAUzH,IAAK,OAAOyH,EAAIvG,GAAIA,GAAI,OAAOuG,EAAIvG,GAAI+B,MAAOwE,EAAIpG,KAAK,OAAQ8C,KAAI,UAAKsD,EAAIC,SAAT,aAAsBD,EAAIE,SAA1B,WAElH,kBAAC,cAAD,CAAa3H,IAAI,QAAQgD,UAAU,QACjC4C,GAAM,kBAAC,WAAD,CAAU5F,IAAI,UAAUkB,GAAI,UAAU+B,MAAM,UAAUkB,KAAMyB,EAAGvE,OACrEuE,GAAM,kBAAC,WAAD,CAAU5F,IAAI,UAAUkB,GAAI,UAAU+B,MAAM,UAAUkB,KAAMyB,EAAGgC,OACrEhC,GAAM,kBAAC,WAAD,CAAU5F,IAAI,UAAUkB,GAAI,UAAU+B,MAAM,UAAUkB,KAAMyB,EAAGiC,YAAarG,MAAO,CAACsG,SAAS,KAAM7B,MAAOL,EAAGiC,cACnHjC,GAAM,kBAAC,WAAD,CAAU5F,IAAI,YAAYkB,GAAI,YAAY+B,MAAM,YAAYkB,KAAMyB,EAAGmC,YAAavG,MAAO,CAACsG,SAAS,KAAM7B,MAAOL,EAAGmC,eAE3H,6BACA,kBAAC,cAAD,CAAa/H,IAAI,WAChB,kBAAC,YAAD,CAAWA,IAAI,UAAUkB,GAAG,UAAU2B,MAAOU,EAAKyE,QAAStF,SAAUb,KAAKa,WAC1E,kBAAC,WAAD,CAAU1C,IAAI,MAAMkB,GAAG,MAAM+B,MAAM,MAAMJ,MAAOU,EAAK0E,IAAKvF,SAAUb,KAAKa,YAE1E,6BACA,kBAAC,eAAD,CAAc1C,IAAI,gBAAgBE,QAAS,kBAAM,EAAKwF,YACtD,kBAAC,aAAD,CAAY1F,IAAI,cAAcE,QAAS,kBAAM,EAAKsF,cAAcvF,MAAM,SACtE,kBAAC,mBAAD,CAAkBD,IAAI,cAAcE,QAAS,kBAAM,EAAK4F,oBAAoB7F,MAAM,eAClF,kBAAC,cAAD,CAAaD,IAAI,cAAcE,QAAS,kBAAM,EAAKC,cAAc,kBAAC+H,EAAD,CAASlI,IAAI,iBAAiBkB,GAAI,EAAKvB,MAAMuB,OAASjB,MAAM,mBAC7H,kBAAC,cAAD,CAAaD,IAAI,cAAcE,QAAS,kBAAM,EAAKC,cAAc,kBAACgI,EAAD,CAAUnI,IAAI,mBAAmBkB,GAAI,EAAKvB,MAAMuB,OAASjB,MAAM,2BAChI,kBAAC,kBAAD,CAAiBD,IAAI,cAAcE,QAAS,kBAAM,EAAKyB,SAAS,CAACqE,SAAS,EAAKnG,MAAMmG,WAAW/F,MAAM,uBACrGkG,GAAe,kBAAC,gBAAD,CAAenG,IAAI,cAAcE,QAAS,kBAAM,EAAKK,WAAW,kBAAC,OAAD,CAAeP,IAAK,MAAM,EAAKL,MAAMuB,GAAIC,KAAK,SAASD,GAAI,EAAKvB,MAAMuB,GAAIX,WAAY,EAAKZ,MAAMY,eAAiBN,MAAM,qBACvMmG,GAAU,kBAAC,eAAD,CAAcpG,IAAI,cAAcE,QAAS,kBAAM,EAAK2F,cAAc5F,MAAM,uBAClFmG,GAAU,kBAAC,YAAD,CAAWpG,IAAI,cAAcE,QAAS,kBAAM,EAAKC,cAAc,kBAACiI,EAAD,CAAMpI,IAAI,cAAckB,GAAI,EAAKvB,MAAMuB,OAASjB,MAAM,SAC/HqG,EAAiBzB,SAAS,WAAa,kBAAC,WAAD,CAAU7E,IAAI,eAAeE,QAAS,kBAAM,EAAKJ,QAAQuI,WAAW,CAACnG,OAAO,EAAKrC,MAAMoG,MAAMqC,UAAUC,SAAS,SAASnG,KAAK,CAACnB,UAAU,EAAKtB,MAAMuB,GAAIC,KAAK,EAAKtB,MAAMoG,MAAMuC,cAAcvI,MAAO,UAAYsD,EAAKxC,WAC3PqF,GAAU,kBAAC,aAAD,CAAYpG,IAAI,aAAaE,QAAS,WAAuBqE,OAAOkE,KAAP,gBAAqBxC,EAAMyC,SAA3B,YAAuCzC,EAAMI,cAAe,UAAkBsC,SAAY1I,MAAM,mBACvK0F,GAAQA,EAAKiD,aAAe,kBAAC,aAAD,CAAY5I,IAAI,iBAAiBE,QAAS,WAAwBqE,OAAOkE,KAAK9C,EAAKiD,YAAY,UAAmBD,SAAY1I,MAAM,sBAChKsD,EAAK0E,KAAO,kBAAC,WAAD,CAAUjI,IAAI,YAAYE,QAAS,kBAAMqE,OAAOkE,KAAKlF,EAAK0E,IAAI,WAAWhI,MAAM,WAC5F,kBAAC,SAAD,CAAQD,IAAI,aAAagC,OAAQ6G,KAAKC,UAAUjH,KAAKhC,MAAMkJ,WAE5D,kBAAC,IAAD,CAAQ/I,IAAI,gBAAgBkB,GAAG,iBAC7BW,KAAKhC,MAAMmG,SAAW,kBAAC,IAAD,CAAWhG,IAAI,oBAAoBC,MAAM,aAAaC,QAAS,kBAAM,EAAKC,cAAc,kBAAC6I,EAAD,CAAgBhJ,IAAI,mBAAmBkB,GAAI,EAAKvB,MAAMuB,SACpKW,KAAKhC,MAAMmG,SAAW,CAAC,iBAAiB,eAAenB,SAAStB,EAAK2C,QAAU,kBAAC,IAAD,CAAWlG,IAAI,cAAcC,MAAM,OAAOC,QAAS,kBAAM,EAAKC,cAAc,kBAAC8I,EAAD,CAAUjJ,IAAI,mBAAmBiB,UAAW,EAAKtB,MAAMuB,SAClNW,KAAKhC,MAAMmG,SAAW,CAAC,SAAS,iBAAiB,eAAenB,SAAStB,EAAK2C,QAAU,kBAAC,IAAD,CAAWlG,IAAI,cAAcC,MAAM,OAAOC,QAAS,kBAAM,EAAKC,cAAc,kBAAC+I,EAAD,CAASlJ,IAAI,kBAAkBiB,UAAW,EAAKtB,MAAMuB,GAAIX,WAAY,EAAKJ,oBAC9O0B,KAAKhC,MAAMmG,SAAW,kBAAC,IAAD,CAAWhG,IAAI,eAAeC,MAAM,aAAaC,QAAS,kBAAM,EAAKC,cAAc,kBAACgJ,EAAD,CAAgBnJ,IAAI,yBAAyBiB,UAAW,EAAKtB,MAAMuB,GAAIX,WAAY,EAAKJ,qBAChM0B,KAAKhC,MAAMmG,SAAWM,EAAiB5B,QAAO,SAAA0E,GAAG,MAAY,WAARA,KAAkBxI,KAAI,SAAC6E,EAAG3E,GAAJ,OAAY,kBAAC,IAAD,CAAWd,IAAK,UAAUc,EAAKb,MAAOwF,EAAIvF,QAAS,kBAAM,EAAKC,cAAc,kBAACkJ,EAAD,CAAUrJ,IAAK,YAAYyF,EAAIvE,GAAI,EAAKvB,MAAMuB,GAAIuE,GAAIA,EAAItE,KAAM,EAAKtB,MAAMoG,MAAMuC,oBAEtP3G,KAAKhC,MAAM+B,SAIb,OAAO,kBAAC,UAAD,UAvGV,GAA0BW,aA0G1B6B,EAAK5B,YAAcC,c,IAIbuG,E,YACL,WAAYrJ,GAAO,IAAD,8BACjB,4CAAMA,KAiBP+C,SAAW,SAACC,GACX,IAAMY,EAAI,eAAO,EAAK1D,MAAM0D,KAAlB,eAAyBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,QACtC,kBAAlBF,EAAEC,OAAOvB,OACXkC,EAAK+F,YAAe,EAAKC,UAAU5G,EAAEC,OAAOC,MAAM,EAAKhD,MAAM2J,aAC9D,EAAK7H,SAAS,CAAC4B,KAAKA,KAtBH,EA8BlBpD,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KA9B/B,EAgClB8D,WAAa,kBAAM1D,YAAU,sBAAD,aAAwB2D,GAAG,UAAa,EAAK5F,MAAM0D,OAAOxB,MAAK,SAAAC,GAC1FA,EAAOuB,KAAK+F,YAAc,EAAKC,UAAUvH,EAAOuB,KAAKkG,cAAc,EAAK5J,MAAM2J,YAC9E,EAAK7H,SAASK,OAhCd,EAAKnC,MAAQ,CAAC0D,UAAKtB,EAAW8D,OAAM,EAAMnE,QAAQ,MAFjC,E,iFAKE,IAAD,OAClBE,YAAU,sBAAsB,CAACZ,GAAGW,KAAKlC,MAAMuB,KAAKa,MAAK,SAAAC,GACxDA,EAAOuB,KAAK+F,YAAc,EAAKC,UAAUvH,EAAOuB,KAAKkG,cAAezH,EAAOwH,YAC3E,EAAK7H,SAASK,MAEfF,YAAU,sBAAsB,CAAC4C,OAAO,YAAY3C,MAAK,SAAAC,GACxD,IAAMI,EAAO,CAACmB,KAAK,EAAK1D,MAAM0D,KAAMmG,QAAQ1H,EAAOuB,MAC/CnB,EAAKmB,OACRnB,EAAKmB,KAAK+F,YAAc,EAAKC,UAAU,EAAK1J,MAAM0D,KAAKkG,cAAc,EAAK5J,MAAM2J,aACjF,EAAK7H,SAAS,CAAC+H,QAAQ1H,EAAOuB,Y,gCAWtBrC,EAAGsI,GACZ,IAAMG,EAASH,EAAWI,MAAK,SAAAC,GAAI,OAAIC,SAASD,EAAKE,gBAAkBD,SAAS5I,MAChF,OAAQyI,EAAUA,EAAOL,YAAc,O,+BAU9B,IAAD,OACR,OAAIzH,KAAKhC,MAAM0D,MAAQ1B,KAAKhC,MAAM6J,QAC1B,6BAAS1G,UAAU,QACzB,wDACA,kBAAC,cAAD,CAAahD,IAAI,aAChB,kBAAC,YAAD,CAAWA,IAAI,kBAAkBkB,GAAG,WAAW2B,MAAOhB,KAAKhC,MAAM0D,KAAKxC,SAAU2B,SAAUb,KAAKa,WAC/F,kBAAC,cAAD,CAAa1C,IAAI,uBAAuBkB,GAAG,gBAAgB+B,MAAM,iBAAiBJ,MAAOhB,KAAKhC,MAAM0D,KAAKkG,cAAe/G,SAAUb,KAAKa,UAAWb,KAAKhC,MAAM2J,WAAW5I,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,WAAWc,EAAK+B,MAAOhC,EAAIkJ,cAAxC,UAA0DlJ,EAAIQ,KAA9D,aAAuER,EAAI+C,GAA3E,cAAmF/C,EAAImJ,KAAvF,UACzL,kBAAC,cAAD,CAAahK,IAAI,qBAAqBkB,GAAG,cAAc+B,MAAM,cAAcJ,MAAOhB,KAAKhC,MAAM0D,KAAK+F,YAAa5G,SAAUb,KAAKa,UAAWb,KAAKhC,MAAM6J,QAAQ9I,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,UAAUc,EAAK+B,MAAOhC,EAAIK,IAAKL,EAAIQ,UAC7N,kBAAC,WAAD,CAAUrB,IAAI,aAAakB,GAAG,MAAM+B,MAAM,WAAWkB,KAAMtC,KAAKhC,MAAMoG,MAAMgE,MAC5E,kBAAC,WAAD,CAAUjK,IAAI,aAAakB,GAAG,MAAM+B,MAAM,aAAakB,KAAMtC,KAAKhC,MAAMoG,MAAMiE,OAE/E,kBAAC,aAAD,CAAYlK,IAAI,kBAAkBE,QAAS,kBAAM,EAAKsF,cAAcvF,MAAM,UAGpE,kBAAC,UAAD,U,GApDmBsC,aA0DvB0G,E,YACL,WAAYtJ,GAAO,IAAD,8BACjB,4CAAMA,KAQP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WATlE,EAWlB2C,WAAa,kBAAM1D,YAAU,kBAAD,aAAoB2D,GAAG,UAAa,EAAK5F,MAAM0D,OAAOxB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OAT9G,EAAKnC,MAAQ,GAFI,E,iFAKE,IAAD,OAClBiC,YAAU,kBAAkB,CAACb,UAAUY,KAAKlC,MAAMsB,YAAYc,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAOlF,IAAD,OACR,GAAIH,KAAKhC,MAAM0D,KAAK,CACnB,IAAM4G,EAAUtI,KAAKhC,MAAM0D,KAAKlD,SAAuC,SAA5BwB,KAAKhC,MAAM0D,KAAKlD,QAC3D,OAAO,6BAAS2C,UAAU,QACzB,oCACA,kBAAC,cAAD,CAAahD,IAAI,aAChB,kBAAC,cAAD,CAAaA,IAAI,YAAYkB,GAAG,UAAU+B,MAAM,UAAUJ,MAAOhB,KAAKhC,MAAM0D,KAAKlD,QAASqC,SAAUb,KAAKa,UAAWb,KAAKhC,MAAMuK,MAAMxJ,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,aAAac,EAAK+B,MAAOhC,EAAIK,IAAKL,EAAIQ,UACxM8I,GAAU,kBAAC,YAAD,CAAWnK,IAAI,cAAckB,GAAG,YAAY+B,MAAM,OAAOJ,MAAOhB,KAAKhC,MAAM0D,KAAK8D,UAAW3E,SAAUb,KAAKa,SAAUzC,MAAM,wBACpIkK,GAAU,kBAAC,YAAD,CAAWnK,IAAI,cAAckB,GAAG,YAAY+B,MAAM,OAAOJ,MAAOhB,KAAKhC,MAAM0D,KAAK6D,UAAW1E,SAAUb,KAAKa,SAAUzC,MAAM,4BACpIkK,GAAU,kBAAC,cAAD,CAAanK,IAAI,gBAAgBkB,GAAG,aAAa+B,MAAM,UAAUJ,MAAOhB,KAAKhC,MAAM0D,KAAK8G,WAAY3H,SAAUb,KAAKa,UAAWb,KAAKhC,MAAMyK,SAAS1J,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,iBAAiBc,EAAK+B,MAAOhC,EAAIK,IAAKL,EAAIE,cACpOoJ,GAAU,kBAAC,YAAD,CAAWnK,IAAI,kBAAkBkB,GAAG,eAAe+B,MAAM,eAAeJ,MAAOhB,KAAKhC,MAAM0D,KAAKgE,aAAc7E,SAAUb,KAAKa,YAExI,kBAAC,aAAD,CAAY1C,IAAI,kBAAkBE,QAAS,kBAAM,EAAKsF,cAAcvF,MAAM,UAG3E,OAAO,kBAAC,UAAD,U,GA7BasC,aAmCjB2G,E,YACL,WAAYvJ,GAAO,IAAD,8BACjB,4CAAMA,KAQPQ,cAAgB,SAACuB,GAAD,OAAU,EAAK/B,MAAMY,WAAWmB,IAT9B,EAWlB4C,WAAa,SAACpD,GAAD,OAASqD,OAAOC,QAAQ,uBAAyB1C,YAAU,iBAAkB,CAACZ,GAAGA,IAAKa,MAAK,SAAAC,GAAM,OAAIA,EAAOyC,SAAW,EAAK9C,SAAS,CAAC4B,KAAK,EAAK1D,MAAM0D,KAAKmB,QAAO,SAAA7D,GAAG,OAAKA,EAAIK,KAAOA,KAAKU,QAAQ,WAX7L,EAalBsC,SAAW,SAACrD,GAAD,MAAS,CAACA,EAAIK,GAAGL,EAAIQ,KAAKR,EAAI0J,OAAO1J,EAAI6G,SAAS7G,EAAI2J,SAAS3J,EAAI8G,SAAS,kBAAC,WAAD,CAAU3H,IAAK,iBAAmBa,EAAIK,IAC5H,kBAAC,aAAD,CAAYlB,IAAK,oBAAsBa,EAAIK,GAAIhB,QAAS,kBAAM,EAAKC,cAAc,kBAACsK,EAAD,CAASzK,IAAK,YAAYa,EAAIK,GAAIA,GAAIL,EAAIK,GAAID,UAAW,EAAKtB,MAAMsB,cAAgBhB,MAAM,yBAC3K,kBAAC,eAAD,CAAcD,IAAK,sBAAwBa,EAAIK,GAAKhB,QAAS,kBAAM,EAAKoE,WAAWzD,EAAIK,KAAMjB,MAAM,kBAbnG,EAAKJ,MAAQ,GAFI,E,iFAKE,IAAD,OAClBiC,YAAU,eAAe,CAACb,UAAUY,KAAKlC,MAAMsB,UAAUyJ,QAAO,IAAO3I,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAY5F,IAAD,OACP,OAAQH,KAAKhC,MAAM0D,KAAQ,kBAAC,gBAAD,CAAevD,IAAI,WAAWgF,OAAO,OAAOF,MAAO,CAAC,KAAK,OAAO,SAAS,WAAW,WAAW,WAAW,IAAKG,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAUrC,KAAKqC,UAChL,kBAAC,eAAD,CAAclE,IAAI,sBAAsBE,QAAS,kBAAM,EAAKgF,uBAC5D,kBAAC,YAAD,CAAWlF,IAAI,mBAAmBE,QAAS,kBAAM,EAAKC,cAAc,kBAACsK,EAAD,CAASzK,IAAK,uBAAyBsF,cAAOpE,GAAG,MAAMD,UAAW,EAAKtB,MAAMsB,cAAgBhB,MAAM,aAEtK,kBAAC,UAAD,U,GAxBkBsC,aA8BhBkI,E,YACL,WAAY9K,GAAO,IAAD,8BACjB,4CAAMA,KASP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WAVlE,EAYlB2C,WAAa,kBAAM1D,YAAU,eAAD,aAAiB2D,GAAG,UAAa,EAAK5F,MAAM0D,OAAOxB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OAV3G,EAAKnC,MAAQ,GAFI,E,iFAKE,IAAD,OAClBiC,YAAU,eAAe,CAACZ,GAAGW,KAAKlC,MAAMuB,GAAID,UAAUY,KAAKlC,MAAMsB,YAAYc,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,MAC1GF,YAAU,eAAe,CAACb,UAAUY,KAAKlC,MAAMsB,UAAW0J,OAAM,IAAO5I,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAACiJ,KAAK5I,EAAOuB,Y,+BAOxG,IAAD,OACR,GAAI1B,KAAKhC,MAAM0D,MAAQ1B,KAAKhC,MAAM+K,KAAK,CACtC,IAAMC,EAAWhJ,KAAKhC,MAAM+K,KAAKhB,MAAK,SAAAlJ,GAAG,OAAIoJ,SAASpJ,EAAIO,aAAe6I,SAAS,EAAKjK,MAAM0D,KAAKgH,WAC9FO,EAAQ,GACZ,GAAID,EACH,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAASC,MAAOC,IACnCD,EAAME,KAAK,CAAC9J,GAAG6J,EAAE1J,KAAKwJ,EAAS,GAAD,OAAIE,EAAJ,iBAEhC,OAAO,6BAAS/H,UAAU,QACzB,mCACA,kBAAC,cAAD,CAAahD,IAAI,YAChB,kBAAC,YAAD,CAAWA,IAAI,aAAakB,GAAG,OAAO2B,MAAOhB,KAAKhC,MAAM0D,KAAKlC,KAAMqB,SAAUb,KAAKa,WAClF,kBAAC,cAAD,CAAa1C,IAAI,eAAekB,GAAG,SAAS+B,MAAM,MAAMJ,MAAOhB,KAAKhC,MAAM0D,KAAKgH,OAAQ7H,SAAUb,KAAKa,UAAWb,KAAKhC,MAAM+K,KAAKhK,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,gBAAgBc,EAAK+B,MAAOhC,EAAII,WAAYJ,EAAIQ,UAC/M,kBAAC,cAAD,CAAarB,IAAI,iBAAiBkB,GAAG,WAAW+B,MAAM,OAAOJ,MAAOhB,KAAKhC,MAAM0D,KAAKiH,SAAU9H,SAAUb,KAAKa,UAAWoI,EAAMlK,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,kBAAkBc,EAAK+B,MAAOhC,EAAIK,IAAKL,EAAIQ,UACvM,kBAAC,YAAD,CAAWrB,IAAI,iBAAiBkB,GAAG,WAAW+B,MAAM,OAAOJ,MAAOhB,KAAKhC,MAAM0D,KAAKoE,SAAUjF,SAAUb,KAAKa,YAE5G,kBAAC,aAAD,CAAY1C,IAAI,iBAAiBE,QAAS,kBAAM,EAAKsF,cAAcvF,MAAM,SACzE,kBAAC,SAAD,CAAQD,IAAI,eAAegC,OAASH,KAAKhC,MAAMkJ,OAAWlH,KAAKhC,MAAMmC,OAAU6G,KAAKC,UAAUjH,KAAKhC,MAAMmC,QAAS6G,KAAKC,UAAUjH,KAAKhC,MAAMkJ,QAAU,MAGvJ,OAAO,kBAAC,UAAD,U,GAnCYxG,aAyChB4G,E,YACL,WAAYxJ,GAAO,IAAD,8BACjB,4CAAMA,KAQPsL,SAAW,SAACC,GAAD,OAAWpJ,YAAU,sBAAsB,CAACb,UAAU,EAAKtB,MAAMsB,YAAYc,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAUuJ,EAAD,eAAalJ,EAAb,CAAoBA,OAAO,GAAGmJ,QAAQ,KAAMnJ,OAT/I,EAWlB7B,cAAgB,SAACuB,GAAD,OAAU,EAAK/B,MAAMY,WAAWmB,IAX9B,EAalB4C,WAAa,SAACpD,GAAD,OAASqD,OAAOC,QAAQ,oCAAsC1C,YAAU,wBAAyB,CAACZ,GAAGA,IAAKa,MAAK,SAAAC,GAAM,OAAIA,EAAOyC,SAAW,EAAK9C,SAAS,CAAC4B,KAAK,EAAK1D,MAAM0D,KAAKmB,QAAO,SAAA7D,GAAG,OAAKA,EAAIK,KAAOA,KAAKU,QAAQ,WAbjN,EAelBwJ,YAAc,kBAAMtJ,YAAU,wBAAwB,CAACb,UAAU,EAAKtB,MAAMsB,YAAYc,MAAK,SAAAC,GAAY,EAAKL,SAASK,GAAS,EAAKiJ,eAfnH,EAiBlB/G,SAAW,SAACrD,GAAD,MAAS,CAACA,EAAIK,GAAGL,EAAIwK,YAAYxK,EAAIyK,KAAKzK,EAAIQ,KAAKR,EAAIoJ,IAAI,kBAAC,WAAD,CAAUjK,IAAK,kBAAoBa,EAAIK,IAC5G,kBAAC,aAAD,CAAYlB,IAAK,sBAAwBa,EAAIK,GAAIhB,QAAS,kBAAM,EAAKC,cAAc,kBAACoL,EAAD,CAAgBvL,IAAK,mBAAmBa,EAAIK,GAAIA,GAAIL,EAAIK,GAAID,UAAW,EAAKtB,MAAMsB,cAAgBhB,MAAM,oBAC3L,kBAAC,eAAD,CAAcD,IAAK,wBAA0Ba,EAAIK,GAAKhB,QAAS,kBAAM,EAAKoE,WAAWzD,EAAIK,KAAMjB,MAAM,yBAjBrG,EAAKJ,MAAQ,GAFI,E,iFAMjBgC,KAAKoJ,a,+BAgBG,IAAD,OACP,OAAQpJ,KAAKhC,MAAM0D,KAAQ,kBAAC,gBAAD,CAAevD,IAAI,YAAYgF,OAAO,oBAAoBF,MAAO,CAAC,KAAK,cAAc,OAAO,OAAO,MAAM,IAAKG,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAUrC,KAAKqC,SAAUlC,OAAQH,KAAKhC,MAAMmC,QAC5M,kBAAC,eAAD,CAAchC,IAAI,uBAAuBE,QAAS,kBAAM,EAAK+K,UAAS,MACtE,kBAAC,eAAD,CAAcjL,IAAI,uBAAuBE,QAAS,kBAAM,EAAKkL,eAAenL,MAAM,6BAClF,kBAAC,YAAD,CAAWD,IAAI,oBAAoBE,QAAS,kBAAM,EAAKC,cAAc,kBAACoL,EAAD,CAAgBvL,IAAK,8BAAgCsF,cAAOpE,GAAG,MAAMD,UAAW,EAAKtB,MAAMsB,cAAgBhB,MAAM,oBAErL,kBAAC,UAAD,U,GA7ByBsC,aAmCvBgJ,E,YACL,WAAY5L,GAAO,IAAD,8BACjB,4CAAMA,KAQP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WATlE,EAWlB2C,WAAa,kBAAM1D,YAAU,sBAAD,aAAwB2D,GAAG,UAAa,EAAK5F,MAAM0D,OAAOxB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OATlH,EAAKnC,MAAQ,GAFI,E,iFAKE,IAAD,OAClBiC,YAAU,sBAAsB,CAACZ,GAAGW,KAAKlC,MAAMuB,GAAID,UAAUY,KAAKlC,MAAMsB,YAAYc,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAOxG,IAAD,OACR,OAAIH,KAAKhC,MAAM0D,KACP,6BAASP,UAAU,QACzB,0CACA,kBAAC,cAAD,CAAahD,IAAI,eAChB,kBAAC,YAAD,CAAWA,IAAI,uBAAuBkB,GAAG,cAAc2B,MAAOhB,KAAKhC,MAAM0D,KAAK8H,YAAa3I,SAAUb,KAAKa,SAAUzC,MAAM,0DAC1H,kBAAC,YAAD,CAAWD,IAAI,gBAAgBkB,GAAG,OAAO2B,MAAOhB,KAAKhC,MAAM0D,KAAK+H,KAAM5I,SAAUb,KAAKa,SAAUzC,MAAM,8DACrG,kBAAC,YAAD,CAAWD,IAAI,gBAAgBkB,GAAG,OAAO2B,MAAOhB,KAAKhC,MAAM0D,KAAKlC,KAAMqB,SAAUb,KAAKa,SAAUzC,MAAM,oBACrG,kBAAC,YAAD,CAAWD,IAAI,eAAekB,GAAG,MAAM2B,MAAOhB,KAAKhC,MAAM0D,KAAK0G,IAAKvH,SAAUb,KAAKa,YAEnF,kBAAC,aAAD,CAAY1C,IAAI,oBAAoBE,QAAS,kBAAM,EAAKsF,cAAcvF,MAAM,SAC5E,kBAAC,SAAD,CAAQD,IAAI,kBAAkBgC,OAASH,KAAKhC,MAAMkJ,QAAWlH,KAAKhC,MAAMmC,OAAU6G,KAAKC,UAAUjH,KAAKhC,MAAMmC,QAA6C6G,KAAKC,UAAUjH,KAAKhC,MAAMkJ,WAG7K,kBAAC,UAAD,U,GA5BmBxG,aAkCvB2F,E,YACL,WAAYvI,GAAO,IAAD,8BACjB,4CAAMA,KAQP6L,aAAe,SAAC/F,EAAGgG,GACdlH,OAAOC,QAAQiH,KAClB,EAAK9J,SAAS,CAAC+J,KAAK,kBAAC,UAAD,QACpB5J,YAAU,qBAAqB,CAACZ,GAAG,EAAKvB,MAAMuB,GAAIyK,UAAUlG,IAAK1D,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAL,eAAkBK,EAAlB,CAAyB0J,KAAK,aAZ9F,EAgBlBE,aAAe,SAAC1K,EAAGuE,EAAGgG,GACjBlH,OAAOC,QAAQiH,KAClB,EAAK9J,SAAS,CAAC+J,KAAK,kBAAC,UAAD,QACpB5J,YAAU,qBAAqB,CAACZ,GAAG,EAAKvB,MAAMuB,GAAI2K,OAAOpG,EAAIqG,OAAO5K,IAAKa,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAL,eAAkBK,EAAlB,CAAyB0J,KAAK,aAnBtG,EAuBlBK,YAAc,SAAC7K,GAAD,OAAQE,QAAQ4K,IAAI,sBArBjC,EAAKnM,MAAQ,CAAC2H,KAAK,IAFF,E,iFAKE,IAAD,OAClB1F,YAAU,qBAAqB,CAACZ,GAAGW,KAAKlC,MAAMuB,KAAKa,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAmBvE,IAAD,OACR,OACC,6BAASgB,UAAU,QAClB,8CACA,kBAAC,cAAD,CAAahD,IAAI,SAChB,2BAAOiM,QAAQ,UAAf,WAAuC,kBAAC,eAAD,CAAc/K,GAAG,SAASlB,IAAI,iBAAiBE,QAAS,kBAAM,EAAKsL,aAAa,SAAS,mBAAmBvL,MAAM,mBACzJ,2BAAOgM,QAAQ,YAAf,aAA2C,kBAAC,iBAAD,CAAgB/K,GAAG,WAAWlB,IAAI,mBAAmBE,QAAS,kBAAM,EAAKsL,aAAa,WAAW,qBAAqBvL,MAAM,aACtK4B,KAAKhC,MAAM2H,KAAK5G,KAAI,SAAA6G,GACpB,MAAiB,QAAdA,EAAI5H,MACC,kBAAC,WAAD,CAAUG,IAAK,WAAWyH,EAAIvG,IAAI,2BAAO+K,QAASxE,EAAIvG,IAAKuG,EAAIpG,MAAa,kBAAC,cAAD,CAAarB,IAAK,gBAAgByH,EAAIvG,GAAIA,GAAIuG,EAAIvG,GAAIhB,QAAS,kBAAM,EAAK0L,aAAanE,EAAIvG,GAAG,KAAK,kBAAkBjB,MAAM,cACxL,OAAdwH,EAAI5H,MACL,kBAAC,WAAD,CAAUG,IAAK,WAAWyH,EAAIvG,IAAI,2BAAO+K,QAASxE,EAAIvG,IAAKuG,EAAIpG,MAAa,kBAAC,iBAAD,CAAgBrB,IAAK,eAAeyH,EAAIvG,GAAIA,GAAIuG,EAAIvG,GAAIhB,QAAS,kBAAM,EAAK0L,aAAanE,EAAIvG,GAAG,MAAM,mBAAmBjB,MAAM,eAE3M,kBAAC,WAAD,CAAUD,IAAK,WAAWyH,EAAIvG,IAAI,2BAAO+K,QAASxE,EAAIvG,IAAKuG,EAAIpG,MAAa,kBAAC,eAAD,CAAcrB,IAAK,iBAAiByH,EAAIvG,GAAIA,GAAIuG,EAAIvG,GAAIhB,QAAS,kBAAM,EAAK6L,YAAYtE,EAAIvG,KAAKjB,MAAM,sBAG7L,kBAAC,SAAD,CAAQD,IAAI,YAAYgC,OAAQ6G,KAAKC,UAAUjH,KAAKhC,MAAMmC,UACzDH,KAAKhC,MAAM6L,U,GA3CMnJ,aAkDT6F,EAAb,2MAKC8D,SAAW,kBAAMpK,YAAU,uBAAuB,CAACZ,GAAG,EAAKvB,MAAMuB,KAAKa,MAAK,SAAAC,GAAM,OAAKA,EAAOyC,SAAW,EAAK9C,SAAS,CAAC4B,KAAK,SAL7H,mFACqB,IAAD,OAClBzB,YAAU,qBAAqB,CAACZ,GAAGW,KAAKlC,MAAMuB,KAAKa,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,QAFlF,+BAOW,IAAD,OACR,OAASH,KAAKhC,MAAuB,kBAAC,gBAAD,CAAeG,IAAI,aAAagF,OAAO,UAAUF,MAAO,CAAC,OAAO,WAAYG,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAU,SAACrD,GAAD,MAAS,CAACA,EAAIsL,KAAKtL,EAAIuL,WACzK,kBAAC,eAAD,CAAcpM,IAAI,oBAAoBE,QAAS,kBAAM,EAAKgM,YAAYjM,MAAM,uBADtD,kBAAC,UAAD,UARzB,GAA0BsC,aAgBpB4F,E,4LACe,IAAD,OAClBrG,YAAU,oCAAoC,CAACZ,GAAGW,KAAKlC,MAAMuB,KAAKa,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAI/F,OAASH,KAAKhC,MAAuB,iCAAiC,OAAtBgC,KAAKhC,MAAMwM,OAAmBxK,KAAKhC,MAAM0D,KAAK3C,KAAI,SAACC,EAAIC,GAAL,OAAa,uBAAGd,IAAK,QAAQc,GAAMD,MAAY,2BAAIgB,KAAKhC,MAAMyM,OAAzI,kBAAC,UAAD,U,GANF/J,aAYV8C,EAAb,YACC,WAAY1F,GAAO,IAAD,8BACjB,4CAAMA,KAIP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WALlE,EAalB0J,UAAY,WACP,EAAK1M,MAAM0D,KAAKxC,UACnBe,YAAU,iBAAiB,EAAKjC,MAAM0D,MAAMxB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAACK,OAAO6G,KAAKC,UAAU9G,SAfhF,EAkBlBwK,SAAW,WACN,EAAK3M,MAAM0D,KAAKkJ,iBACnB3K,YAAU,wBAAwB,CAAC4K,WAAW,EAAK7M,MAAM0D,KAAKkJ,kBAAkB1K,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,CAAsBK,GAAG5B,EAAO4B,WAlBnJ,EAAK/D,MAAQ,CAAC0D,KAAK,CAACK,GAAG,EAAKjE,MAAMiE,GAAG4C,IAAI,oBAAoBN,MAAM,SAASuG,gBAAgB,EAAK9M,MAAM8M,gBAAgB1L,SAAS,IAAKgF,OAAM,GAF1H,EADnB,iFAQqB,IAAD,OAClBjE,YAAU,sBAAsB,CAAC4C,OAAO,YAAY3C,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAAC+H,QAAQ1H,EAAOuB,UACjGzB,YAAU,yBAAyBC,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAACgL,SAAS3K,EAAOuB,UACjFzB,YAAU,yBAAyBC,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAACkF,QAAQ7E,EAAOuB,YAXlF,+BAwBW,IAAD,OACR,OAAK1B,KAAKhC,MAAM6J,SAAY7H,KAAKhC,MAAMgH,SAAYhF,KAAKhC,MAAM8M,SAI5D,6BAAS3J,UAAU,QAClB,0CACA,kBAAC,cAAD,CAAahD,IAAI,cAChB,kBAAC,YAAD,CAAWA,IAAI,WAAWkB,GAAG,WAAW2B,MAAOhB,KAAKhC,MAAM0D,KAAKxC,SAAUmC,YAAY,kBAAkBR,SAAUb,KAAKa,WACtH,kBAAC,cAAD,CAAa1C,IAAI,QAAQkB,GAAG,QAAQ2B,MAAOhB,KAAKhC,MAAM0D,KAAK2C,MAAOxD,SAAUb,KAAKa,UAAWb,KAAKhC,MAAMgH,QAAQjG,KAAI,SAAAC,GAAG,OAAI,4BAAQb,IAAK,YAAYa,EAAKgC,MAAOhC,GAAMA,OACrK,kBAAC,cAAD,CAAab,IAAI,kBAAkBkB,GAAG,kBAAkB+B,MAAM,UAAUJ,MAAOhB,KAAKhC,MAAM0D,KAAKkJ,gBAAiB/J,SAAUb,KAAKa,UAAWb,KAAKhC,MAAM8M,SAAS/L,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,UAAUc,EAAK+B,MAAOhC,EAAIK,IAAvC,UAA+CL,EAAI+L,OAAnD,aAA8D/L,EAAIgM,YAAlE,UAC/K,kBAAC,cAAD,CAAa7M,IAAI,cAAckB,GAAG,cAAc+B,MAAM,SAASJ,MAAOhB,KAAKhC,MAAM0D,KAAK+F,YAAa5G,SAAUb,KAAKa,UAAWb,KAAKhC,MAAM6J,QAAQ9I,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,UAAUc,EAAK+B,MAAOhC,EAAIK,IAAKL,EAAIQ,UACjN,kBAAC,YAAD,CAAWrB,IAAI,KAAKkB,GAAG,KAAK+B,MAAM,KAAKJ,MAAOhB,KAAKhC,MAAM0D,KAAKK,GAAIlB,SAAUb,KAAKa,WACjF,kBAAC,YAAD,CAAW1C,IAAI,MAAMkB,GAAG,MAAM+B,MAAM,MAAMJ,MAAOhB,KAAKhC,MAAM0D,KAAKiD,IAAK9D,SAAUb,KAAKa,YAEtF,kBAAC,cAAD,CAAa1C,IAAI,eAAeE,QAAS,kBAAM,EAAKqM,aAAatM,MAAM,eACvE,kBAAC,eAAD,CAAcD,IAAI,gBAAgBE,QAAS,kBAAM,EAAKsM,YAAYvM,MAAM,sBACxE,kBAAC,SAAD,CAAQD,IAAI,YAAYgC,OAAQH,KAAKhC,MAAMmC,UAftC,kBAAC,UAAD,UA1BV,GAAyBO,aAiDnBgD,E,YACL,WAAY5F,GAAO,IAAD,8BACjB,4CAAMA,KASP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAL,eAAgBgB,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,SAVxC,EAYlB1C,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAVhD,EAAK7B,MAAQ,CAAC4M,qBAAgBxK,EAAUqH,iBAAYrH,EAAUL,QAAQ,MAFrD,E,iFAKE,IAAD,OAClBE,YAAU,yBAAyBC,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAACgL,SAAS3K,EAAOuB,UACjFzB,YAAU,sBAAsB,CAAC4C,OAAO,YAAY3C,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAAC+H,QAAQ1H,EAAOuB,Y,6BAO3F5D,GACN,OAAQ,6BAASqD,UAAU,QAAO,6BAAM6F,KAAKC,UAAUnJ,EAAMqC,OAAO,KAAK,O,qCAG3D,IAAD,OACbH,KAAKF,SAAS,CAACC,QAAQ,kBAAC,UAAD,QACvBE,YAAU,sBAAsB,CAAC4K,WAAW7K,KAAKhC,MAAM4M,gBAAiBnD,YAAYzH,KAAKhC,MAAMyJ,cAAcvH,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAACC,QAAQ,6BAASoB,UAAU,QAAO,6BAAM6F,KAAKC,UAAU9G,EAAO,KAAK,Y,+BAGrM,IAAD,OACR,OAAIH,KAAKhC,MAAM8M,UAAY9K,KAAKhC,MAAM6J,QAEpC,kBAAC,WAAD,CAAU1J,IAAI,eACb,6BAASgD,UAAU,QAClB,gDACA,kBAAC,cAAD,CAAahD,IAAI,cAChB,kBAAC,cAAD,CAAaA,IAAI,kBAAkBkB,GAAG,kBAAkB+B,MAAM,UAAUJ,MAAOhB,KAAKhC,MAAM4M,gBAAiB/J,SAAUb,KAAKa,UAAWb,KAAKhC,MAAM8M,SAAS/L,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,UAAUc,EAAK+B,MAAOhC,EAAIK,IAAvC,UAA+CL,EAAI+L,OAAnD,aAA8D/L,EAAIgM,YAAlE,UAC1K,kBAAC,cAAD,CAAa7M,IAAI,cAAckB,GAAG,cAAc+B,MAAM,SAASJ,MAAOhB,KAAKhC,MAAMyJ,YAAa5G,SAAUb,KAAKa,UAAWb,KAAKhC,MAAM6J,QAAQ9I,KAAI,SAACC,EAAIC,GAAL,OAAa,4BAAQd,IAAK,UAAUc,EAAK+B,MAAOhC,EAAIK,IAAKL,EAAIQ,WAE7M,kBAAC,cAAD,CAAarB,IAAI,eAAeE,QAAS,kBAAM,EAAK4M,gBAAgB7M,MAAM,qBAE3E,kBAAC,IAAD,CAAQD,IAAI,gBAAgBkB,GAAG,kBAC9BW,KAAKhC,MAAM+B,SAIP,kBAAC,UAAD,U,GAzCaW,aA+CVwK,EAAb,2MAKC7I,SAAW,SAACrD,GAAD,MAAS,CAACA,EAAIK,GAAGL,EAAIE,SAASF,EAAIqF,MAAMrF,EAAI+C,GAAG/C,EAAI2F,IAAI3F,EAAIqJ,IAAIrJ,EAAImG,MAAMnG,EAAIoJ,IAAIpJ,EAAIqG,OAAO7C,mBAAS,CAACxE,MAAMgB,EAAIhB,UAL5H,mFACqB,IAAD,OAClBiC,YAAU,kBAAmB,CAAEmE,MAAM,CAAC,SAAS,OAAO,MAAM,MAAM,WAAWlE,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,QAF5G,+BAQE,OAASH,KAAKhC,MAAuB,kBAAC,gBAAD,CAAeG,IAAI,SAASgF,OAAO,UAAUF,MAAO,CAAC,KAAK,WAAW,QAAQ,KAAK,MAAM,MAAM,QAAQ,MAAM,SAAS,SAAUG,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAUrC,KAAKqC,WAApL,kBAAC,UAAD,UARzB,GAA4B3B,aActB/B,E,YACL,WAAYb,GAAO,IAAD,8BACjB,4CAAMA,KAQPQ,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAT/B,EAWlBnB,WAAa,SAACmB,GAAD,OAAU,EAAK/B,MAAMY,WAAWmB,IAX3B,EAalBwC,SAAW,SAACrD,GAAD,MAAS,CAACA,EAAImM,KAAK,kBAAC,aAAD,CAAY7I,KAAMtD,EAAIQ,KAAMnB,QAAS,kBAAM,EAAKK,WAAW,kBAACH,EAAD,CAAMJ,IAAI,cAAc8C,MAAM,OAAOC,OAAQlC,EAAIQ,WAAcR,EAAIoM,OAX3J,EAAKpN,MAAQ,GAFI,E,iFAKE,IAAD,OAClBiC,YAAU,wBAAwBC,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAU/D,OAAQH,KAAKhC,MAAM0D,KAAQ,kBAAC,WAAD,CAAUvD,IAAI,mBACxC,kBAAC,cAAD,CAAaA,IAAI,YAAYgF,OAAO,eAAeF,MAAO,CAAC,QAAQ,OAAO,QAASG,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAUrC,KAAKqC,WAC1H,kBAAC,cAAD,CAAalE,IAAI,aAAa6B,KAAKhC,MAAM+B,UAC5B,kBAAC,UAAD,U,GApBOW,aA0BjB9B,E,YACL,WAAYd,GAAO,IAAD,8BACjB,4CAAMA,KAQPuN,WAAa,kBAAMpL,YAAU,wBAAwB,CAAC2D,GAAG,SAAS1D,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OAT7E,EAWlBkC,SAAW,SAACrD,GAAD,MAAS,CAACA,EAAIK,GAAGL,EAAIQ,KAAKR,EAAIM,KAAK,kBAAC,WAAD,CAAUnB,IAAK,MAAQa,EAAIK,IACxE,kBAAC,kBAAD,CAAiBlB,IAAK,eAAiBa,EAAIK,GAAIhB,QAAS,kBAAM,EAAKC,cAAc,kBAACgN,EAAD,CAAWnN,IAAK,cAAca,EAAIK,GAAIA,GAAIL,EAAIK,OAASjB,MAAM,2BAC9I,kBAAC,eAAD,CAAcD,IAAK,iBAAmBa,EAAIK,GAAKhB,QAAS,kBAAM,EAAKoE,WAAWzD,EAAIK,KAAMjB,MAAM,oBAb7E,EAgBlBE,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAhB/B,EAiBlB4C,WAAa,SAACpD,GAAD,OAASqD,OAAOC,QAAQ,yBAA2B1C,YAAU,0BAA2B,CAACZ,GAAGA,IAAKa,MAAK,SAAAC,GAAM,OAAIA,EAAOyC,SAAW,EAAK9C,SAAS,CAAC4B,KAAK,EAAK1D,MAAM0D,KAAKmB,QAAO,SAAA7D,GAAG,OAAKA,EAAIK,KAAOA,KAAKU,QAAQ,WAfzN,EAAK/B,MAAQ,GAFI,E,iFAKE,IAAD,OAClBiC,YAAU,yBAAyBC,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAL,eAAkBK,EAAlB,CAAyBA,OAAO,a,+BAa1E,IAAD,OACP,OAAQH,KAAKhC,MAAM0D,KAAQ,kBAAC,WAAD,CAAUvD,IAAI,mBACxC,kBAAC,cAAD,CAAaA,IAAI,YAAYgF,OAAO,gBAAgBF,MAAO,CAAC,KAAK,QAAQ,OAAO,IAAKG,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAUrC,KAAKqC,SAAUlC,OAAQH,KAAKhC,MAAMmC,QACxJ,kBAAC,eAAD,CAAchC,IAAI,gBAAgBE,QAAS,kBAAM,EAAKgF,uBACtD,kBAAC,aAAD,CAAYlF,IAAI,eAAeE,QAAS,kBAAM,EAAKgN,cAAejN,MAAM,mBAEzE,kBAAC,cAAD,CAAaD,IAAI,aAAa6B,KAAKhC,MAAM+B,UAC5B,kBAAC,UAAD,U,GA3BQW,aAiCX4K,EAAb,YACC,WAAYxN,GAAO,IAAD,8BACjB,4CAAMA,KAIP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WALlE,EAOlB2C,WAAa,kBAAO1D,YAAU,wBAAD,aAA0B2D,GAAG,UAAa,EAAK5F,MAAM0D,OAAOxB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OALrH,EAAKnC,MAAQ,CAAC0D,KAAK,KAAMwC,OAAM,GAFd,EADnB,iFAUqB,IAAD,OAClBjE,YAAU,wBAAwB,CAACZ,GAAGW,KAAKlC,MAAMuB,KAAKa,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,QAXrF,+BAcW,IAAD,OACR,OAAIH,KAAKhC,MAAM0D,KAEb,6BAASP,UAAU,QAClB,4CACA,kBAAC,cAAD,CAAahD,IAAI,cAChB,kBAAC,WAAD,CAAUA,IAAI,OAAOkB,GAAG,OAAOiD,KAAMtC,KAAKhC,MAAM0D,KAAKlC,OACrD,kBAAC,WAAD,CAAUrB,IAAI,OAAOkB,GAAG,OAAOiD,KAAMtC,KAAKhC,MAAMoG,MAAM9E,OACtD,kBAAC,YAAD,CAAWnB,IAAI,gBAAgBkB,GAAG,gBAAgB+B,MAAM,eAAeJ,MAAOhB,KAAKhC,MAAM0D,KAAK6J,cAAe1K,SAAUb,KAAKa,WAC5H,kBAAC,YAAD,CAAW1C,IAAI,aAAakB,GAAG,aAAa+B,MAAM,cAAcJ,MAAOhB,KAAKhC,MAAM0D,KAAK8J,WAAY3K,SAAUb,KAAKa,YAEnH,2BAAOM,UAAU,OAAOiJ,QAAQ,cAAhC,eACA,8BAAUjJ,UAAU,OAAO9B,GAAG,aAAaG,KAAK,aAAaqB,SAAUb,KAAKa,SAAUG,MAAOhB,KAAKhC,MAAM0D,KAAK+J,aAC7G,kBAAC,aAAD,CAAYtN,IAAI,cAAcE,QAAS,kBAAM,EAAKsF,cAAcvF,MAAM,UAIjE,kBAAC,UAAD,UA/BV,GAA+BsC,aAqCzBjB,E,YACL,WAAY3B,GAAO,IAAD,8BACjB,4CAAMA,KAIP+C,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WALlE,EAOlB0K,UAAY,WACXzL,YAAU,sBAAsB,CAACoI,IAAI,EAAKrK,MAAM0D,KAAK2G,MAAMnI,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAAS,CAACC,QAAQ,iCAAS,yBAAKoB,UAAU,aAAY,2BAAOiJ,QAAQ,OAAf,QAAiC,0BAAM/K,GAAG,OAAOc,EAAOuB,KAAK2G,KAAW,2BAAO+B,QAAQ,WAAf,YAAyC,0BAAM/K,GAAG,WAAWc,EAAOuB,KAAKiK,iBANtR,EAAK3N,MAAQ,CAAC0D,KAAK,CAAC2G,IAAI,IAAItI,QAAQ,MAFnB,E,sEAWR,IAAD,OACR,OAAQ,yBAAKoB,UAAU,WACtB,6BAASA,UAAU,aAClB,0CACA,6BACC,kFAAuD,2BAAO7B,KAAK,OAAOD,GAAG,MAAMG,KAAK,MAAMoM,SAAS,WAAW/K,SAAUb,KAAKa,SAAUG,MAAOhB,KAAKhC,MAAM0D,KAAK2G,IAAKhH,YAAY,cACnL,kBAAC,eAAD,CAAclD,IAAI,iBAAiBE,QAAS,kBAAM,EAAKqN,aAAatN,MAAM,qBAG3E4B,KAAKhC,MAAM+B,a,GArBSW,aA4BlBhB,E,YACL,WAAY5B,GAAO,IAAD,8BACjB,4CAAMA,KACDE,MAAQ,GAFI,E,iFAKE,IAAD,OAClBiC,YAAU,uBAAuBC,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAI9D,OAAIH,KAAKhC,MAAM0D,KACP,6BAASP,UAAU,SACzB,mCACA,yBAAKA,UAAU,SACd,yBAAKA,UAAU,SACd,oCAAc,yCAEf,yBAAKA,UAAU,SACbnB,KAAKhC,MAAM0D,KAAK3C,KAAI,SAACC,EAAI6M,GAAL,OAAe,yBAAK1N,IAAK,MAAM0N,GAAO,uCAAS7M,EAAIqJ,IAAIyD,UAAU,EAAE,GAA7B,YAAmC9M,EAAIqJ,IAAIyD,UAAU,EAAE,GAAvD,YAA6D9M,EAAIqJ,IAAIyD,UAAU,EAAE,KAAW,6BAAM9M,EAAI2M,gBAK7J,kBAAC,UAAD,U,GAxBYjL,aA8BhB8G,E,4LACe,IAAD,OAClBvH,YAAU,sBAAsB,CAAC2D,GAAG5D,KAAKlC,MAAM8F,GAAIvE,GAAGW,KAAKlC,MAAMuB,GAAIC,KAAKU,KAAKlC,MAAMwB,OAAOY,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,Q,+BAGzH,GAAKH,KAAKhC,MAEL,IAA0B,OAAtBgC,KAAKhC,MAAMwM,OAAgB,CACnC,GAAGxK,KAAKhC,MAAM0D,KAAK5C,OAAS,EAAE,CAC7B,IAAMiN,EAAOzI,OAAO0I,KAAKhM,KAAKhC,MAAM0D,KAAK,IACzC,OAAO,kBAAC,gBAAD,CAAevD,IAAI,QAAQ8E,MAAO8I,EAAM3I,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAU,SAACrD,GAAD,OAAS+M,EAAKhN,KAAI,SAAAkN,GAAE,OAAIjN,EAAIiN,SAE7G,OAAO,4CAER,OAAO,iCAAS,gDAAsBjM,KAAKhC,MAAMyM,OARjD,OAAO,kBAAC,UAAD,U,GANa/J,c,0PCz0BV7C,EAAb,YACC,WAAYC,GAAO,IAAD,8BACjB,4CAAMA,KAIPQ,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAASD,IAHvC,EAAK7B,MAAQ,kBAACO,EAAD,CAAMJ,IAAI,aAFN,EADnB,sEASE,OAAQ,kBAAC,WAAD,CAAUA,IAAI,aAAa6B,KAAKhC,WAT1C,GAA0B0C,aAebnC,EAAb,YACC,WAAYT,GAAO,IAAD,8BACjB,4CAAMA,KASPuE,SAAW,SAACrD,GAAD,MAAS,CAACA,EAAIK,GAAGL,EAAIQ,KAAK,kBAAC,WAAD,CAAUrB,IAAI,cAClD,kBAAC,aAAD,CAAYA,IAAK,cAAca,EAAIK,GAAIhB,QAAS,kBAAM,EAAKC,cAAc,kBAAC4N,EAAD,CAAM/N,IAAK,YAAYa,EAAIK,GAAIA,GAAIL,EAAIK,GAAIX,WAAY,EAAKJ,cAAegB,KAAK,UAAWlB,MAAM,sBAC1K,kBAAC,gBAAD,CAAeD,IAAK,cAAca,EAAIK,GAAIhB,QAAS,kBAAM,EAAKC,cAAc,kBAAC6N,EAAD,CAAMhO,IAAK,YAAYa,EAAIK,GAAIA,GAAIL,EAAIK,SACnH,kBAAC,eAAD,CAAclB,IAAK,cAAca,EAAIK,GAAKhB,QAAS,kBAAM,EAAKoE,WAAWzD,EAAIK,UAb5D,EAgBlBf,cAAgB,SAACuB,GAAD,OAAU,EAAKC,SAAS,CAACC,QAAQF,KAhB/B,EAiBlB4C,WAAa,SAACpD,GAAD,OAASqD,OAAOC,QAAQ,gBAAkB1C,YAAU,uBAAwB,CAACZ,GAAGA,IAAKa,MAAK,SAAAC,GAAM,OAAIA,EAAOyC,SAAW,EAAK9C,SAAS,CAAC4B,KAAK,EAAK1D,MAAM0D,KAAKmB,QAAO,SAAA7D,GAAG,OAAKA,EAAIK,KAAOA,KAAKU,QAAQ,WAf7M,EAAK/B,MAAQ,GAFI,EADnB,iFAMqB,IAAD,OAClBiC,YAAU,sBACRC,MAAK,SAACC,GAAa,EAAKL,SAASK,QARrC,+BAoBU,IAAD,OACP,OAAO,kBAAC,WAAD,CAAUhC,IAAI,eACpB,kBAAC,cAAD,CAAaA,IAAI,QAAQgF,OAAO,OAAOF,MAAO,CAAC,KAAK,OAAO,IAAKG,MAAOpD,KAAKhC,MAAM0D,KAAMW,SAAUrC,KAAKqC,UACtG,kBAAC,eAAD,CAAclE,IAAI,gBAAgBE,QAAS,kBAAM,EAAKgF,wBAEvD,kBAAC,cAAD,CAAalF,IAAI,SAAS6B,KAAKhC,MAAM+B,cAzBxC,GAA0BW,aAgCpByL,E,2MAcLC,YAAc,SAACC,GACd9M,QAAQ4K,IAAI,cAAckC,EAAOC,OAC7BD,EAAOC,MAAM,IAChBrM,YAAU,wBAAwB,CAACZ,GAAGgN,EAAOC,MAAM,KAAKpM,MAAK,SAAAC,GACxDA,GAA4B,OAAlBA,EAAOqK,OACjBrK,EAAOuB,KAAK0E,KAAOjG,EAAOuB,KAAK0E,IAAItH,OAAS,EAC9C4D,OAAOkE,KAAKzG,EAAOuB,KAAK0E,KAExB1D,OAAOkE,KAAK,SAAWzG,EAAOuB,KAAKmF,SAAW,IAAM1G,EAAOuB,KAAKK,GAAG,SAEpExC,QAAQ4K,IAAI,eAAiBhK,O,mFAtBb,IAAD,OACdI,EAAQP,KAAKlC,MAAMgF,eAAe,MAAS,CAACzD,GAAGW,KAAKlC,MAAMuB,IAAI,CAACG,KAAKQ,KAAKlC,MAAM0B,MACnFS,YAAU,qBAAqBM,GAC7BL,MAAK,SAAAC,GACL,IAAImM,EAAQ,IAAI5J,OAAO6J,IAAIC,QAAQrM,EAAOuB,KAAK4K,OAC3CG,EAAQ,IAAI/J,OAAO6J,IAAIC,QAAQrM,EAAOuB,KAAK+K,OAC3CC,EAAU,IAAIhK,OAAO6J,IAAII,QAAQ,EAAKC,KAAKC,YAAa,CAACP,MAAMA,EAAOG,MAAMA,GAAQtM,EAAOuB,KAAKoL,SACpGJ,EAAQK,GAAG,+BAA+B,kBAAML,EAAQM,WAAW,CAAEC,SAAS,OAC9EP,EAAQK,GAAG,eAAe,SAACV,GAAD,OAAY,EAAKD,YAAYC,W,+BAoBzD,OAAO,iCAAS,yBAAKlL,UAAU,UAAU9B,GAAG,cAAc6N,IAAI,qB,GA9B7CxM,aAoCNwL,EAAb,YACC,WAAYpO,GAAO,IAAD,8BACjB,4CAAMA,KAsBPQ,cAAgB,SAACuB,GAAD,OAAU,EAAK/B,MAAMY,WAAWmB,IAvB9B,EAyBlBgB,SAAW,SAACC,GAAD,OAAO,EAAKhB,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,eAAuBZ,EAAEC,OAAOvB,KAAMsB,EAAEC,OAAOC,WAzBlE,EA2BlBmM,YAAc,SAACrM,GACd,IAAIY,EAAI,eAAO,EAAK1D,MAAM0D,MAC1B,IACCA,EAAKZ,EAAEC,OAAOvB,MAAQwH,KAAKoG,MAAMtM,EAAEC,OAAOC,OAC1C,EAAKlB,SAAS,CAAC4B,KAAKA,IACnB,SACDnC,QAAQ4K,IAAI,qCAjCI,EAqClBxG,WAAa,kBAAM1D,YAAU,wBAAD,aAA0B2D,GAAG,UAAa,EAAK5F,MAAM0D,OAAOxB,MAAK,SAAAC,GAAM,OAAI,EAAKL,SAASK,OArCnG,EAuClBiM,YAAc,SAACC,GACd9M,QAAQ4K,IAAI,cAAckC,EAAOC,MAAM,IACpC,EAAKxO,MAAMY,YACb,EAAKJ,cAAc,kBAAC,OAAD,CAAYH,IAAK,MAAQkO,EAAOC,MAAM,GAAIjN,GAAIgN,EAAOC,MAAM,OA1C9D,EA6ClBe,WAAa,WACZ,EAAKC,MAAQ,EAAKA,KAClB,EAAKC,IAAIb,QAAQM,WAAW,CAAEQ,aAAa,CAAEC,QAAQ,EAAKH,QAC1D,EAAKxN,SAAS,CAACK,OAAO,QAAQ,EAAKmN,QAhDlB,EAmDlBI,UAAY,WACX,EAAKH,IAAIjB,MAAMqB,SAAQ,SAACC,EAAKvO,GAAN,OAAa,EAAKkO,IAAIjB,MAAMpF,OAAO,CAAC7H,GAAGA,EAAGwO,OAAQD,EAAKC,WAC9E,EAAK/N,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,CAAsB4K,MAAM,EAAKiB,IAAIjB,MAAMwB,QAAQ3N,OAAO,yBArD5D,EAwDlB4N,cAAgB,WACf,IAAMrM,EAAO,EAAK1D,MAAM0D,KACxBA,EAAKoL,QAAQG,QAAQQ,SAAW/L,EAAKoL,QAAQG,QAAQQ,QACrD,EAAKF,IAAIb,QAAQM,WAAW,CAAEC,QAAQvL,EAAKoL,QAAQG,QAAQQ,UAC3D,EAAK3N,SAAS,CAAC4B,KAAKA,EAAMsM,eAAgBtM,EAAKoL,QAAQG,QAAQQ,QAAWQ,aAAWC,cAAa/N,OAAO,WAAWuB,EAAKoL,QAAQG,QAAQQ,WA5DxH,EA+DlBU,YAAc,SAAC9B,GACd,EAAKkB,IAAIb,QAAQ0B,iBACjB,EAAKtO,SAAS,CAAC4B,KAAK,eAAI,EAAK1D,MAAM0D,KAAhB,CAAsB4K,MAAM,EAAKiB,IAAIjB,MAAMwB,MAAOrB,MAAM,EAAKc,IAAId,MAAMqB,QAAQ3N,OAAO,SAAW,EAAKoN,IAAIjB,MAAMwB,IAAIzB,EAAOC,MAAM,IAAIlL,SAjEvI,EAoElBiN,QAAU,SAAChP,GAAD,OAASA,IAAO,EAAKrB,MAAM+B,QAAW,eAAiB,UAlEhE,EAAK/B,MAAQ,CAAC+B,QAAQ,UAAWiO,eAAeE,cAAahK,OAAM,EAAMxC,KAAK,CAAClC,KAAK,OAAQW,OAAO,IACnG,EAAKoN,IAAM,CAACb,QAAQ,KAAKJ,MAAM,KAAKG,MAAM,MAC1C,EAAK6B,QAAUC,IAAMC,YACrB,EAAKlB,MAAO,EALK,EADnB,iFASqB,IAAD,OAClBrN,YAAU,wBAAwB,CAACZ,GAAGW,KAAKlC,MAAMuB,GAAGC,KAAKU,KAAKlC,MAAMwB,OAClEY,MAAK,SAACC,GACN,EAAKoN,IAAIjB,MAAQ,IAAI5J,OAAO6J,IAAIC,QAAQrM,EAAOuB,KAAK4K,OACpD,EAAKiB,IAAId,MAAQ,IAAI/J,OAAO6J,IAAIC,QAAQrM,EAAOuB,KAAK+K,OACpDtM,EAAOuB,KAAKoL,QAAQG,QAAQQ,SAAU,EACtC,EAAKF,IAAIb,QAAU,IAAIhK,OAAO6J,IAAII,QAAQ,EAAKC,KAAK6B,YAAa,CAACnC,MAAM,EAAKiB,IAAIjB,MAAOG,MAAM,EAAKc,IAAId,OAAQtM,EAAOuB,KAAKoL,SAC3H,EAAKS,IAAIb,QAAQK,GAAG,+BAA+B,kBAAM,EAAKQ,IAAIb,QAAQM,WAAW,CAAEC,SAAS,OAChG,EAAKM,IAAIb,QAAQK,GAAG,eAAe,SAACV,GAAD,OAAY,EAAKD,YAAYC,MAChE,EAAKkB,IAAIb,QAAQK,GAAG,WAAW,SAACV,GAAD,OAAY,EAAK8B,YAAY9B,MAC5DlM,EAAOuB,KAAKoL,QAAQG,QAAQQ,SAAU,EACtC,EAAK3N,SAASK,QApBlB,+BAuEU,IAAD,OACDuO,EAAgB1O,KAAKhC,MAAMgQ,eACjC,OACC,6BAAS7M,UAAU,WAClB,2CACsB,WAApBnB,KAAKlC,MAAMwB,MAAuBU,KAAKlC,MAAMY,YAAe,kBAAC,aAAD,CAAYP,IAAI,WAAWE,QAAS,kBAAM,EAAKC,cAAc,kBAAC,OAAD,CAAYH,IAAK,MAAM,EAAKL,MAAMuB,GAAIA,GAAI,EAAKvB,MAAMuB,SAChL,kBAAC,eAAD,CAAclB,IAAI,aAAaE,QAAS,kBAAM,EAAKgF,uBACnD,kBAAC,aAAD,CAAYlF,IAAI,WAAWE,QAAS,kBAAM,EAAKgP,gBAC/C,kBAACqB,EAAD,CAAevQ,IAAI,cAAcE,QAAS,kBAAM,EAAK0P,mBACrD,kBAAC,YAAD,CAAW5P,IAAI,UAAUE,QAAS,kBAAM,EAAKqP,eAC7C,kBAAC,aAAD,CAAYvP,IAAI,WAAWE,QAAS,kBAAM,EAAKsF,gBAC/C,kBAAC,gBAAD,CAAexF,IAAI,UAAUE,QAAS,kBAAM,EAAKyB,SAAS,CAACC,QAAQ,eACnE,kBAAC,aAAD,CAAY5B,IAAI,UAAUmE,KAAK,UAAUjE,QAAS,kBAAM,EAAKyB,SAAS,CAACC,QAAQ,eAC/E,kBAAC,aAAD,CAAY5B,IAAI,YAAYmE,KAAK,QAAQjE,QAAS,kBAAM,EAAKyB,SAAS,CAACC,QAAQ,aAC/E,kBAAC,aAAD,CAAY5B,IAAI,YAAYmE,KAAK,QAAQjE,QAAS,kBAAM,EAAKyB,SAAS,CAACC,QAAQ,aAC/E,2BAAOoB,UAAU,OAAOhD,IAAI,OAAOiM,QAAQ,QAA3C,SAA+D,2BAAOjM,IAAI,kBAAkBmB,KAAK,OAAOD,GAAG,OAAOG,KAAK,OAAOwB,MAAOhB,KAAKhC,MAAM0D,KAAKlC,KAAMqB,SAAUb,KAAKa,WAC1K,kBAAC,SAAD,CAAQ1C,IAAI,aAAagC,OAAQH,KAAKhC,MAAMmC,SAC5C,yBAAKgB,UAAWnB,KAAKqO,QAAQ,WAAYnB,IAAI,gBAC7C,yBAAK/L,UAAWnB,KAAKqO,QAAQ,YAAY,8BAAUhP,GAAG,UAAUG,KAAK,UAAUwB,MAAOgG,KAAKC,UAAUjH,KAAKhC,MAAM0D,KAAKoL,aAAQ1M,EAAU,GAAIS,SAAUb,KAAKmN,eAC1J,yBAAKhM,UAAWnB,KAAKqO,QAAQ,UAAU,8BAAUhP,GAAG,QAAQG,KAAK,QAAQwB,MAAOgG,KAAKC,UAAUjH,KAAKhC,MAAM0D,KAAK4K,WAAMlM,EAAU,GAAIS,SAAUb,KAAKmN,eAClJ,yBAAKhM,UAAWnB,KAAKqO,QAAQ,UAAU,8BAAUhP,GAAG,QAAQG,KAAK,QAAQwB,MAAOgG,KAAKC,UAAUjH,KAAKhC,MAAM0D,KAAK+K,WAAMrM,EAAU,GAAIS,SAAUb,KAAKmN,oBA3FtJ,GAA0BzM","file":"static/js/0.d66dc4db.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { rest_call, rnd } from './infra/Functions.js';\nimport { Spinner, StateMap, SearchField, InfoColumns, RimsContext, Result, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton, NavReload } from './infra/Navigation.js'\nimport { TextInput, TextLine, StateLine, SelectInput, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, CheckButton, ConfigureButton, ConnectionButton, DeleteButton, DevicesButton, GoButton, HeaderButton, HrefButton, InfoButton, ItemsButton, LogButton, NetworkButton, ReloadButton, SaveButton, SearchButton, ShutdownButton, StartButton, SyncButton, TermButton, UiButton } from './infra/Buttons.jsx';\n\nimport { List as VisualizeList, Edit as VisualizeEdit } from './visualize.jsx';\n\n// **************** Main ****************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  if (this.props.rack_id)\n   rest_call('api/rack/inventory',{id:this.props.rack_id}).then(result => this.compileNavItems({rack_id:this.props.rack_id, ...result}))\n  else\n   this.compileNavItems({pdu:[], console:[], name:'N/A', rack_id:undefined});\n }\n\n changeImport(module,func,args){\n  import('./'+module+'.jsx').then(lib => {\n   var Elem = lib[func];\n   this.setState({content:<Elem key={module+'_'+func} {...args} />})\n  })\n }\n\n compileNavItems = (state) => {\n  this.context.loadNavigation(<NavBar key='device_navbar'>\n   <NavDropDown key='dev_nav_devs' title='Devices'>\n    <NavDropButton key='dev_nav_list' title='List' onClick={() => this.changeContent(<List key='dl' rack_id={state.rack_id} />)} />\n    <NavDropButton key='dev_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='ds' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_types' title='Types' onClick={() => this.changeContent(<TypeList key='dtl' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_model' title='Models' onClick={() => this.changeContent(<ModelList key='dml' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_maps' title='Maps' onClick={() => this.changeContent(<VisualizeList key='visualize_list' />)} />\n   {(state.pdu.length > 0) && <NavDropDown key='dev_nav_pdus' title='PDUs'>{state.pdu.map((row,idx) => <NavDropButton key={'dev_nav_pdu_' + idx} title={row.hostname} onClick={() => this.changeImport('pdu','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(state.console.length > 0) && <NavDropDown key='dev_nav_consoles' title='Consoles'>{state.console.map((row,idx) => <NavDropButton key={'dev_nav_console_' + idx} title={row.hostname} onClick={() => this.changeImport('console','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(state.rack_id) && <NavButton key='dev_nav_rack' title={state.name} onClick={() => this.changeImport('rack','Layout',{id:state.rack_id})} />}\n   <NavDropDown key='dev_nav_oui' title='OUI'>\n    <NavDropButton key='dev_nav_ouis' title='Search' onClick={() => this.changeContent(<OUISearch key='oui_search' />)} />\n    <NavDropButton key='dev_nav_ouil' title='List' onClick={() => this.changeContent(<OUIList key='oui_list' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_resv' title='Reservations' onClick={() => this.changeImport('reservation','List',{})} style={{float:'right'}} />\n   <NavDropDown key='dev_nav_ipam' title='IPAM' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_isrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'DHCP'})} />\n    <NavDropButton key='dev_nav_nets' title='Networks' onClick={() => this.changeImport('ipam','NetworkList',{})} />\n   </NavDropDown>\n   <NavDropDown key='dev_nav_dns' title='DNS' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_dsrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'DNS'})} />\n    <NavDropButton key='dev_nav_doms' title='Domains' onClick={() => this.changeImport('dns','DomainList',{})} />\n   </NavDropDown>\n   <NavReload key='dev_nav_reload' onClick={() => this.changeContent(null)} />\n  </NavBar>)\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return  <Fragment key='main_base'>{this.state.content}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Search **************\n//\nclass Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'ip',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return (\n   <article className='lineinput'>\n    <h1>Device Search</h1>\n    <div>\n     <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n      <optgroup label='Group'>\n       <option value='hostname'>Hostname</option>\n       <option value='type'>Type</option>\n      </optgroup>\n      <optgroup label='Unique'>\n       <option value='id'>ID</option>\n       <option value='ip'>IP</option>\n       <option value='mac'>MAC</option>\n       <option value='ipam_id'>IPAM ID</option>\n      </optgroup>\n     </SelectInput>\n     <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n    </div>\n    <SearchButton key='ds_btn_search' onClick={() => this.changeContent(<List key='device_list' {...this.state} />)} title='Search devices' />\n   </article>\n  )\n }\n}\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, content:null, sort:(props.hasOwnProperty('sort')) ? props.sort : 'hostname', rack_id:this.props.rack_id, searchfield:'', field:this.props.field, search:this.props.search}\n }\n\n componentDidMount(){\n  rest_call('api/device/list', {sort:this.state.sort, rack_id:this.state.rack_id, field:this.state.field, search:this.state.search}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n searchHandler = (e) => { this.setState({searchfield:e.target.value}) }\n\n sortList = (method) => {\n  if (method === 'hostname')\n   this.state.data.sort((a,b) => a.hostname.localeCompare(b.hostname));\n  else\n   this.state.data.sort((a,b) => {\n    if (a.ip && b.ip){\n     const num1 = Number(a.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     const num2 = Number(b.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     return num1-num2;\n   } else if (a.ip)\n    return 1;\n   else\n    return a.hostname.localeCompare(b.hostname)\n   });\n  this.setState({sort:method})\n }\n\n listItem = (row) => [row.ip,<HrefButton key={'dl_btn_info_'+row.id} text={row.hostname} onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />,StateMap({state:row.state}),<Fragment key={'dl_buttons_'+row.id}>\n  <InfoButton key={'dl_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />\n  <DeleteButton key={'dl_btn_del_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete device' />\n </Fragment>]\n\n deleteList = (id) => (window.confirm('Really delete device '+id+'?') && rest_call('api/device/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  if (this.state.data){\n   let device_list = this.state.data.filter(row => row.hostname.includes(this.state.searchfield));\n   const thead = [<HeaderButton key='dl_btn_ip' text='IP' highlight={(this.state.sort === 'ip')} onClick={() => this.sortList('ip')} />,<HeaderButton key='dl_btn_hostname' text='Hostname' highlight={(this.state.sort === 'hostname')} onClick={() => this.sortList('hostname')} />,'',''];\n   return <Fragment key={'dl_fragment'}>\n    <ContentList key='dl_list' header='Device List' thead={thead} listItem={this.listItem} trows={device_list}>\n     <ReloadButton key='dl_btn_reload' onClick={() => this.componentDidMount()} />\n     <ItemsButton key='dl_btn_items' onClick={() => { Object.assign(this.state,{rack_id:undefined,field:undefined,search:undefined}); this.componentDidMount(); }} title='List all items' />\n     <AddButton key='dl_btn_add' onClick={() => this.changeContent(<New key={'dn_new_' + rnd()} id='new' />)} title='Add device' />\n     <DevicesButton key='dl_btn_devices' onClick={() => this.changeContent(<Discover key='dd' />) } title='Discover devices' />\n     <SearchField key='dl_searchfield' searchHandler={this.searchHandler} value={this.state.searchfield} placeholder='Search devices' />\n    </ContentList>\n    <ContentData key='dl_content'>{this.state.content}</ContentData>\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null, navconf:false}\n }\n\n componentDidMount(){\n  rest_call('api/device/info',{id:this.props.id, extra:['types','classes']}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n updateInfo = () => rest_call('api/device/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n reload = () => {\n  this.setState({rack:undefined,vm:undefined});\n  rest_call('api/device/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n lookupInfo = () => {\n  this.setState({content:<Spinner />,result:''})\n  rest_call('api/device/info',{id:this.props.id, op:'lookup'}).then(result => this.setState({...result,content:null}))\n }\n\n changeInterfaces = () => import('./interface.jsx').then(lib => this.changeContent(<lib.List key='interface_list' device_id={this.props.id} changeSelf={this.changeContent} />))\n\n render() {\n  if(this.state.data){\n   const data = this.state.data;\n   const extra = this.state.extra;\n   const vm = (data.class === 'vm' && this.state.vm) ? this.state.vm : false;\n   const rack = (this.state.rack && data.class !== 'vm') ? this.state.rack : false;\n   const change_self = (this.props.changeSelf);\n   const has_ip = (extra.interface_ip);\n   const function_strings = (extra.functions.length >0) ? extra.functions.split(',') : [];\n   return (\n    <Fragment key='di_fragment'>\n     <article className='info'>\n     <h1>Device</h1>\n     <InfoColumns key='di_info' className='left'>\n      <TextLine key='hostname' id='hostname' text={data.hostname} />\n      <TextInput key='mac' id='mac' label='Sys Mac' value={data.mac} title='System MAC' onChange={this.onChange} />\n      <TextLine key='if_mac' id='if_mac' label='Mgmt MAC' text={extra.interface_mac} title='Management Interface MAC' />\n      <TextLine key='if_ip' id='if_ip' label='Mgmt IP' text={extra.interface_ip} />\n      <TextLine key='snmp' id='snmp' label='SNMP' text={data.snmp} />\n      <StateLine key='state' id='state' state={[extra.if_state,extra.ip_state]} />\n     </InfoColumns>\n     <InfoColumns key='di_extra' className='left'>\n      <TextLine key='id' id='id' text={this.props.id} />\n      <SelectInput key='class' id='class' value={data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={'di_class_'+row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Type' value={data.type_id} onChange={this.onChange}>{this.state.types.map((row,idx) => <option key={'di_type_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} extra={data.model} />\n      <TextLine key='version' id='version' text={data.version} onChange={this.onChange} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n     </InfoColumns>\n     <InfoColumns key='di_rack' className='left'>\n      {rack && <TextLine key='rack_pos' id='rack_pos' label='Rack/Pos' text={`${rack.rack_name} (${rack.rack_unit})`} />}\n      {rack && <TextLine key='rack_size' id='rack_size' label='Size (U)' text={rack.rack_size} />}\n      {rack && <TextLine key='rack_con' id='rack_con' label='TS/Port' text={`${rack.console_name} (${rack.console_port})`} />}\n      {rack && this.state.pems.map(pem => <TextLine key={'pem_'+pem.id} id={'pem_'+pem.id} label={pem.name+' PDU'} text={`${pem.pdu_name} (${pem.pdu_unit})`} />)}\n     </InfoColumns>\n     <InfoColumns key='di_vm' className='left'>\n      {vm && <TextLine key='vm_name' id ='vm_name' label='VM Name' text={vm.name} />}\n      {vm && <TextLine key='vm_host' id ='vm_host' label='VM Host' text={vm.host} />}\n      {vm && <TextLine key='vm_uuid' id ='vm_uuid' label='VM UUID' text={vm.device_uuid} style={{maxWidth:170}} extra={vm.device_uuid} />}\n      {vm && <TextLine key='vm_uuhost' id ='vm_uuhost' label='Host UUID' text={vm.server_uuid} style={{maxWidth:170}} extra={vm.server_uuid} />}\n     </InfoColumns>\n     <br />\n     <InfoColumns key='di_text'>\n      <TextInput key='comment' id='comment' value={data.comment} onChange={this.onChange} />\n      <UrlInput key='url' id='url' label='URL' value={data.url} onChange={this.onChange} />\n     </InfoColumns>\n     <br />\n     <ReloadButton key='di_btn_reload' onClick={() => this.reload()} />\n     <SaveButton key='di_btn_save' onClick={() => this.updateInfo()} title='Save' />\n     <ConnectionButton key='di_btn_conn' onClick={() => this.changeInterfaces()} title='Interfaces' />\n     <StartButton key='di_btn_cont' onClick={() => this.changeContent(<Control key='device_control' id={this.props.id} />)} title='Device control' />\n     <CheckButton key='di_btn_conf' onClick={() => this.changeContent(<Template key='device_configure' id={this.props.id} />)} title='Configuration template' />\n     <ConfigureButton key='di_btn_edit' onClick={() => this.setState({navconf:!this.state.navconf})} title='Toggle config mode' />\n     {change_self && <NetworkButton key='di_btn_netw' onClick={() => this.changeSelf(<VisualizeEdit key={'ve_'+this.props.id} type='device' id={this.props.id} changeSelf={this.props.changeSelf} />)} title='Connectivity map' />}\n     {has_ip && <SearchButton key='di_btn_srch' onClick={() => this.lookupInfo()} title='Information lookup' />}\n     {has_ip && <LogButton key='di_btn_logs' onClick={() => this.changeContent(<Logs key='device_logs' id={this.props.id} />)} title='Logs' />}\n     {function_strings.includes('manage') && <GoButton key='d_btn_manage' onClick={() => this.context.changeMain({module:this.state.extra.type_base,function:'Manage',args:{device_id:this.props.id, type:this.state.extra.type_name}})} title={'Manage ' + data.hostname} />}\n     {has_ip && <TermButton key='di_btn_ssh' onClick={() => { const sshWin = window.open(`ssh://${extra.username}@${extra.interface_ip}`,'_blank'); sshWin.close(); }} title='SSH connection' />}\n     {rack && rack.console_url && <TermButton key='di_btn_console' onClick={() => { const termWin = window.open(rack.console_url,'_blank'); termWin.close(); }} title='Serial Connection' /> }\n     {data.url && <UiButton key='di_btn_ui' onClick={() => window.open(data.url,'_blank')} title='Web UI' />}\n     <Result key='dev_result' result={JSON.stringify(this.state.update)} />\n    </article>\n    <NavBar key='di_navigation' id='di_navigation'>\n     {this.state.navconf && <NavButton key='di_nav_management' title='Management' onClick={() => this.changeContent(<ManagementInfo key='device_configure' id={this.props.id} />)} />}\n     {this.state.navconf && ['infrastructure','out-of-band'].includes(data.class) && <NavButton key='di_nav_rack' title='Rack' onClick={() => this.changeContent(<RackInfo key='device_rack_info' device_id={this.props.id} />)} />}\n     {this.state.navconf && ['device','infrastructure','out-of-band'].includes(data.class) && <NavButton key='di_nav_pems' title='PEMs' onClick={() => this.changeContent(<PemList key='device_pem_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {this.state.navconf && <NavButton key='di_nav_stats' title='Statistics' onClick={() => this.changeContent(<StatisticsList key='device_statistics_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {!this.state.navconf && function_strings.filter(fun => fun !== 'manage').map((op,idx) => <NavButton key={'di_nav_'+idx} title={op} onClick={() => this.changeContent(<Function key={'dev_func_'+op} id={this.props.id} op={op} type={this.state.extra.type_name} />)} />)}\n    </NavBar>\n    {this.state.content}\n    </Fragment>\n   )\n  } else\n   return <Spinner />\n }\n}\nInfo.contextType = RimsContext;\n\n// ************* Configure *************\n//\nclass ManagementInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null}\n }\n\n componentDidMount(){\n  rest_call('api/device/extended',{id:this.props.id}).then(result => {\n   result.data.a_domain_id = this.mapDomain(result.data.management_id, result.interfaces);\n   this.setState(result)\n  });\n  rest_call('api/dns/domain_list',{filter:'forward'}).then(result => {\n   const args = {data:this.state.data, domains:result.data}\n   if (args.data)\n    args.data.a_domain_id = this.mapDomain(this.state.data.management_id,this.state.interfaces);\n   this.setState({domains:result.data})\n  });\n }\n\n onChange = (e) => {\n  const data = {...this.state.data, [e.target.name]:e.target.value}\n  if(e.target.name === 'management_id')\n   data.a_domain_id =  this.mapDomain(e.target.value,this.state.interfaces);\n  this.setState({data:data})\n }\n\n mapDomain(id,interfaces){\n  const if_obj = interfaces.find(intf => parseInt(intf.interface_id) === parseInt(id));\n  return (if_obj) ? if_obj.a_domain_id : null;\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => rest_call('api/device/extended',{op:'update', ...this.state.data}).then(result => {\n  result.data.a_domain_id = this.mapDomain(result.data.management_id,this.state.interfaces)\n  this.setState(result)\n });\n\n render() {\n  if (this.state.data && this.state.domains)\n   return <article className='info'>\n    <h1>Management Configuration</h1>\n    <InfoColumns key='d_conf_ic'>\n     <TextInput key='d_conf_hostname' id='hostname' value={this.state.data.hostname} onChange={this.onChange} />\n     <SelectInput key='d_conf_management_id' id='management_id' label='Mgmt Interface' value={this.state.data.management_id} onChange={this.onChange}>{this.state.interfaces.map((row,idx) => <option key={'de_intf_'+idx} value={row.interface_id}>{`${row.name} (${row.ip} - ${row.fqdn})`}</option>)}</SelectInput>\n     <SelectInput key='d_conf_a_domain_id' id='a_domain_id' label='Mgmt Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={'de_dom_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <TextLine key='d_conf_oid' id='oid' label='Priv OID' text={this.state.extra.oid} />\n     <TextLine key='d_conf_oui' id='oui' label='System OUI' text={this.state.extra.oui} />\n    </InfoColumns>\n    <SaveButton key='d_conf_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </article>\n  else\n   return <Spinner />\n }\n}\n\n// ************* RackInfo **************\n//\nclass RackInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/device/rack',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => rest_call('api/device/rack',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   const racked = (this.state.data.rack_id && this.state.data.rack_id !== 'NULL');\n   return <article className='info'>\n    <h1>Rack</h1>\n    <InfoColumns key='d_rack_ic'>\n     <SelectInput key='d_rack_id' id='rack_id' label='Rack ID' value={this.state.data.rack_id} onChange={this.onChange}>{this.state.racks.map((row,idx) => <option key={'d_rack_id_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     {racked && <TextInput key='d_rack_size' id='rack_size' label='Size' value={this.state.data.rack_size} onChange={this.onChange} title='Size of device in U' />}\n     {racked && <TextInput key='d_rack_unit' id='rack_unit' label='Unit' value={this.state.data.rack_unit} onChange={this.onChange} title='First unit of placement' />}\n     {racked && <SelectInput key='d_rack_con_id' id='console_id' label='Console' value={this.state.data.console_id} onChange={this.onChange}>{this.state.consoles.map((row,idx) => <option key={'d_rack_con_id_'+idx} value={row.id}>{row.hostname}</option>)}</SelectInput>}\n     {racked && <TextInput key='d_rack_con_port' id='console_port' label='Console Port' value={this.state.data.console_port} onChange={this.onChange} />}\n    </InfoColumns>\n    <SaveButton key='d_rack_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* PEMs **************\n//\nclass PemList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/pem/list',{device_id:this.props.device_id,lookup:true}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete PEM?') && rest_call('api/pem/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n listItem = (row) => [row.id,row.name,row.pdu_id,row.pdu_name,row.pdu_slot,row.pdu_unit,<Fragment key={'dev_pems_frag_' + row.id}>\n  <InfoButton key={'dev_pem_btn_info_' + row.id} onClick={() => this.changeContent(<PemInfo key={'pem_info_'+row.id} id={row.id} device_id={this.props.device_id} />)} title='Edit PEM information' />\n  <DeleteButton key={'dev_pem_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete PEM' />\n </Fragment>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='dev_pems' header='PEMs' thead={['ID','Name','PDU ID','PDU Name','PDU Slot','PDU Unit','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='dev_pems_btn_reload' onClick={() => this.componentDidMount()} />\n   <AddButton key='dev_pems_btn_add' onClick={() => this.changeContent(<PemInfo key={'device_pem_info_new_' + rnd()} id='new' device_id={this.props.device_id} />)} title='Add PEM' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n// ************* PemInfo **************\n//\nclass PemInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/pem/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n  rest_call('api/pdu/list',{device_id:this.props.device_id, empty:true}).then(result => this.setState({pdus:result.data}))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => rest_call('api/pem/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data && this.state.pdus){\n   const pdu_info = this.state.pdus.find(pdu => parseInt(pdu.device_id) === parseInt(this.state.data.pdu_id));\n   let slots = []\n   if (pdu_info){\n    for (let i = 0; i < pdu_info.slots; i++)\n     slots.push({id:i,name:pdu_info[`${i}_slot_name`]});\n   }\n   return <article className='info'>\n    <h1>PEM</h1>\n    <InfoColumns key='d_pem_ic'>\n     <TextInput key='d_pem_name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <SelectInput key='d_pem_pdu_id' id='pdu_id' label='PDU' value={this.state.data.pdu_id} onChange={this.onChange}>{this.state.pdus.map((row,idx) => <option key={'d_pem_pdu_id_'+idx} value={row.device_id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='d_pem_pdu_slot' id='pdu_slot' label='Slot' value={this.state.data.pdu_slot} onChange={this.onChange}>{slots.map((row,idx) => <option key={'d_pem_pdu_slot_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <TextInput key='d_pem_pdu_unit' id='pdu_unit' label='Unit' value={this.state.data.pdu_unit} onChange={this.onChange} />\n    </InfoColumns>\n    <SaveButton key='d_pem_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_pem_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : ''} />\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* StatisticsList **************\n//\nclass StatisticsList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.loadList()\n }\n\n loadList = (clear) => rest_call('api/statistics/list',{device_id:this.props.device_id}).then(result => this.setState((clear)? {...result,result:'',inserts:''} : result));\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete statistics point?') && rest_call('api/statistics/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n lookupStats = () => rest_call('api/statistics/lookup',{device_id:this.props.device_id}).then(result => { this.setState(result); this.loadList()} )\n\n listItem = (row) => [row.id,row.measurement,row.tags,row.name,row.oid,<Fragment key={'dev_stats_frag_' + row.id}>\n  <InfoButton key={'dev_stats_btn_info_' + row.id} onClick={() => this.changeContent(<StatisticsInfo key={'statistics_info_'+row.id} id={row.id} device_id={this.props.device_id} />)} title='Edit data point' />\n  <DeleteButton key={'dev_stats_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete data point' />\n </Fragment>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='dev_stats' header='Device statistics' thead={['ID','Measurement','Tags','Name','OID','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n   <ReloadButton key='dev_stats_btn_reload' onClick={() => this.loadList(true)} />\n   <SearchButton key='dev_stats_btn_lookup' onClick={() => this.lookupStats()} title='Lookup device type stats' />\n   <AddButton key='dev_stats_btn_add' onClick={() => this.changeContent(<StatisticsInfo key={'device_statistics_info_new_' + rnd()} id='new' device_id={this.props.device_id} />)} title='Add statistics' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n// ************* PemInfo **************\n//\nclass StatisticsInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/statistics/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => rest_call('api/statistics/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   return <article className='info'>\n    <h1>Data point</h1>\n    <InfoColumns key='dev_stat_ic'>\n     <TextInput key='dev_stat_measurement' id='measurement' value={this.state.data.measurement} onChange={this.onChange} title='Group, or measurement, that the data point belongs to' />\n     <TextInput key='dev_stat_tags' id='tags' value={this.state.data.tags} onChange={this.onChange} title='Tags are comma separated values that extend TSDB grouping' />\n     <TextInput key='dev_stat_name' id='name' value={this.state.data.name} onChange={this.onChange} title='Data point name' />\n     <TextInput key='dev_stat_oid' id='oid' value={this.state.data.oid} onChange={this.onChange} />\n    </InfoColumns>\n    <SaveButton key='dev_stat_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='dev_stat_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : JSON.stringify(this.state.update)} />\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Control **************\n//\nclass Control extends Component {\n constructor(props){\n  super(props)\n  this.state = {pems:[]}\n }\n\n componentDidMount(){\n  rest_call('api/device/control',{id:this.props.id}).then(result => this.setState(result));\n }\n\n operationDev = (op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   rest_call('api/device/control',{id:this.props.id, device_op:op}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n operationPem = (id,op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   rest_call('api/device/control',{id:this.props.id, pem_op:op, pem_id:id}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n lookupState = (id) => console.log('State lookup TODO');\n\n render() {\n  return (\n   <article className='info'>\n    <h1>Device Control</h1>\n    <InfoColumns key='dc_ic'>\n     <label htmlFor='reboot'>Reboot:</label><ReloadButton id='reboot' key='dev_ctr_reboot' onClick={() => this.operationDev('reboot','Really reboot?')} title='Restart device' />\n     <label htmlFor='shutdown'>Shutdown:</label><ShutdownButton id='shutdown' key='dev_ctr_shutdown' onClick={() => this.operationDev('shutdown','Really shutdown?')} title='Shutdown' />\n     {this.state.pems.map(pem => {\n      if(pem.state === 'off')\n       return <Fragment key={'dc_pems_'+pem.id}><label htmlFor={pem.id}>{pem.name}</label><StartButton key={'dc_btn_start_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'on','Power on PEM?')} title='Power ON' /></Fragment>\n      else if (pem.state === 'on')\n       return <Fragment key={'dc_pems_'+pem.id}><label htmlFor={pem.id}>{pem.name}</label><ShutdownButton key={'dc_btn_stop_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'off','Power off PEM?')} title='Power OFF' /></Fragment>\n      else\n       return <Fragment key={'dc_pems_'+pem.id}><label htmlFor={pem.id}>{pem.name}</label><SearchButton key={'dc_btn_lookup_'+pem.id} id={pem.id} onClick={() => this.lookupState(pem.id)} title='Lookup State' /></Fragment>\n     })}\n    </InfoColumns>\n    <Result key='dc_result' result={JSON.stringify(this.state.result)} />\n    {this.state.wait}\n   </article>)\n }\n}\n\n// ************** Logs **************\n//\nexport class Logs extends Component {\n componentDidMount(){\n  rest_call('api/device/log_get',{id:this.props.id}).then(result => this.setState(result));\n }\n\n clearLog = () => rest_call('api/device/log_clear',{id:this.props.id}).then(result => (result.deleted && this.setState({data:[]})));\n\n render() {\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_log_cr' header='Devices' thead={['Time','Message']} trows={this.state.data} listItem={(row) => [row.time,row.message]}>\n   <DeleteButton key='devlog_btn_delete' onClick={() => this.clearLog()} title='Clear device logs' />\n  </ContentReport>\n }\n}\n\n// ******** Template *********\n//\nclass Template extends Component {\n componentDidMount(){\n  rest_call('api/device/configuration_template',{id:this.props.id}).then(result => this.setState(result));\n }\n\n render() {\n  return (!this.state) ? <Spinner /> : <article>{(this.state.status === 'OK') ? this.state.data.map((row,idx) => <p key={'conf_'+idx}>{row}</p>) : <b>{this.state.info}</b>}</article>\n }\n}\n\n// ************** New **************\n//\nexport class New extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{ip:this.props.ip,mac:'00:00:00:00:00:00',class:'device',ipam_network_id:this.props.ipam_network_id,hostname:''}, found:true}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n componentDidMount(){\n  rest_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n  rest_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  rest_call('api/device/class_list').then(result => this.setState({classes:result.data}))\n }\n\n addDevice = () => {\n  if (this.state.data.hostname)\n   rest_call('api/device/new',this.state.data).then(result => this.setState({result:JSON.stringify(result)}))\n }\n\n searchIP = () => {\n  if (this.state.data.ipam_network_id)\n   rest_call('api/ipam/address_find',{network_id:this.state.data.ipam_network_id}).then(result => this.setState({data:{...this.state.data, ip:result.ip}}))\n }\n\n render() {\n  if (!this.state.domains || !this.state.classes || !this.state.networks)\n   return <Spinner />\n  else\n   return (\n    <article className='info'>\n     <h1>Device Add</h1>\n     <InfoColumns key='dn_content'>\n      <TextInput key='hostname' id='hostname' value={this.state.data.hostname} placeholder='Device hostname' onChange={this.onChange} />\n      <SelectInput key='class' id='class' value={this.state.data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={'dn_class_'+row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='ipam_network_id' id='ipam_network_id' label='Network' value={this.state.data.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={'dn_net_'+idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n      <SelectInput key='a_domain_id' id='a_domain_id' label='Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={'dn_dom_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <TextInput key='ip' id='ip' label='IP' value={this.state.data.ip} onChange={this.onChange} />\n      <TextInput key='mac' id='mac' label='MAC' value={this.state.data.mac} onChange={this.onChange} />\n     </InfoColumns>\n     <StartButton key='dn_btn_start' onClick={() => this.addDevice()} title='Add device' />\n     <SearchButton key='dn_btn_search' onClick={() => this.searchIP()} title='Find available IP' />\n     <Result key='dn_result' result={this.state.result} />\n    </article>\n   )\n }\n}\n\n// ************** Discover **************\n//\nclass Discover extends Component {\n constructor(props){\n  super(props)\n  this.state = {ipam_network_id:undefined,a_domain_id:undefined,content:null}\n }\n\n componentDidMount(){\n  rest_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  rest_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n changeContent = (elem) => this.setState({content:elem})\n\n Result(props){\n  return  <article className='code'><pre>{JSON.stringify(props.result,null,2)}</pre></article>\n }\n\n runDiscovery(){\n  this.setState({content:<Spinner />})\n  rest_call('api/device/discover',{network_id:this.state.ipam_network_id, a_domain_id:this.state.a_domain_id}).then(result => this.setState({content:<article className='code'><pre>{JSON.stringify(result,null,2)}</pre></article>}))\n }\n\n render() {\n  if (this.state.networks && this.state.domains){\n   return (\n    <Fragment key='dd_fragment'>\n     <article className='info'>\n      <h1>Device Discovery</h1>\n      <InfoColumns key='dd_content'>\n       <SelectInput key='ipam_network_id' id='ipam_network_id' label='Network' value={this.state.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={'dd_net_'+idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n       <SelectInput key='a_domain_id' id='a_domain_id' label='Domain' value={this.state.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={'dd_dom_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      </InfoColumns>\n      <StartButton key='dd_btn_start' onClick={() => this.runDiscovery()} title='Start discovery' />\n     </article>\n     <NavBar key='dd_navigation' id='dd_navigation' />\n     {this.state.content}\n    </Fragment>\n   )\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n componentDidMount(){\n  rest_call('api/device/list', { extra:['system','type','mac','oui','class']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.hostname,row.class,row.ip,row.mac,row.oui,row.model,row.oid,row.serial,StateMap({state:row.state})]\n\n render(){\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_cr' header='Devices' thead={['ID','Hostname','Class','IP','MAC','OUI','Model','OID','Serial','State']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Type List **************\n//\nclass TypeList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/device/type_list').then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem});\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n listItem = (row) => [row.base,<HrefButton text={row.name} onClick={() => this.changeSelf(<List key='device_list' field='type' search={row.name} />)} />,row.icon]\n\n render(){\n  return (this.state.data) ? <Fragment key='dev_tp_fragment'>\n   <ContentList key='dev_tp_cl' header='Device Types' thead={['Class','Name','Icon']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='dev_tp_cd'>{this.state.content}</ContentData>\n  </Fragment> : <Spinner />\n }\n}\n\n// ************** Model List **************\n//\nclass ModelList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/device/model_list').then(result => this.setState({...result,result:'OK'}))\n }\n\n syncModels = () => rest_call('api/device/model_list',{op:'sync'}).then(result => this.setState(result))\n\n listItem = (row) => [row.id,row.name,row.type,<Fragment key={'ml_' + row.id}>\n  <ConfigureButton key={'ml_btn_info_' + row.id} onClick={() => this.changeContent(<ModelInfo key={'model_info_'+row.id} id={row.id} />)} title='Edit model information' />\n  <DeleteButton key={'ml_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete model' />\n </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete model?') && rest_call('api/device/model_delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return (this.state.data) ? <Fragment key='dev_ml_fragment'>\n   <ContentList key='dev_ml_cl' header='Device Models' thead={['ID','Model','Type','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n    <ReloadButton key='ml_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='_ml_btn_sync' onClick={() => this.syncModels() } title='Resync models' />\n   </ContentList>\n   <ContentData key='dev_ml_cd'>{this.state.content}</ContentData>\n  </Fragment> : <Spinner />\n }\n}\n\n// ************** Model Info **************\n//\nexport class ModelInfo extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  rest_call('api/device/model_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  rest_call('api/device/model_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return (\n    <article className='info'>\n     <h1>Device Model</h1>\n     <InfoColumns key='dm_content'>\n      <TextLine key='name' id='name' text={this.state.data.name} />\n      <TextLine key='type' id='type' text={this.state.extra.type} />\n      <TextInput key='defaults_file' id='defaults_file' label='Default File' value={this.state.data.defaults_file} onChange={this.onChange} />\n      <TextInput key='image_file' id='image_file' label='Image  File' value={this.state.data.image_file} onChange={this.onChange} />\n     </InfoColumns>\n     <label className='info' htmlFor='parameters'>Parameters:</label>\n     <textarea className='info' id='parameters' name='parameters' onChange={this.onChange} value={this.state.data.parameters} />\n     <SaveButton key='dm_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    </article>\n   );\n  else\n   return <Spinner />\n }\n}\n\n// ************** OUI Search **************\n//\nclass OUISearch extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{oui:''},content:null}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n ouiSearch = () => {\n  rest_call('api/master/oui_info',{oui:this.state.data.oui}).then(result => this.setState({content:<article><div className='info col2'><label htmlFor='oui'>OUI:</label><span id='oui'>{result.data.oui}</span><label htmlFor='company'>Company:</label><span id='company'>{result.data.company}</span></div></article>}))\n }\n\n render() {\n  return (<div className='flexdiv'>\n   <article className='lineinput'>\n    <h1>OUI Search</h1>\n    <div>\n     <span>Type OUI or MAC address to find OUI/company name:<input type='text' id='oui' name='oui' required='required' onChange={this.onChange} value={this.state.data.oui} placeholder='00:00:00' /></span>\n     <SearchButton key='oui_btn_search' onClick={() => this.ouiSearch()} title='Search for OUI' />\n    </div>\n   </article>\n   {this.state.content}\n  </div>)\n }\n}\n\n// ************** OUI List **************\n//\nclass OUIList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/master/oui_list').then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.data)\n   return <article className='table'>\n    <h1>OUI</h1>\n    <div className='table'>\n     <div className='thead'>\n      <div>oui</div><div>company</div>\n     </div>\n     <div className='tbody'>\n      {this.state.data.map((row,index) => <div key={'tr_'+index}><div>{`${row.oui.substring(0,2)}:${row.oui.substring(2,4)}:${row.oui.substring(4,6)}`}</div><div>{row.company}</div></div>)}\n     </div>\n    </div>\n   </article>\n  else\n   return <Spinner />\n }\n}\n\n// ************** Function **************\n//\nclass Function extends Component {\n componentDidMount(){\n  rest_call('api/device/function',{op:this.props.op, id:this.props.id, type:this.props.type}).then(result => this.setState(result))\n }\n render() {\n  if (!this.state)\n   return <Spinner />\n  else if (this.state.status === 'OK'){\n   if(this.state.data.length > 0){\n    const head = Object.keys(this.state.data[0]);\n    return <ContentReport key='df_cr' thead={head} trows={this.state.data} listItem={(row) => head.map(hd => row[hd])} />\n   } else\n    return <article>No Data</article>\n  } else\n   return <article><b>Error in devdata: {this.state.info}</b></article>\n }\n}\n","import React, { Fragment, Component } from 'react';\nimport { rest_call } from './infra/Functions.js';\nimport { ContentData, ContentList, Result } from './infra/UI.jsx';\nimport { BackButton, DeleteButton, EditButton, FixButton, NetworkButton, ReloadButton, SaveButton, StartButton, StopButton, TextButton } from './infra/Buttons.jsx';\n\nimport { Info as DeviceInfo } from './device.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='viz_list' />\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/visualize/list')\n   .then((result) => { this.setState(result); })\n }\n\n listItem = (row) => [row.id,row.name,<Fragment key='vl_buttons'>\n  <EditButton key={'vl_btn_edt_'+row.id} onClick={() => this.changeContent(<Edit key={'viz_edit_'+row.id} id={row.id} changeSelf={this.changeContent} type='map' />)} title='Show and edit map' />\n  <NetworkButton key={'vl_btn_net_'+row.id} onClick={() => this.changeContent(<Show key={'viz_show_'+row.id} id={row.id} />)} />\n  <DeleteButton key={'vl_btn_del_'+row.id}  onClick={() => this.deleteList(row.id)} />\n </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Delete map?') && rest_call('api/visualize/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment key='vl_fragment'>\n   <ContentList key='vl_cl' header='Maps' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='vl_btn_reload' onClick={() => this.componentDidMount() } />\n   </ContentList>\n   <ContentData key='vl_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** Show **************\n//\nclass Show extends Component {\n\n componentDidMount(){\n  var args = (this.props.hasOwnProperty('id')) ? {id:this.props.id}:{name:this.props.name};\n  rest_call('api/visualize/show',args)\n   .then(result => {\n    var nodes = new window.vis.DataSet(result.data.nodes);\n    var edges = new window.vis.DataSet(result.data.edges);\n    var network = new window.vis.Network(this.refs.show_canvas, {nodes:nodes, edges:edges}, result.data.options);\n    network.on('stabilizationIterationsDone', () => network.setOptions({ physics: false }))\n    network.on('doubleClick', (params) => this.doubleClick(params))\n   })\n }\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes);\n  if (params.nodes[0]){\n   rest_call('api/device/management',{id:params.nodes[0]}).then(result => {\n    if (result && result.status === 'OK'){\n     if(result.data.url && result.data.url.length > 0)\n      window.open(result.data.url);\n     else\n      window.open('ssh://' + result.data.username + '@' + result.data.ip,'_self');\n    }else\n     console.log('Data not ok:' + result)\n   })\n  }\n }\n\n render(){\n  return <article><div className='network' id='div_network' ref='show_canvas' /></article>\n }\n}\n\n// ************** Edit **************\n//\nexport class Edit extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:'network', physics_button:StartButton, found:true, data:{name:'N/A'}, result:''}\n  this.viz = {network:null,nodes:null,edges:null}\n  this.results = React.createRef();\n  this.edit = false;\n }\n\n componentDidMount(){\n  rest_call('api/visualize/network',{id:this.props.id,type:this.props.type})\n   .then((result) => {\n    this.viz.nodes = new window.vis.DataSet(result.data.nodes);\n    this.viz.edges = new window.vis.DataSet(result.data.edges);\n    result.data.options.physics.enabled = true;\n    this.viz.network = new window.vis.Network(this.refs.edit_canvas, {nodes:this.viz.nodes, edges:this.viz.edges}, result.data.options);\n    this.viz.network.on('stabilizationIterationsDone', () => this.viz.network.setOptions({ physics: false }))\n    this.viz.network.on('doubleClick', (params) => this.doubleClick(params))\n    this.viz.network.on('dragEnd', (params) => this.networkSync(params))\n    result.data.options.physics.enabled = false;\n    this.setState(result)\n  })\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n jsonHandler = (e) => {\n  var data = {...this.state.data}\n  try {\n   data[e.target.name] = JSON.parse(e.target.value);\n   this.setState({data:data})\n  } catch {\n   console.log('Error converting string to JSON')\n  }\n }\n\n updateInfo = () => rest_call('api/visualize/network',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes[0]);\n  if(this.props.changeSelf)\n   this.changeContent(<DeviceInfo key={'di_' + params.nodes[0]} id={params.nodes[0]} />)\n }\n\n toggleEdit = () => {\n  this.edit = !this.edit;\n  this.viz.network.setOptions({ manipulation:{ enabled:this.edit }})\n  this.setState({result:'Edit:'+this.edit});\n }\n\n toggleFix = () => {\n  this.viz.nodes.forEach((node,id) => this.viz.nodes.update({id:id,fixed:!(node.fixed)}) );\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get()}, result:'Fix/Unfix positions'})\n }\n\n togglePhysics = () => {\n  const data = this.state.data;\n  data.options.physics.enabled = !data.options.physics.enabled;\n  this.viz.network.setOptions({ physics:data.options.physics.enabled })\n  this.setState({data:data, physics_button:(data.options.physics.enabled) ? StopButton:StartButton, result:'Physics:'+data.options.physics.enabled})\n }\n\n networkSync = (params) => {\n  this.viz.network.storePositions();\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get(), edges:this.viz.edges.get()}, result:'Moved ' + this.viz.nodes.get(params.nodes[0]).label})\n }\n\n showDiv = (id) => (id === this.state.content) ? 'network show' : 'hidden';\n\n render(){\n  const PhysicsButton = this.state.physics_button;\n  return(\n   <article className='network'>\n    <h1>Network Map</h1>\n    {(this.props.type === 'device') && (this.props.changeSelf) && <BackButton key='viz_back' onClick={() => this.changeContent(<DeviceInfo key={'di_'+this.props.id} id={this.props.id} />)} />}\n    <ReloadButton key='viz_reload' onClick={() => this.componentDidMount()} />\n    <EditButton key='viz_edit' onClick={() => this.toggleEdit()} />\n    <PhysicsButton key='viz_physics' onClick={() => this.togglePhysics()} />\n    <FixButton key='viz_fix' onClick={() => this.toggleFix()} />\n    <SaveButton key='viz_save' onClick={() => this.updateInfo()} />\n    <NetworkButton key='viz_net' onClick={() => this.setState({content:'network'})} />\n    <TextButton key='viz_opt' text='Options' onClick={() => this.setState({content:'options'})} />\n    <TextButton key='viz_nodes' text='Nodes' onClick={() => this.setState({content:'nodes'})} />\n    <TextButton key='viz_edges' text='Edges' onClick={() => this.setState({content:'edges'})} />\n    <label className='info' key='name' htmlFor='name'>Name:</label><input key='input_text_name' type='text' id='name' name='name' value={this.state.data.name} onChange={this.onChange} />\n    <Result key='viz_result' result={this.state.result} />\n    <div className={this.showDiv('network')} ref='edit_canvas' />\n    <div className={this.showDiv('options')}><textarea id='options' name='options' value={JSON.stringify(this.state.data.options,undefined,2)} onChange={this.jsonHandler}/></div>\n    <div className={this.showDiv('nodes')}><textarea id='nodes' name='nodes' value={JSON.stringify(this.state.data.nodes,undefined,2)} onChange={this.jsonHandler} /></div>\n    <div className={this.showDiv('edges')}><textarea id='edged' name='edges' value={JSON.stringify(this.state.data.edges,undefined,2)} onChange={this.jsonHandler} /></div>\n   </article>\n  )\n }\n}\n"],"sourceRoot":""}
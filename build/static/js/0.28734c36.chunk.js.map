{"version":3,"sources":["device.jsx","visualize.jsx"],"names":["Main","props","compileNavItems","context","loadNavigation","key","title","onClick","changeContent","List","rack_id","state","Search","changeSelf","TypeList","ModelList","pdu","length","map","row","idx","hostname","changeImport","device_id","id","type","console","name","OUISearch","OUIList","style","float","elem","setState","content","undefined","this","rest_call","then","result","Object","assign","prevProps","module","func","args","lib","Elem","Component","contextType","RimsContext","onChange","e","target","value","field","search","className","label","placeholder","searchHandler","searchfield","sortList","method","data","sort","a","b","localeCompare","ip","Number","split","num","slice","join","listItem","text","Info","StateMap","deleteList","window","confirm","deleted","filter","hasOwnProperty","device_list","includes","thead","highlight","header","trows","componentDidMount","New","rnd","Discover","updateInfo","op","reload","rack","vm","lookupInfo","changeInterfaces","found","navconf","extra","class","change_self","has_ip","interface_ip","function_strings","functions","mac","interface_mac","snmp","if_state","ip_state","classes","type_id","types","model","version","serial","rack_name","rack_unit","rack_size","console_name","console_port","pems","pem","pdu_name","pdu_unit","host","device_uuid","maxWidth","server_uuid","comment","url","Control","Template","Logs","changeMain","type_base","function","type_name","open","username","close","console_url","JSON","stringify","update","ManagementInfo","RackInfo","PemList","StatisticsList","fun","Function","a_domain_id","mapDomain","interfaces","management_id","domains","if_obj","find","intf","parseInt","interface_id","fqdn","oid","oui","racked","racks","console_id","consoles","pdu_id","pdu_slot","PemInfo","lookup","empty","pdus","pdu_info","slots","i","push","loadList","clear","inserts","lookupStats","measurement","tags","StatisticsInfo","operationDev","msg","wait","device_op","operationPem","pem_op","pem_id","lookupState","log","htmlFor","clearLog","time","message","status","info","addDevice","searchIP","ipam_network_id","network_id","networks","netasc","description","runDiscovery","Report","base","icon","syncModels","ModelInfo","defaults_file","image_file","parameters","ouiSearch","company","required","index","substring","head","keys","hd","Edit","Show","doubleClick","params","nodes","vis","DataSet","edges","network","Network","refs","show_canvas","options","on","setOptions","physics","ref","jsonHandler","parse","toggleEdit","edit","viz","manipulation","enabled","toggleFix","forEach","node","fixed","get","togglePhysics","physics_button","StopButton","StartButton","networkSync","storePositions","showDiv","results","React","createRef","edit_canvas","PhysicsButton"],"mappings":"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","file":"static/js/0.28734c36.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { rest_call, rnd, RimsContext } from './infra/Functions.js';\nimport { Spinner, StateMap, SearchField, InfoColumns, Result, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton, NavReload } from './infra/Navigation.jsx'\nimport { TextInput, TextLine, StateLine, SelectInput, UrlInput } from './infra/Inputs.jsx';\nimport { AddButton, CheckButton, ConfigureButton, ConnectionButton, DeleteButton, DevicesButton, GoButton, HeaderButton, HrefButton, InfoButton, ItemsButton, LogButton, NetworkButton, ReloadButton, SaveButton, SearchButton, ShutdownButton, StartButton, SyncButton, TermButton, UiButton } from './infra/Buttons.jsx';\n\nimport { List as VisualizeList, Edit as VisualizeEdit } from './visualize.jsx';\n\n// **************** Main ****************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {pdu:[], console:[], name:'N/A', rack_id:undefined}\n }\n\n componentDidMount(){\n  if (this.props.rack_id)\n   rest_call('api/rack/inventory',{id:this.props.rack_id}).then(result => {\n    Object.assign(this.state,{rack_id:this.props.rack_id, ...result})\n    this.compileNavItems();\n   })\n  else\n   this.compileNavItems();\n }\n\n componentDidUpdate(prevProps){\n  if(prevProps !== this.props)\n   this.compileNavItems();\n }\n\n compileNavItems = () => {\n  this.context.loadNavigation(<NavBar key='device_navbar'>\n   <NavDropDown key='dev_nav_devs' title='Devices'>\n    <NavDropButton key='dev_nav_list' title='List' onClick={() => this.changeContent(<List key='dl' rack_id={this.state.rack_id} />)} />\n    <NavDropButton key='dev_nav_srch' title='Search' onClick={() => this.changeContent(<Search key='ds' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_types' title='Types' onClick={() => this.changeContent(<TypeList key='dtl' changeSelf={this.changeContent} />)} />\n    <NavDropButton key='dev_nav_model' title='Models' onClick={() => this.changeContent(<ModelList key='dml' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_maps' title='Maps' onClick={() => this.changeContent(<VisualizeList key='visualize_list' />)} />\n   {(this.state.pdu.length > 0) && <NavDropDown key='dev_nav_pdus' title='PDUs'>{this.state.pdu.map((row,idx) => <NavDropButton key={'dev_nav_pdu_' + idx} title={row.hostname} onClick={() => this.changeImport('pdu','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(this.state.console.length > 0) && <NavDropDown key='dev_nav_consoles' title='Consoles'>{this.state.console.map((row,idx) => <NavDropButton key={'dev_nav_console_' + idx} title={row.hostname} onClick={() => this.changeImport('console','Inventory',{device_id:row.id,type:row.type})} />)}</NavDropDown>}\n   {(this.state.rack_id) && <NavButton key='dev_nav_rack' title={this.state.name} onClick={() => this.changeImport('rack','Layout',{id:this.state.rack_id})} />}\n   <NavDropDown key='dev_nav_oui' title='OUI'>\n    <NavDropButton key='dev_nav_ouis' title='Search' onClick={() => this.changeContent(<OUISearch key='oui_search' />)} />\n    <NavDropButton key='dev_nav_ouil' title='List' onClick={() => this.changeContent(<OUIList key='oui_list' />)} />\n   </NavDropDown>\n   <NavButton key='dev_nav_resv' title='Reservations' onClick={() => this.changeImport('reservation','List',{})} style={{float:'right'}} />\n   <NavDropDown key='dev_nav_ipam' title='IPAM' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_isrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'DHCP'})} />\n    <NavDropButton key='dev_nav_nets' title='Networks' onClick={() => this.changeImport('ipam','NetworkList',{})} />\n   </NavDropDown>\n   <NavDropDown key='dev_nav_dns' title='DNS' style={{float:'right'}}>\n    <NavDropButton key='dev_nav_dsrv' title='Servers' onClick={() => this.changeImport('server','List',{type:'DNS'})} />\n    <NavDropButton key='dev_nav_doms' title='Domains' onClick={() => this.changeImport('dns','DomainList',{})} />\n   </NavDropDown>\n   <NavReload key='dev_nav_reload' onClick={() => this.changeContent(null)} />\n  </NavBar>)\n }\n\n changeImport(module,func,args){\n  import('./'+module+'.jsx').then(lib => {\n   var Elem = lib[func];\n   this.setState({content:<Elem key={module+'_'+func} {...args} />})\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return  <Fragment key='main_base'>{this.state.content}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Search **************\n//\nclass Search extends Component {\n  constructor(props){\n  super(props)\n  this.state = {field:'ip',search:''}\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n render() {\n  return (\n   <article className='lineinput'>\n    <h1>Device Search</h1>\n    <div>\n     <SelectInput key='field' id='field' onChange={this.onChange} value={this.state.field}>\n      <optgroup label='Group'>\n       <option value='hostname'>Hostname</option>\n       <option value='type'>Type</option>\n      </optgroup>\n      <optgroup label='Unique'>\n       <option value='id'>ID</option>\n       <option value='ip'>IP</option>\n       <option value='mac'>MAC</option>\n       <option value='ipam_id'>IPAM ID</option>\n      </optgroup>\n     </SelectInput>\n     <TextInput key='search' id='search' onChange={this.onChange} value={this.state.search} placeholder='search' />\n    </div>\n    <SearchButton key='ds_btn_search' onClick={() => this.changeContent(<List key='device_list' {...this.state} />)} title='Search devices' />\n   </article>\n  )\n }\n}\n// ************** List **************\n//\nclass List extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, content:null, sort:(props.hasOwnProperty('sort')) ? props.sort : 'hostname', rack_id:this.props.rack_id, searchfield:'', field:this.props.field, search:this.props.search}\n }\n\n componentDidMount(){\n  rest_call('api/device/list', {sort:this.state.sort, rack_id:this.state.rack_id, field:this.state.field, search:this.state.search}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n searchHandler = (e) => { this.setState({searchfield:e.target.value}) }\n\n sortList = (method) => {\n  if (method === 'hostname')\n   this.state.data.sort((a,b) => a.hostname.localeCompare(b.hostname));\n  else\n   this.state.data.sort((a,b) => {\n    if (a.ip && b.ip){\n     const num1 = Number(a.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     const num2 = Number(b.ip.split('.').map(num => (`000${num}`).slice(-3) ).join(''));\n     return num1-num2;\n   } else if (a.ip)\n    return 1;\n   else\n    return a.hostname.localeCompare(b.hostname)\n   });\n  this.setState({sort:method})\n }\n\n listItem = (row) => [row.ip,<HrefButton key={'dl_btn_info_'+row.id} text={row.hostname} onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />,StateMap({state:row.state}),<Fragment key={'dl_buttons_'+row.id}>\n  <InfoButton key={'dl_btn_info_'+row.id} onClick={() => this.changeContent(<Info key={'di_'+row.id} id={row.id} changeSelf={this.changeContent} />)} title={row.id} />\n  <DeleteButton key={'dl_btn_del_'+row.id} onClick={() => this.deleteList(row.id)} title='Delete device' />\n </Fragment>]\n\n deleteList = (id) => (window.confirm('Really delete device '+id+'?') && rest_call('api/device/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  if (this.state.data){\n   let device_list = this.state.data.filter(row => row.hostname.includes(this.state.searchfield));\n   const thead = [<HeaderButton key='dl_btn_ip' text='IP' highlight={(this.state.sort === 'ip')} onClick={() => this.sortList('ip')} />,<HeaderButton key='dl_btn_hostname' text='Hostname' highlight={(this.state.sort === 'hostname')} onClick={() => this.sortList('hostname')} />,'',''];\n   return <Fragment key={'dl_fragment'}>\n    <ContentList key='dl_list' header='Device List' thead={thead} listItem={this.listItem} trows={device_list}>\n     <ReloadButton key='dl_btn_reload' onClick={() => this.componentDidMount()} />\n     <ItemsButton key='dl_btn_items' onClick={() => { Object.assign(this.state,{rack_id:undefined,field:undefined,search:undefined}); this.componentDidMount(); }} title='List all items' />\n     <AddButton key='dl_btn_add' onClick={() => this.changeContent(<New key={'dn_new_' + rnd()} id='new' />)} title='Add device' />\n     <DevicesButton key='dl_btn_devices' onClick={() => this.changeContent(<Discover key='dd' />) } title='Discover devices' />\n     <SearchField key='dl_searchfield' searchHandler={this.searchHandler} value={this.state.searchfield} placeholder='Search devices' />\n    </ContentList>\n    <ContentData key='dl_content'>{this.state.content}</ContentData>\n   </Fragment>\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Info **************\n//\nexport class Info extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null, navconf:false}\n }\n\n componentDidMount(){\n  rest_call('api/device/info',{id:this.props.id, extra:['types','classes']}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n changeContent = (elem) => this.setState({content:elem})\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n updateInfo = () => rest_call('api/device/info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n reload = () => {\n  this.setState({rack:undefined,vm:undefined});\n  rest_call('api/device/info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n lookupInfo = () => {\n  this.setState({content:<Spinner />,result:''})\n  rest_call('api/device/info',{id:this.props.id, op:'lookup'}).then(result => this.setState({...result,content:null}))\n }\n\n changeInterfaces = () => import('./interface.jsx').then(lib => this.changeContent(<lib.List key='interface_list' device_id={this.props.id} changeSelf={this.changeContent} />))\n\n render() {\n  if(this.state.data){\n   const data = this.state.data;\n   const extra = this.state.extra;\n   const vm = (data.class === 'vm' && this.state.vm) ? this.state.vm : false;\n   const rack = (this.state.rack && data.class !== 'vm') ? this.state.rack : false;\n   const change_self = (this.props.changeSelf);\n   const has_ip = (extra.interface_ip);\n   const function_strings = (extra.functions.length >0) ? extra.functions.split(',') : [];\n   return (\n    <Fragment key='di_fragment'>\n     <article className='info'>\n     <h1>Device</h1>\n     <InfoColumns key='di_info' className='left'>\n      <TextLine key='hostname' id='hostname' text={data.hostname} />\n      <TextInput key='mac' id='mac' label='Sys Mac' value={data.mac} title='System MAC' onChange={this.onChange} />\n      <TextLine key='if_mac' id='if_mac' label='Mgmt MAC' text={extra.interface_mac} title='Management Interface MAC' />\n      <TextLine key='if_ip' id='if_ip' label='Mgmt IP' text={extra.interface_ip} />\n      <TextLine key='snmp' id='snmp' label='SNMP' text={data.snmp} />\n      <StateLine key='state' id='state' state={[extra.if_state,extra.ip_state]} />\n     </InfoColumns>\n     <InfoColumns key='di_extra' className='left'>\n      <TextLine key='id' id='id' text={this.props.id} />\n      <SelectInput key='class' id='class' value={data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={'di_class_'+row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='type_id' id='type_id' label='Type' value={data.type_id} onChange={this.onChange}>{this.state.types.map((row,idx) => <option key={'di_type_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <TextInput key='model' id='model' value={data.model} onChange={this.onChange} extra={data.model} />\n      <TextLine key='version' id='version' text={data.version} onChange={this.onChange} />\n      <TextInput key='serial' id='serial' label='S/N' value={data.serial} onChange={this.onChange} />\n     </InfoColumns>\n     <InfoColumns key='di_rack' className='left'>\n      {rack && <TextLine key='rack_pos' id='rack_pos' label='Rack/Pos' text={`${rack.rack_name} (${rack.rack_unit})`} />}\n      {rack && <TextLine key='rack_size' id='rack_size' label='Size (U)' text={rack.rack_size} />}\n      {rack && <TextLine key='rack_con' id='rack_con' label='TS/Port' text={`${rack.console_name} (${rack.console_port})`} />}\n      {rack && this.state.pems.map(pem => <TextLine key={'pem_'+pem.id} id={'pem_'+pem.id} label={pem.name+' PDU'} text={`${pem.pdu_name} (${pem.pdu_unit})`} />)}\n     </InfoColumns>\n     <InfoColumns key='di_vm' className='left'>\n      {vm && <TextLine key='vm_name' id ='vm_name' label='VM Name' text={vm.name} />}\n      {vm && <TextLine key='vm_host' id ='vm_host' label='VM Host' text={vm.host} />}\n      {vm && <TextLine key='vm_uuid' id ='vm_uuid' label='VM UUID' text={vm.device_uuid} style={{maxWidth:170}} extra={vm.device_uuid} />}\n      {vm && <TextLine key='vm_uuhost' id ='vm_uuhost' label='Host UUID' text={vm.server_uuid} style={{maxWidth:170}} extra={vm.server_uuid} />}\n     </InfoColumns>\n     <br />\n     <InfoColumns key='di_text'>\n      <TextInput key='comment' id='comment' value={data.comment} onChange={this.onChange} />\n      <UrlInput key='url' id='url' label='URL' value={data.url} onChange={this.onChange} />\n     </InfoColumns>\n     <br />\n     <ReloadButton key='di_btn_reload' onClick={() => this.reload()} />\n     <SaveButton key='di_btn_save' onClick={() => this.updateInfo()} title='Save' />\n     <ConnectionButton key='di_btn_conn' onClick={() => this.changeInterfaces()} title='Interfaces' />\n     <StartButton key='di_btn_cont' onClick={() => this.changeContent(<Control key='device_control' id={this.props.id} />)} title='Device control' />\n     <CheckButton key='di_btn_conf' onClick={() => this.changeContent(<Template key='device_configure' id={this.props.id} />)} title='Configuration template' />\n     <ConfigureButton key='di_btn_edit' onClick={() => this.setState({navconf:!this.state.navconf})} title='Toggle config mode' />\n     {change_self && <NetworkButton key='di_btn_netw' onClick={() => this.changeSelf(<VisualizeEdit key={'ve_'+this.props.id} type='device' id={this.props.id} changeSelf={this.props.changeSelf} />)} title='Connectivity map' />}\n     {has_ip && <SearchButton key='di_btn_srch' onClick={() => this.lookupInfo()} title='Information lookup' />}\n     {has_ip && <LogButton key='di_btn_logs' onClick={() => this.changeContent(<Logs key='device_logs' id={this.props.id} />)} title='Logs' />}\n     {function_strings.includes('manage') && <GoButton key='d_btn_manage' onClick={() => this.context.changeMain({module:this.state.extra.type_base,function:'Manage',args:{device_id:this.props.id, type:this.state.extra.type_name}})} title={'Manage ' + data.hostname} />}\n     {has_ip && <TermButton key='di_btn_ssh' onClick={() => { const sshWin = window.open(`ssh://${extra.username}@${extra.interface_ip}`,'_blank'); sshWin.close(); }} title='SSH connection' />}\n     {rack && rack.console_url && <TermButton key='di_btn_console' onClick={() => { const termWin = window.open(rack.console_url,'_blank'); termWin.close(); }} title='Serial Connection' /> }\n     {data.url && <UiButton key='di_btn_ui' onClick={() => window.open(data.url,'_blank')} title='Web UI' />}\n     <Result key='dev_result' result={JSON.stringify(this.state.update)} />\n    </article>\n    <NavBar key='di_navigation' id='di_navigation'>\n     {this.state.navconf && <NavButton key='di_nav_management' title='Management' onClick={() => this.changeContent(<ManagementInfo key='device_configure' id={this.props.id} />)} />}\n     {this.state.navconf && ['infrastructure','out-of-band'].includes(data.class) && <NavButton key='di_nav_rack' title='Rack' onClick={() => this.changeContent(<RackInfo key='device_rack_info' device_id={this.props.id} />)} />}\n     {this.state.navconf && ['device','infrastructure','out-of-band'].includes(data.class) && <NavButton key='di_nav_pems' title='PEMs' onClick={() => this.changeContent(<PemList key='device_pem_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {this.state.navconf && <NavButton key='di_nav_stats' title='Statistics' onClick={() => this.changeContent(<StatisticsList key='device_statistics_list' device_id={this.props.id} changeSelf={this.changeContent} />)} />}\n     {!this.state.navconf && function_strings.filter(fun => fun !== 'manage').map((op,idx) => <NavButton key={'di_nav_'+idx} title={op} onClick={() => this.changeContent(<Function key={'dev_func_'+op} id={this.props.id} op={op} type={this.state.extra.type_name} />)} />)}\n    </NavBar>\n    {this.state.content}\n    </Fragment>\n   )\n  } else\n   return <Spinner />\n }\n}\nInfo.contextType = RimsContext;\n\n// ************* Configure *************\n//\nclass ManagementInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:undefined, found:true, content:null}\n }\n\n componentDidMount(){\n  rest_call('api/device/extended',{id:this.props.id}).then(result => {\n   result.data.a_domain_id = this.mapDomain(result.data.management_id, result.interfaces);\n   this.setState(result)\n  });\n  rest_call('api/dns/domain_list',{filter:'forward'}).then(result => {\n   const args = {data:this.state.data, domains:result.data}\n   if (args.data)\n    args.data.a_domain_id = this.mapDomain(this.state.data.management_id,this.state.interfaces);\n   this.setState({domains:result.data})\n  });\n }\n\n onChange = (e) => {\n  const data = {...this.state.data, [e.target.name]:e.target.value}\n  if(e.target.name === 'management_id')\n   data.a_domain_id =  this.mapDomain(e.target.value,this.state.interfaces);\n  this.setState({data:data})\n }\n\n mapDomain(id,interfaces){\n  const if_obj = interfaces.find(intf => parseInt(intf.interface_id) === parseInt(id));\n  return (if_obj) ? if_obj.a_domain_id : null;\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n updateInfo = () => rest_call('api/device/extended',{op:'update', ...this.state.data}).then(result => {\n  result.data.a_domain_id = this.mapDomain(result.data.management_id,this.state.interfaces)\n  this.setState(result)\n });\n\n render() {\n  if (this.state.data && this.state.domains)\n   return <article className='info'>\n    <h1>Management Configuration</h1>\n    <InfoColumns key='d_conf_ic'>\n     <TextInput key='d_conf_hostname' id='hostname' value={this.state.data.hostname} onChange={this.onChange} />\n     <SelectInput key='d_conf_management_id' id='management_id' label='Mgmt Interface' value={this.state.data.management_id} onChange={this.onChange}>{this.state.interfaces.map((row,idx) => <option key={'de_intf_'+idx} value={row.interface_id}>{`${row.name} (${row.ip} - ${row.fqdn})`}</option>)}</SelectInput>\n     <SelectInput key='d_conf_a_domain_id' id='a_domain_id' label='Mgmt Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={'de_dom_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <TextLine key='d_conf_oid' id='oid' label='Priv OID' text={this.state.extra.oid} />\n     <TextLine key='d_conf_oui' id='oui' label='System OUI' text={this.state.extra.oui} />\n    </InfoColumns>\n    <SaveButton key='d_conf_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </article>\n  else\n   return <Spinner />\n }\n}\n\n// ************* RackInfo **************\n//\nclass RackInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/device/rack',{device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => rest_call('api/device/rack',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   const racked = (this.state.data.rack_id && this.state.data.rack_id !== 'NULL');\n   return <article className='info'>\n    <h1>Rack</h1>\n    <InfoColumns key='d_rack_ic'>\n     <SelectInput key='d_rack_id' id='rack_id' label='Rack ID' value={this.state.data.rack_id} onChange={this.onChange}>{this.state.racks.map((row,idx) => <option key={'d_rack_id_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     {racked && <TextInput key='d_rack_size' id='rack_size' label='Size' value={this.state.data.rack_size} onChange={this.onChange} title='Size of device in U' />}\n     {racked && <TextInput key='d_rack_unit' id='rack_unit' label='Unit' value={this.state.data.rack_unit} onChange={this.onChange} title='First unit of placement' />}\n     {racked && <SelectInput key='d_rack_con_id' id='console_id' label='Console' value={this.state.data.console_id} onChange={this.onChange}>{this.state.consoles.map((row,idx) => <option key={'d_rack_con_id_'+idx} value={row.id}>{row.hostname}</option>)}</SelectInput>}\n     {racked && <TextInput key='d_rack_con_port' id='console_port' label='Console Port' value={this.state.data.console_port} onChange={this.onChange} />}\n    </InfoColumns>\n    <SaveButton key='d_rack_btn_save' onClick={() => this.updateInfo()} title='Save' />\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* PEMs **************\n//\nclass PemList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/pem/list',{device_id:this.props.device_id,lookup:true}).then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete PEM?') && rest_call('api/pem/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n listItem = (row) => [row.id,row.name,row.pdu_id,row.pdu_name,row.pdu_slot,row.pdu_unit,<Fragment key={'dev_pems_frag_' + row.id}>\n  <InfoButton key={'dev_pem_btn_info_' + row.id} onClick={() => this.changeContent(<PemInfo key={'pem_info_'+row.id} id={row.id} device_id={this.props.device_id} />)} title='Edit PEM information' />\n  <DeleteButton key={'dev_pem_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete PEM' />\n </Fragment>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='dev_pems' header='PEMs' thead={['ID','Name','PDU ID','PDU Name','PDU Slot','PDU Unit','']} trows={this.state.data} listItem={this.listItem}>\n   <ReloadButton key='dev_pems_btn_reload' onClick={() => this.componentDidMount()} />\n   <AddButton key='dev_pems_btn_add' onClick={() => this.changeContent(<PemInfo key={'device_pem_info_new_' + rnd()} id='new' device_id={this.props.device_id} />)} title='Add PEM' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n// ************* PemInfo **************\n//\nclass PemInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/pem/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n  rest_call('api/pdu/list',{device_id:this.props.device_id, empty:true}).then(result => this.setState({pdus:result.data}))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => rest_call('api/pem/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data && this.state.pdus){\n   const pdu_info = this.state.pdus.find(pdu => parseInt(pdu.device_id) === parseInt(this.state.data.pdu_id));\n   let slots = []\n   if (pdu_info){\n    for (let i = 0; i < pdu_info.slots; i++)\n     slots.push({id:i,name:pdu_info[`${i}_slot_name`]});\n   }\n   return <article className='info'>\n    <h1>PEM</h1>\n    <InfoColumns key='d_pem_ic'>\n     <TextInput key='d_pem_name' id='name' value={this.state.data.name} onChange={this.onChange} />\n     <SelectInput key='d_pem_pdu_id' id='pdu_id' label='PDU' value={this.state.data.pdu_id} onChange={this.onChange}>{this.state.pdus.map((row,idx) => <option key={'d_pem_pdu_id_'+idx} value={row.device_id}>{row.name}</option>)}</SelectInput>\n     <SelectInput key='d_pem_pdu_slot' id='pdu_slot' label='Slot' value={this.state.data.pdu_slot} onChange={this.onChange}>{slots.map((row,idx) => <option key={'d_pem_pdu_slot_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n     <TextInput key='d_pem_pdu_unit' id='pdu_unit' label='Unit' value={this.state.data.pdu_unit} onChange={this.onChange} />\n    </InfoColumns>\n    <SaveButton key='d_pem_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='d_pem_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : ''} />\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* StatisticsList **************\n//\nclass StatisticsList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  this.loadList()\n }\n\n loadList = (clear) => rest_call('api/statistics/list',{device_id:this.props.device_id}).then(result => this.setState((clear)? {...result,result:'',inserts:''} : result));\n\n changeContent = (elem) => this.props.changeSelf(elem)\n\n deleteList = (id) => (window.confirm('Really delete statistics point?') && rest_call('api/statistics/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n lookupStats = () => rest_call('api/statistics/lookup',{device_id:this.props.device_id}).then(result => { this.setState(result); this.loadList()} )\n\n listItem = (row) => [row.id,row.measurement,row.tags,row.name,row.oid,<Fragment key={'dev_stats_frag_' + row.id}>\n  <InfoButton key={'dev_stats_btn_info_' + row.id} onClick={() => this.changeContent(<StatisticsInfo key={'statistics_info_'+row.id} id={row.id} device_id={this.props.device_id} />)} title='Edit data point' />\n  <DeleteButton key={'dev_stats_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete data point' />\n </Fragment>]\n\n render(){\n  return (this.state.data) ? <ContentReport key='dev_stats' header='Device statistics' thead={['ID','Measurement','Tags','Name','OID','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n   <ReloadButton key='dev_stats_btn_reload' onClick={() => this.loadList(true)} />\n   <SearchButton key='dev_stats_btn_lookup' onClick={() => this.lookupStats()} title='Lookup device type stats' />\n   <AddButton key='dev_stats_btn_add' onClick={() => this.changeContent(<StatisticsInfo key={'device_statistics_info_new_' + rnd()} id='new' device_id={this.props.device_id} />)} title='Add statistics' />\n  </ContentReport>\n  : <Spinner />\n }\n}\n\n// ************* PemInfo **************\n//\nclass StatisticsInfo extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/statistics/info',{id:this.props.id, device_id:this.props.device_id}).then(result => this.setState(result))\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}})\n\n updateInfo = () => rest_call('api/statistics/info',{op:'update', ...this.state.data}).then(result => this.setState(result));\n\n render() {\n  if (this.state.data){\n   return <article className='info'>\n    <h1>Data point</h1>\n    <InfoColumns key='dev_stat_ic'>\n     <TextInput key='dev_stat_measurement' id='measurement' value={this.state.data.measurement} onChange={this.onChange} title='Group, or measurement, that the data point belongs to' />\n     <TextInput key='dev_stat_tags' id='tags' value={this.state.data.tags} onChange={this.onChange} title='Tags are comma separated values that extend TSDB grouping' />\n     <TextInput key='dev_stat_name' id='name' value={this.state.data.name} onChange={this.onChange} title='Data point name' />\n     <TextInput key='dev_stat_oid' id='oid' value={this.state.data.oid} onChange={this.onChange} />\n    </InfoColumns>\n    <SaveButton key='dev_stat_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    <Result key='dev_stat_result' result={(this.state.update) ? (this.state.result) ? JSON.stringify(this.state.result) :JSON.stringify(this.state.update) : JSON.stringify(this.state.update)} />\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Control **************\n//\nclass Control extends Component {\n constructor(props){\n  super(props)\n  this.state = {pems:[]}\n }\n\n componentDidMount(){\n  rest_call('api/device/control',{id:this.props.id}).then(result => this.setState(result));\n }\n\n operationDev = (op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   rest_call('api/device/control',{id:this.props.id, device_op:op}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n operationPem = (id,op,msg) => {\n  if (window.confirm(msg)){\n   this.setState({wait:<Spinner />});\n   rest_call('api/device/control',{id:this.props.id, pem_op:op, pem_id:id}).then(result => this.setState({...result,wait:null}))\n  }\n }\n\n lookupState = (id) => console.log('State lookup TODO');\n\n render() {\n  return (\n   <article className='info'>\n    <h1>Device Control</h1>\n    <InfoColumns key='dc_ic'>\n     <label htmlFor='reboot'>Reboot:</label><ReloadButton id='reboot' key='dev_ctr_reboot' onClick={() => this.operationDev('reboot','Really reboot?')} title='Restart device' />\n     <label htmlFor='shutdown'>Shutdown:</label><ShutdownButton id='shutdown' key='dev_ctr_shutdown' onClick={() => this.operationDev('shutdown','Really shutdown?')} title='Shutdown' />\n     {this.state.pems.map(pem => {\n      if(pem.state === 'off')\n       return <Fragment key={'dc_pems_'+pem.id}><label htmlFor={pem.id}>{pem.name}</label><StartButton key={'dc_btn_start_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'on','Power on PEM?')} title='Power ON' /></Fragment>\n      else if (pem.state === 'on')\n       return <Fragment key={'dc_pems_'+pem.id}><label htmlFor={pem.id}>{pem.name}</label><ShutdownButton key={'dc_btn_stop_'+pem.id} id={pem.id} onClick={() => this.operationPem(pem.id,'off','Power off PEM?')} title='Power OFF' /></Fragment>\n      else\n       return <Fragment key={'dc_pems_'+pem.id}><label htmlFor={pem.id}>{pem.name}</label><SearchButton key={'dc_btn_lookup_'+pem.id} id={pem.id} onClick={() => this.lookupState(pem.id)} title='Lookup State' /></Fragment>\n     })}\n    </InfoColumns>\n    <Result key='dc_result' result={JSON.stringify(this.state.result)} />\n    {this.state.wait}\n   </article>)\n }\n}\n\n// ************** Logs **************\n//\nexport class Logs extends Component {\n componentDidMount(){\n  rest_call('api/device/log_get',{id:this.props.id}).then(result => this.setState(result));\n }\n\n clearLog = () => rest_call('api/device/log_clear',{id:this.props.id}).then(result => (result.deleted && this.setState({data:[]})));\n\n render() {\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_log_cr' header='Devices' thead={['Time','Message']} trows={this.state.data} listItem={(row) => [row.time,row.message]}>\n   <DeleteButton key='devlog_btn_delete' onClick={() => this.clearLog()} title='Clear device logs' />\n  </ContentReport>\n }\n}\n\n// ******** Template *********\n//\nclass Template extends Component {\n componentDidMount(){\n  rest_call('api/device/configuration_template',{id:this.props.id}).then(result => this.setState(result));\n }\n\n render() {\n  return (!this.state) ? <Spinner /> : <article>{(this.state.status === 'OK') ? this.state.data.map((row,idx) => <p key={'conf_'+idx}>{row}</p>) : <b>{this.state.info}</b>}</article>\n }\n}\n\n// ************** New **************\n//\nexport class New extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{ip:this.props.ip,mac:'00:00:00:00:00:00',class:'device',ipam_network_id:this.props.ipam_network_id,hostname:''}, found:true}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n componentDidMount(){\n  rest_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n  rest_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  rest_call('api/device/class_list').then(result => this.setState({classes:result.data}))\n }\n\n addDevice = () => {\n  if (this.state.data.hostname)\n   rest_call('api/device/new',this.state.data).then(result => this.setState({result:JSON.stringify(result)}))\n }\n\n searchIP = () => {\n  if (this.state.data.ipam_network_id)\n   rest_call('api/ipam/address_find',{network_id:this.state.data.ipam_network_id}).then(result => this.setState({data:{...this.state.data, ip:result.ip}}))\n }\n\n render() {\n  if (!this.state.domains || !this.state.classes || !this.state.networks)\n   return <Spinner />\n  else\n   return (\n    <article className='info'>\n     <h1>Device Add</h1>\n     <InfoColumns key='dn_content'>\n      <TextInput key='hostname' id='hostname' value={this.state.data.hostname} placeholder='Device hostname' onChange={this.onChange} />\n      <SelectInput key='class' id='class' value={this.state.data.class} onChange={this.onChange}>{this.state.classes.map(row => <option key={'dn_class_'+row} value={row}>{row}</option>)}</SelectInput>\n      <SelectInput key='ipam_network_id' id='ipam_network_id' label='Network' value={this.state.data.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={'dn_net_'+idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n      <SelectInput key='a_domain_id' id='a_domain_id' label='Domain' value={this.state.data.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={'dn_dom_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      <TextInput key='ip' id='ip' label='IP' value={this.state.data.ip} onChange={this.onChange} />\n      <TextInput key='mac' id='mac' label='MAC' value={this.state.data.mac} onChange={this.onChange} />\n     </InfoColumns>\n     <StartButton key='dn_btn_start' onClick={() => this.addDevice()} title='Add device' />\n     <SearchButton key='dn_btn_search' onClick={() => this.searchIP()} title='Find available IP' />\n     <Result key='dn_result' result={this.state.result} />\n    </article>\n   )\n }\n}\n\n// ************** Discover **************\n//\nclass Discover extends Component {\n constructor(props){\n  super(props)\n  this.state = {ipam_network_id:undefined,a_domain_id:undefined,content:null}\n }\n\n componentDidMount(){\n  rest_call('api/ipam/network_list').then(result => this.setState({networks:result.data}))\n  rest_call('api/dns/domain_list',{filter:'forward'}).then(result => this.setState({domains:result.data}))\n }\n\n onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n changeContent = (elem) => this.setState({content:elem})\n\n Result(props){\n  return  <article className='code'><pre>{JSON.stringify(props.result,null,2)}</pre></article>\n }\n\n runDiscovery(){\n  this.setState({content:<Spinner />})\n  rest_call('api/device/discover',{network_id:this.state.ipam_network_id, a_domain_id:this.state.a_domain_id}).then(result => this.setState({content:<article className='code'><pre>{JSON.stringify(result,null,2)}</pre></article>}))\n }\n\n render() {\n  if (this.state.networks && this.state.domains){\n   return (\n    <Fragment key='dd_fragment'>\n     <article className='info'>\n      <h1>Device Discovery</h1>\n      <InfoColumns key='dd_content'>\n       <SelectInput key='ipam_network_id' id='ipam_network_id' label='Network' value={this.state.ipam_network_id} onChange={this.onChange}>{this.state.networks.map((row,idx) => <option key={'dd_net_'+idx} value={row.id}>{`${row.netasc} (${row.description})`}</option>)}</SelectInput>\n       <SelectInput key='a_domain_id' id='a_domain_id' label='Domain' value={this.state.a_domain_id} onChange={this.onChange}>{this.state.domains.map((row,idx) => <option key={'dd_dom_'+idx} value={row.id}>{row.name}</option>)}</SelectInput>\n      </InfoColumns>\n      <StartButton key='dd_btn_start' onClick={() => this.runDiscovery()} title='Start discovery' />\n     </article>\n     <NavBar key='dd_navigation' id='dd_navigation' />\n     {this.state.content}\n    </Fragment>\n   )\n  } else\n   return <Spinner />\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component {\n componentDidMount(){\n  rest_call('api/device/list', { extra:['system','type','mac','oui','class']}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.id,row.hostname,row.class,row.ip,row.mac,row.oui,row.model,row.oid,row.serial,StateMap({state:row.state})]\n\n render(){\n  return (!this.state) ? <Spinner /> : <ContentReport key='dev_cr' header='Devices' thead={['ID','Hostname','Class','IP','MAC','OUI','Model','OID','Serial','State']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** Type List **************\n//\nclass TypeList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/device/type_list').then(result => this.setState(result))\n }\n\n changeContent = (elem) => this.setState({content:elem});\n\n changeSelf = (elem) => this.props.changeSelf(elem);\n\n listItem = (row) => [row.base,<HrefButton text={row.name} onClick={() => this.changeSelf(<List key='device_list' field='type' search={row.name} />)} />,row.icon]\n\n render(){\n  return (this.state.data) ? <Fragment key='dev_tp_fragment'>\n   <ContentList key='dev_tp_cl' header='Device Types' thead={['Class','Name','Icon']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='dev_tp_cd'>{this.state.content}</ContentData>\n  </Fragment> : <Spinner />\n }\n}\n\n// ************** Model List **************\n//\nclass ModelList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/device/model_list').then(result => this.setState({...result,result:'OK'}))\n }\n\n syncModels = () => rest_call('api/device/model_list',{op:'sync'}).then(result => this.setState(result))\n\n listItem = (row) => [row.id,row.name,row.type,<Fragment key={'ml_' + row.id}>\n  <ConfigureButton key={'ml_btn_info_' + row.id} onClick={() => this.changeContent(<ModelInfo key={'model_info_'+row.id} id={row.id} />)} title='Edit model information' />\n  <DeleteButton key={'ml_btn_delete_' + row.id}  onClick={() => this.deleteList(row.id) } title='Delete model' />\n </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Really delete model?') && rest_call('api/device/model_delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return (this.state.data) ? <Fragment key='dev_ml_fragment'>\n   <ContentList key='dev_ml_cl' header='Device Models' thead={['ID','Model','Type','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n    <ReloadButton key='ml_btn_reload' onClick={() => this.componentDidMount()} />\n    <SyncButton key='_ml_btn_sync' onClick={() => this.syncModels() } title='Resync models' />\n   </ContentList>\n   <ContentData key='dev_ml_cd'>{this.state.content}</ContentData>\n  </Fragment> : <Spinner />\n }\n}\n\n// ************** Model Info **************\n//\nexport class ModelInfo extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:null, found:true};\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n updateInfo = () =>  rest_call('api/device/model_info',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n componentDidMount(){\n  rest_call('api/device/model_info',{id:this.props.id}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.data)\n   return (\n    <article className='info'>\n     <h1>Device Model</h1>\n     <InfoColumns key='dm_content'>\n      <TextLine key='name' id='name' text={this.state.data.name} />\n      <TextLine key='type' id='type' text={this.state.extra.type} />\n      <TextInput key='defaults_file' id='defaults_file' label='Default File' value={this.state.data.defaults_file} onChange={this.onChange} />\n      <TextInput key='image_file' id='image_file' label='Image  File' value={this.state.data.image_file} onChange={this.onChange} />\n     </InfoColumns>\n     <label className='info' htmlFor='parameters'>Parameters:</label>\n     <textarea className='info' id='parameters' name='parameters' onChange={this.onChange} value={this.state.data.parameters} />\n     <SaveButton key='dm_btn_save' onClick={() => this.updateInfo()} title='Save' />\n    </article>\n   );\n  else\n   return <Spinner />\n }\n}\n\n// ************** OUI Search **************\n//\nclass OUISearch extends Component {\n constructor(props){\n  super(props)\n  this.state = {data:{oui:''},content:null}\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n ouiSearch = () => {\n  rest_call('api/master/oui_info',{oui:this.state.data.oui}).then(result => this.setState({content:<article><div className='info col2'><label htmlFor='oui'>OUI:</label><span id='oui'>{result.data.oui}</span><label htmlFor='company'>Company:</label><span id='company'>{result.data.company}</span></div></article>}))\n }\n\n render() {\n  return (<div className='flexdiv'>\n   <article className='lineinput'>\n    <h1>OUI Search</h1>\n    <div>\n     <span>Type OUI or MAC address to find OUI/company name:<input type='text' id='oui' name='oui' required='required' onChange={this.onChange} value={this.state.data.oui} placeholder='00:00:00' /></span>\n     <SearchButton key='oui_btn_search' onClick={() => this.ouiSearch()} title='Search for OUI' />\n    </div>\n   </article>\n   {this.state.content}\n  </div>)\n }\n}\n\n// ************** OUI List **************\n//\nclass OUIList extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/master/oui_list').then(result => this.setState(result))\n }\n\n render(){\n  if (this.state.data)\n   return <article className='table'>\n    <h1>OUI</h1>\n    <div className='table'>\n     <div className='thead'>\n      <div>oui</div><div>company</div>\n     </div>\n     <div className='tbody'>\n      {this.state.data.map((row,index) => <div key={'tr_'+index}><div>{`${row.oui.substring(0,2)}:${row.oui.substring(2,4)}:${row.oui.substring(4,6)}`}</div><div>{row.company}</div></div>)}\n     </div>\n    </div>\n   </article>\n  else\n   return <Spinner />\n }\n}\n\n// ************** Function **************\n//\nclass Function extends Component {\n componentDidMount(){\n  rest_call('api/device/function',{op:this.props.op, id:this.props.id, type:this.props.type}).then(result => this.setState(result))\n }\n render() {\n  if (!this.state)\n   return <Spinner />\n  else if (this.state.status === 'OK'){\n   if(this.state.data.length > 0){\n    const head = Object.keys(this.state.data[0]);\n    return <ContentReport key='df_cr' thead={head} trows={this.state.data} listItem={(row) => head.map(hd => row[hd])} />\n   } else\n    return <article>No Data</article>\n  } else\n   return <article><b>Error in devdata: {this.state.info}</b></article>\n }\n}\n","import React, { Fragment, Component } from 'react';\nimport { rest_call } from './infra/Functions.js';\nimport { ContentData, ContentList, Result } from './infra/UI.jsx';\nimport { BackButton, DeleteButton, EditButton, FixButton, NetworkButton, ReloadButton, SaveButton, StartButton, StopButton, TextButton } from './infra/Buttons.jsx';\n\nimport { Info as DeviceInfo } from './device.jsx';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = <List key='viz_list' />\n }\n\n changeContent = (elem) => this.setState(elem)\n\n render(){\n  return  <Fragment key='main_base'>{this.state}</Fragment>\n }\n}\n\n// ************** List **************\n//\nexport class List extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/visualize/list')\n   .then((result) => { this.setState(result); })\n }\n\n listItem = (row) => [row.id,row.name,<Fragment key='vl_buttons'>\n  <EditButton key={'vl_btn_edt_'+row.id} onClick={() => this.changeContent(<Edit key={'viz_edit_'+row.id} id={row.id} changeSelf={this.changeContent} type='map' />)} title='Show and edit map' />\n  <NetworkButton key={'vl_btn_net_'+row.id} onClick={() => this.changeContent(<Show key={'viz_show_'+row.id} id={row.id} />)} />\n  <DeleteButton key={'vl_btn_del_'+row.id}  onClick={() => this.deleteList(row.id)} />\n </Fragment>]\n\n changeContent = (elem) => this.setState({content:elem})\n deleteList = (id) => (window.confirm('Delete map?') && rest_call('api/visualize/delete', {id:id}).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (row.id !== id)),content:null})))\n\n render(){\n  return <Fragment key='vl_fragment'>\n   <ContentList key='vl_cl' header='Maps' thead={['ID','Name','']} trows={this.state.data} listItem={this.listItem}>\n    <ReloadButton key='vl_btn_reload' onClick={() => this.componentDidMount() } />\n   </ContentList>\n   <ContentData key='vl_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** Show **************\n//\nclass Show extends Component {\n\n componentDidMount(){\n  var args = (this.props.hasOwnProperty('id')) ? {id:this.props.id}:{name:this.props.name};\n  rest_call('api/visualize/show',args)\n   .then(result => {\n    var nodes = new window.vis.DataSet(result.data.nodes);\n    var edges = new window.vis.DataSet(result.data.edges);\n    var network = new window.vis.Network(this.refs.show_canvas, {nodes:nodes, edges:edges}, result.data.options);\n    network.on('stabilizationIterationsDone', () => network.setOptions({ physics: false }))\n    network.on('doubleClick', (params) => this.doubleClick(params))\n   })\n }\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes);\n  if (params.nodes[0]){\n   rest_call('api/device/management',{id:params.nodes[0]}).then(result => {\n    if (result && result.status === 'OK'){\n     if(result.data.url && result.data.url.length > 0)\n      window.open(result.data.url);\n     else\n      window.open('ssh://' + result.data.username + '@' + result.data.ip,'_self');\n    }else\n     console.log('Data not ok:' + result)\n   })\n  }\n }\n\n render(){\n  return <article><div className='network' id='div_network' ref='show_canvas' /></article>\n }\n}\n\n// ************** Edit **************\n//\nexport class Edit extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:'network', physics_button:StartButton, found:true, data:{name:'N/A'}, result:''}\n  this.viz = {network:null,nodes:null,edges:null}\n  this.results = React.createRef();\n  this.edit = false;\n }\n\n componentDidMount(){\n  rest_call('api/visualize/network',{id:this.props.id,type:this.props.type})\n   .then((result) => {\n    this.viz.nodes = new window.vis.DataSet(result.data.nodes);\n    this.viz.edges = new window.vis.DataSet(result.data.edges);\n    result.data.options.physics.enabled = true;\n    this.viz.network = new window.vis.Network(this.refs.edit_canvas, {nodes:this.viz.nodes, edges:this.viz.edges}, result.data.options);\n    this.viz.network.on('stabilizationIterationsDone', () => this.viz.network.setOptions({ physics: false }))\n    this.viz.network.on('doubleClick', (params) => this.doubleClick(params))\n    this.viz.network.on('dragEnd', (params) => this.networkSync(params))\n    result.data.options.physics.enabled = false;\n    this.setState(result)\n  })\n }\n\n changeContent = (elem) => this.props.changeSelf(elem);\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n jsonHandler = (e) => {\n  var data = {...this.state.data}\n  try {\n   data[e.target.name] = JSON.parse(e.target.value);\n   this.setState({data:data})\n  } catch {\n   console.log('Error converting string to JSON')\n  }\n }\n\n updateInfo = () => rest_call('api/visualize/network',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n doubleClick = (params) => {\n  console.log('DoubleClick',params.nodes[0]);\n  if(this.props.changeSelf)\n   this.changeContent(<DeviceInfo key={'di_' + params.nodes[0]} id={params.nodes[0]} />)\n }\n\n toggleEdit = () => {\n  this.edit = !this.edit;\n  this.viz.network.setOptions({ manipulation:{ enabled:this.edit }})\n  this.setState({result:'Edit:'+this.edit});\n }\n\n toggleFix = () => {\n  this.viz.nodes.forEach((node,id) => this.viz.nodes.update({id:id,fixed:!(node.fixed)}) );\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get()}, result:'Fix/Unfix positions'})\n }\n\n togglePhysics = () => {\n  const data = this.state.data;\n  data.options.physics.enabled = !data.options.physics.enabled;\n  this.viz.network.setOptions({ physics:data.options.physics.enabled })\n  this.setState({data:data, physics_button:(data.options.physics.enabled) ? StopButton:StartButton, result:'Physics:'+data.options.physics.enabled})\n }\n\n networkSync = (params) => {\n  this.viz.network.storePositions();\n  this.setState({data:{...this.state.data, nodes:this.viz.nodes.get(), edges:this.viz.edges.get()}, result:'Moved ' + this.viz.nodes.get(params.nodes[0]).label})\n }\n\n showDiv = (id) => (id === this.state.content) ? 'network show' : 'hidden';\n\n render(){\n  const PhysicsButton = this.state.physics_button;\n  return(\n   <article className='network'>\n    <h1>Network Map</h1>\n    {(this.props.type === 'device') && (this.props.changeSelf) && <BackButton key='viz_back' onClick={() => this.changeContent(<DeviceInfo key={'di_'+this.props.id} id={this.props.id} />)} />}\n    <ReloadButton key='viz_reload' onClick={() => this.componentDidMount()} />\n    <EditButton key='viz_edit' onClick={() => this.toggleEdit()} />\n    <PhysicsButton key='viz_physics' onClick={() => this.togglePhysics()} />\n    <FixButton key='viz_fix' onClick={() => this.toggleFix()} />\n    <SaveButton key='viz_save' onClick={() => this.updateInfo()} />\n    <NetworkButton key='viz_net' onClick={() => this.setState({content:'network'})} />\n    <TextButton key='viz_opt' text='Options' onClick={() => this.setState({content:'options'})} />\n    <TextButton key='viz_nodes' text='Nodes' onClick={() => this.setState({content:'nodes'})} />\n    <TextButton key='viz_edges' text='Edges' onClick={() => this.setState({content:'edges'})} />\n    <label className='info' key='name' htmlFor='name'>Name:</label><input key='input_text_name' type='text' id='name' name='name' value={this.state.data.name} onChange={this.onChange} />\n    <Result key='viz_result' result={this.state.result} />\n    <div className={this.showDiv('network')} ref='edit_canvas' />\n    <div className={this.showDiv('options')}><textarea id='options' name='options' value={JSON.stringify(this.state.data.options,undefined,2)} onChange={this.jsonHandler}/></div>\n    <div className={this.showDiv('nodes')}><textarea id='nodes' name='nodes' value={JSON.stringify(this.state.data.nodes,undefined,2)} onChange={this.jsonHandler} /></div>\n    <div className={this.showDiv('edges')}><textarea id='edged' name='edges' value={JSON.stringify(this.state.data.edges,undefined,2)} onChange={this.jsonHandler} /></div>\n   </article>\n  )\n }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["multimedia.jsx"],"names":["Main","props","changeContent","elem","setState","content","reloadList","rest_call","then","result","deleteList","obj","window","confirm","file","deleted","data","state","filter","row","path","listItem","idx","key","onClick","Title","title","Lookup","Subtitles","undefined","ip","status","context","loadNavigation","this","header","thead","trows","Cleanup","Component","contextType","RimsContext","type","item","info","className","id","text","name","code"],"mappings":"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","file":"static/js/13.acff5f51.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { rest_call } from './infra/Functions.js';\nimport { Spinner, InfoColumns, RimsContext, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { TextLine } from './infra/Inputs.jsx';\nimport { NavBar, NavInfo } from './infra/Navigation.js';\nimport { DocButton, DeleteButton, InfoButton, ReloadButton, SearchButton } from './infra/Buttons.jsx';\n\n// ************* Main ************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:undefined,ip:undefined}\n }\n\n changeContent = (elem) => this.setState({content:elem});\n\n componentDidMount(){\n  rest_call('api/system/external_ip').then(result => {\n   const ip = (result && result.status === 'OK') ? result.ip : '0.0.0.0'\n   this.context.loadNavigation(<NavBar key='multimedia_navbar'><NavInfo key='mm_nav_ip' title={ip} /></NavBar>)\n  })\n  this.reloadList()\n }\n\n reloadList = () => rest_call('api/multimedia/list').then(result => this.setState(result));\n\n deleteList = (obj) => (window.confirm('Delete file '+obj.file+'?') && rest_call('api/multimedia/delete',obj).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (!(row.path === obj.path && row.file === obj.file))),content:null})));\n\n listItem = (row,idx) => [row.file,<Fragment key={'mm_buttons_'+idx}>\n   <InfoButton key={'mm_btn_info_'+idx} onClick={() => this.changeContent(<Title key={'multimedia_title_'+idx} path={row.path} file={row.file} />)} title='Title info' />\n   <SearchButton key={'mm_btn_lookup_'+idx} onClick={() => this.changeContent(<Lookup key={'multimedia_lookup_'+idx} path={row.path} file={row.file} />)} title='Lookup info' />\n   <DocButton key={'mm_btn_subs_'+idx} onClick={() => this.changeContent(<Subtitles key={'multimedia_subs_'+idx} path={row.path} file={row.file} />)} title='Subtitles' />\n   <DeleteButton key={'mm_btn_delete_'+idx} onClick={() => this.deleteList(row)} title='Delete file' />\n  </Fragment>]\n\n render(){\n  if(this.state.data)\n   return <Fragment key='mm_fragment'>\n    <ContentList key='mm_cl' header='Media files' thead={['File','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='mm_btn_reload' onClick={() => this.reloadList()} />\n     <DeleteButton key='mm_btn_cleanup' onClick={() => (window.confirm('Really clean up files?') && this.changeContent(<Cleanup key='multimedia_cleanup' />))} title='Cleanup multimedia directory' />\n    </ContentList>\n    <ContentData key='mm_cd'>{this.state.content}</ContentData>\n   </Fragment>\n  else\n   return <Spinner />\n }\n}\nMain.contextType = RimsContext;\n\n// ************* Cleanup ************\n//\nclass Cleanup extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/multimedia/cleanup').then(result => this.setState(result));\n }\n\n render(){\n   return (this.state.data) ? <ContentReport key='mm_clean_cr' header='delete' thead={['Type','Path','Item','Status','Info']} trows={this.state.data} listItem={(row) => [row.type,row.path,row.item,row.status,row.info]} /> : <Spinner />\n }\n}\n\n// ************* Title ************\n//\nclass Title extends Component {\n render(){\n  return <div>Title TODO</div>\n }\n}\n\n// ************* Lookup ************\n//\nclass Lookup extends Component {\n render(){\n  return <div>Lookup TODO</div>\n }\n}\n\n// ************* Subtitles ************\n//\nclass Subtitles extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/multimedia/check_srt',{path:this.props.path,file:this.props.file}).then(result => this.setState(result));\n }\n\n render(){\n  if (this.state.data) {\n   return <article className='info'>\n    <h1>{this.state.data.file}</h1>\n    <InfoColumns key='mm_sub_ic'>\n     <TextLine key='mm_sub_name' id='name' text={this.state.data.name} />\n     <TextLine key='mm_sub_code' id='code' text={this.state.data.code} />\n     <TextLine key='mm_sub_file' id='file' text={this.state.data.file} />\n    </InfoColumns>\n   </article>\n  } else\n   return <Spinner />\n }\n}\n"],"sourceRoot":""}
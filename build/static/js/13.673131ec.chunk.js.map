{"version":3,"sources":["multimedia.jsx"],"names":["Main","props","changeContent","elem","setState","content","reloadList","rest_call","then","result","deleteList","obj","window","confirm","file","deleted","data","state","filter","row","path","listItem","idx","key","onClick","Title","title","Lookup","Subtitles","undefined","ip","status","context","loadNavigation","this","header","thead","trows","Cleanup","rnd","Component","contextType","RimsContext","onChange","e","target","name","value","threadChange","checked","updateInfo","op","transferFile","thread","module","function","output","args","wait","processFile","className","htmlFor","id","JSON","stringify","info","seconds","text","prefix","suffix","label","dest","rename","aac_probe","changes","aac","audio","subtitle","srt","type","epside","episode","video","set_default","language","add","join","remove","add_aac","languages","code","item"],"mappings":"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","file":"static/js/13.673131ec.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { rest_call, rnd } from './infra/Functions.js';\nimport { Spinner, InfoColumns, RimsContext, ContentList, ContentData, ContentReport } from './infra/UI.jsx';\nimport { CheckboxInput, TextLine,TextInput } from './infra/Inputs.jsx';\nimport { NavBar, NavInfo } from './infra/Navigation.jsx';\nimport { DocButton, DeleteButton, InfoButton, ReloadButton, SearchButton, StartButton, SyncButton } from './infra/Buttons.jsx';\n\n// ************* Main ************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {content:undefined,ip:undefined}\n }\n\n changeContent = (elem) => this.setState({content:elem});\n\n componentDidMount(){\n  rest_call('api/system/external_ip').then(result => {\n   const ip = (result && result.status === 'OK') ? result.ip : '0.0.0.0'\n   this.context.loadNavigation(<NavBar key='multimedia_navbar'><NavInfo key='mm_nav_ip' title={ip} /></NavBar>)\n  })\n  this.reloadList()\n }\n\n reloadList = () => rest_call('api/multimedia/list').then(result => this.setState(result));\n\n deleteList = (obj) => (window.confirm('Delete file '+obj.file+'?') && rest_call('api/multimedia/delete',obj).then(result => result.deleted && this.setState({data:this.state.data.filter(row => (!(row.path === obj.path && row.file === obj.file))),content:null})));\n\n listItem = (row,idx) => [row.file,<Fragment key={'mm_buttons_'+idx}>\n   <InfoButton key={'mm_btn_info_'+idx} onClick={() => this.changeContent(<Title key={'multimedia_title_'+idx} path={row.path} file={row.file} />)} title='Title info' />\n   <SearchButton key={'mm_btn_lookup_'+idx} onClick={() => this.changeContent(<Lookup key={'multimedia_lookup_'+idx} path={row.path} file={row.file} />)} title='Lookup info' />\n   <DocButton key={'mm_btn_subs_'+idx} onClick={() => this.changeContent(<Subtitles key={'multimedia_subs_'+idx} path={row.path} file={row.file} />)} title='Subtitles' />\n   <DeleteButton key={'mm_btn_delete_'+idx} onClick={() => this.deleteList(row)} title='Delete file' />\n  </Fragment>]\n\n render(){\n  if(this.state.data)\n   return <Fragment key='mm_fragment'>\n    <ContentList key='mm_cl' header='Media files' thead={['File','']} trows={this.state.data} listItem={this.listItem} result={this.state.result}>\n     <ReloadButton key='mm_btn_reload' onClick={() => this.reloadList()} />\n     <DeleteButton key='mm_btn_cleanup' onClick={() => (window.confirm('Really clean up files?') && this.changeContent(<Cleanup key={'multimedia_cleanup_'+rnd()} />))} title='Cleanup multimedia directory' />\n    </ContentList>\n    <ContentData key='mm_cd'>{this.state.content}</ContentData>\n   </Fragment>\n  else\n   return <Spinner />\n }\n}\nMain.contextType = RimsContext;\n\n// ************* Title ************\n//\nclass Title extends Component {\n constructor(props){\n  super(props)\n  this.state = {thread:true,wait:null}\n }\n\n componentDidMount(){\n  rest_call('api/multimedia/check_title',{path:this.props.path,file:this.props.file}).then(result => this.setState(result));\n }\n\n onChange = (e) => this.setState({data:{...this.state.data, [e.target.name]:e.target.value}});\n\n threadChange = (e) => this.setState({[e.target.name]:e.target.checked});\n\n updateInfo = () => rest_call('api/multimedia/check_titlt',{op:'update', ...this.state.data}).then(result => this.setState(result))\n\n transferFile = () => {\n  if (window.confirm('Transfer file to repository?')){\n   if(this.state.thread)\n    rest_call('api/system/worker',{module:'multimedia',function:'transfer',output:true,args:{path:this.props.path,file:this.props.file}}).then(result => this.setState({op:'transfer',result:result}));\n   else {\n    this.setState({wait:<Spinner />})\n    rest_call('api/multimedia/transfer',{path:this.props.path,file:this.props.file}).then(result => this.setState({op:'transfer',result:result,wait:null}));\n   }\n  }\n }\n\n processFile = () => {\n  if (window.confirm('Process file?')){\n   if(this.state.thread)\n    rest_call('api/system/worker',{module:'multimedia',function:'process',output:true,args:{path:this.props.path,file:this.props.file,...this.state.data}}).then(result => this.setState({op:'process',result:result}));\n   else {\n    this.setState({wait:<Spinner />})\n    rest_call('api/multimedia/process',{path:this.props.path,file:this.props.file,...this.state.data}).then(result => this.setState({op:'process',result:result,wait:null}));\n   }\n  }\n }\n\n render(){\n  if (this.state.op) {\n   if(this.state.thread || this.state.op === 'transfer')\n    return <article className='info'>\n     <h1>{(this.state.thread) ? 'Task activation' : 'Transfer'}</h1>\n     <label className='info' htmlFor='res'>Result:</label><span id='res'>{JSON.stringify(this.state.result)}</span>\n    </article>\n   else {\n    if(this.state.result.status === 'NOT_OK')\n     return <article className='info'>\n      <h1>Process Error</h1>\n      <pre>{JSON.stringify(this.state.result.info,null,2)}</pre>\n     </article>\n    else {\n     const data = this.state.result.data;\n     return <article className='info'>\n      <h1>Process success</h1>\n      <span>Elapsed time for processing file: {this.state.result.seconds} seconds</span>\n      <InfoColumns key='mm_proc_ic'>\n       <TextLine key='mm_proc_prefix' id='prefix' text={data.prefix} />\n       <TextLine key='mm_proc_suffix' id='suffix' text={data.suffix} />\n       <TextLine key='mm_proc_dest' id='dest' label='Destination' text={JSON.stringify(data.dest)} />\n       <TextLine key='mm_proc_rename' id='rename' text={JSON.stringify(data.rename)} />\n       <TextLine key='mm_proc_aac' id='aac' label='Add AAC' text={JSON.stringify(data.aac_probe)} />\n       <TextLine key='mm_proc_chg_aac' id='chg_aac' label='Param AAC' text={data.changes.aac} />\n       <TextLine key='mm_proc_chg_aud' id='chg_aud' label='Param Audio' text={data.changes.audio} />\n       <TextLine key='mm_proc_chg_sub' id='chg_sub' label='Param Subtitles' text={data.changes.subtitle} />\n       <TextLine key='mm_proc_chg_srt' id='chg_srt' label='Param SRT files' text={data.changes.srt} />\n      </InfoColumns>\n     </article>\n    }\n   }\n  } else if(this.state.data){\n   const data = this.state.data\n   return <article className='info'>\n    <h1>Title</h1>\n    <InfoColumns key='mm_tit_ic'>\n     <TextLine key='mm_tit_type' id='type' text={data.type} />\n     <TextLine key='mm_tit_title' id='title' text={data.title} />\n     <TextLine key='mm_tit_path' id='path' text={data.path} />\n     <TextInput key='mm_tit_name' id='name' value={data.name} onChange={this.onChange} />\n     {data.epside && <TextInput key='mm_tit_eposide' id='episode' value={data.episode} onChange={this.onChange} />}\n     <TextInput key='mm_tit_info' id='info' value={data.info} onChange={this.onChange} />\n     <CheckboxInput key='mm_tit_thread' id='thread' label='Thread' value={this.state.thread} onChange={this.threadChange} title='Thread or direct execution' />\n    </InfoColumns>\n    <StartButton key='mm_tit_btn_proc' onClick={() => this.processFile()} title='Process file' />\n    <SyncButton key='mm_tit_btn_trans' onClick={() => this.transferFile()} title='Transfer file' />\n    {this.state.wait}\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Lookup ************\n//\nclass Lookup extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/multimedia/check_content',{path:this.props.path,file:this.props.file}).then(result => this.setState(result));\n }\n\n render(){\n  if (this.state.data) {\n   const data = this.state.data\n   return <article className='info'>\n    <h1>Lookup</h1>\n    <InfoColumns key='mm_lu_ic'>\n     <TextLine key='mm_lu_file' id='file' label='File' text={this.props.file} />\n     <TextLine key='mm_lu_status' id='status' label='Result' text={this.state.status} />\n     <TextLine key='mm_lu_error' id='error' label='Error' text={this.state.info} />\n     <TextLine key='mm_lu_v_def' id='video_default' label='Video default' text={JSON.stringify(!data.video.set_default)} title='Video stream has default language' />\n     <TextLine key='mm_lu_v_lang' id='video_lang' label='Video language' text={data.video.language} title='Language set in video stream information' />\n     <TextLine key='mm_lu_a_add' id='audio_add' label='Audio keep' text={data.audio.add.join()} />\n     <TextLine key='mm_lu_a_rem' id='audio_rem' label='Audio remove' text={data.audio.remove.join()} />\n     <TextLine key='mm_lu_a_aac' id='audio_aac' label='Add AAC' text={JSON.stringify(data.audio.add_aac)} />\n     <TextLine key='mm_lu_s_add' id='sub_add' label='Subtitle keep' text={data.subtitle.add.join()} />\n     <TextLine key='mm_lu_s_rem' id='sub_rem' label='Subtitle remove' text={data.subtitle.remove.join()} />\n     <TextLine key='mm_lu_a_lang' id='sub_lang' label='Subtitle languages' text={data.subtitle.languages.join()} />\n    </InfoColumns>\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Subtitles ************\n//\nclass Subtitles extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/multimedia/check_srt',{path:this.props.path,file:this.props.file}).then(result => this.setState(result));\n }\n\n render(){\n  if (this.state.data) {\n   return <article className='info'>\n    <h1>Extra subtitles</h1>\n    <InfoColumns key='mm_sub_ic'>\n     <TextLine key='mm_sub_path' id='path' text={this.props.path} />\n     <TextLine key='mm_sub_item' id='item' text={this.props.file} />\n     <TextLine key='mm_sub_name' id='name' text={this.state.data.name} />\n     <TextLine key='mm_sub_code' id='code' text={this.state.data.code} />\n     <TextLine key='mm_sub_file' id='file' text={this.state.data.file} />\n    </InfoColumns>\n   </article>\n  } else\n   return <Spinner />\n }\n}\n\n// ************* Cleanup ************\n//\nclass Cleanup extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/multimedia/cleanup').then(result => this.setState(result));\n }\n\n render(){\n   return (this.state.data) ? <ContentReport key='mm_clean_cr' header='delete' thead={['Type','Path','Item','Status','Info']} trows={this.state.data} listItem={(row) => [row.type,row.path,row.item,row.status,row.info]} /> : <Spinner />\n }\n}\n"],"sourceRoot":""}
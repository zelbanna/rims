{"version":3,"sources":["system.jsx"],"names":["Main","props","changeContent","elem","setState","content","compileNavItems","master","context","cookie","node","loadNavigation","key","title","onClick","changeImport","window","open","Controls","Error","Report","TaskReport","RestList","state","services","length","map","row","idx","name","ServiceInfo","navinfo","navitems","logs","rest_call","then","result","Object","assign","this","user_id","id","module","func","lib","Elem","Component","contextType","RimsContext","data","listItem","info","value","keys","sort","a","b","localeCompare","header","thead","trows","frequency","function","args","api","text","RestInfo","apilist","forEach","item","functions","push","information","className","index","RestExecute","JSON","stringify","op","seconds","FileList","mode","substr","src","path","alt","href","target","rel","files","hasOwnProperty","directory","fullpath","status","alert","cells","updateService","spinner","service","inactive","StartButton","StopButton","extra"],"mappings":"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","file":"static/js/19.b935265a.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { rest_call} from './infra/Functions.js';\nimport { Spinner, TableRow, RimsContext, ContentReport, ContentList, ContentData } from './infra/UI.jsx';\nimport { StartButton, StopButton, HrefButton } from './infra/Buttons.jsx';\nimport { NavBar, NavButton, NavDropDown, NavDropButton, NavInfo, NavReload } from './infra/Navigation.js';\n\n// ************** Main **************\n//\nexport class Main extends Component {\n constructor(props){\n  super(props)\n  this.state = {navinfo:[], navitems:[], logs:[], services:[] }\n }\n\n componentDidMount(){\n  rest_call('api/system/service_list').then(result => {\n   Object.assign(this.state,result)\n   this.compileNavItems()\n  })\n  rest_call('api/master/inventory',{node:this.context.cookie.node, user_id:this.context.cookie.id}).then(result => {\n   Object.assign(this.state,result)\n   this.compileNavItems()\n  })\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n changeImport(module,func){\n  import('./'+module+'.jsx').then(lib => {\n   var Elem = lib[func];\n   this.setState({content:<Elem key={module+'_'+func} />})\n  })\n }\n\n compileNavItems = () => {\n  const master = (this.context.cookie.node === 'master')\n  this.context.loadNavigation(<NavBar key='system_navbar'>\n   {master && <NavButton key='sys_nav_node' title='Nodes' onClick={() => this.changeImport('node','List')} />}\n   {master && <NavButton key='sys_nav_srv' title='Servers' onClick={() => this.changeImport('server','List')} />}\n   {master && <NavButton key='sys_nav_erd' title='ERD'     onClick={() => window.open('erd.pdf','_blank')} />}\n   {master && <NavButton key='sys_nav_user' title='Users'  onClick={() => this.changeImport('user','List')} />}\n   {master && <NavButton key='sys_nav_ctrl' title='Controls' onClick={() => this.changeContent(<Controls key='system_controls' />)} />}\n   <NavButton key='sys_nav_err' title='Error' onClick={() => this.changeContent(<Error key='system_error' />)} />\n   <NavDropDown key='sys_nav_reports' title='Reports'>\n    <NavDropButton key='sys_nav_sys' title='System' onClick={() => this.changeContent(<Report key='system_report' />)} />\n    <NavDropButton key='sys_nav_task' title='Tasks' onClick={() => this.changeContent(<TaskReport key='task_report' />)} />\n    {master && <NavDropButton key='sys_nav_act' title='Activities' onClick={() => this.changeImport('activity','Report')} />}\n    {master && <NavDropButton key='sys_nav_resv' title='Reservations' onClick={() => this.changeImport('reservation','Report')} />}\n    {master && <NavDropButton key='sys_nav_dev' title='Devices' onClick={() => this.changeImport('device','Report')} />}\n    {master && <NavDropButton key='sys_nav_inv' title='Inventory' onClick={() => this.changeImport('inventory','Report')} />}\n   </NavDropDown>\n   <NavButton key='sys_nav_rest' title='REST' onClick={() => this.changeContent(<RestList key='rest_list' />)} />\n   {this.state.services.length > 0 &&  <NavDropDown key='sys_nav_svcs' title='Services'>{this.state.services.map((row,idx) => <NavDropButton key={'sys_nav_svcs_'+idx} title={row.name} onClick={() => this.changeContent(<ServiceInfo key={row.name} {...row} /> )} />)}</NavDropDown>}\n   <NavReload key='sys_nav_reload' onClick={() => this.setState({content:null})} />\n   {this.state.navinfo.map((row,idx) => <NavInfo key={'sys_nav_ni_'+idx} title={row} />)}\n  </NavBar>)\n }\n\n render(){\n  return <Fragment key='main_base'>{this.state.content}</Fragment>\n }\n}\nMain.contextType = RimsContext;\n\n// ************** Error **************\n//\nclass Error extends Component{\n componentDidMount(){\n  rest_call(\"api/system/error\").then(result => this.setState(result));\n }\n\n render(){\n  return <div>{this.state.data}</div>\n }\n}\n\n// ************** Report **************\n//\nexport class Report extends Component{\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('system/report').then(result => this.setState({data:Object.keys(result).sort((a,b) => a.localeCompare(b)).map(key => ({info:key,value:result[key]})) }))\n }\n\n listItem = (row) => [row.info,row.value]\n\n render(){\n  return <ContentReport key='sys_cr' header='System Report' thead={['Key','Value']} trows={this.state.data} listItem={this.listItem} />\n }\n}\n\n// ************** TaskReport **************\n//\nexport class TaskReport extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/master/task_list',{node:this.context.cookie.node}).then(result => this.setState(result))\n }\n\n listItem = (row) => [row.node,row.frequency,row.module,row.function,row.args]\n\n render(){\n  return <ContentReport key='task_cr' header='Tasks' thead={['Node','Frequency','Module','Function','Arguments']} trows={this.state.data} listItem={this.listItem} />\n }\n}\nTaskReport.contextType = RimsContext;\n\n// ************** RestList **************\n//\nclass RestList extends Component {\n constructor(props){\n  super(props);\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/system/rest_explore')\n   .then((result) => {\n    var apilist = [];\n    result.data.forEach(item => item.functions.forEach(row => apilist.push({api:item.api, function:row})  ) );\n    this.setState({data:apilist});\n   })\n }\n\n listItem = (row) => [row.api,<HrefButton key={'rest_' + row.api} text={row.function} onClick={() => { this.changeContent(<RestInfo key={`rest_info_${row.api}_${row.function}`} {...row} />)}} />]\n\n changeContent = (elem) => this.setState({content:elem})\n\n render(){\n  return <Fragment key='rest_tp_fragment'>\n   <ContentList key='rest_tp_cl' header='REST API' thead={['API','Function']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='rest_tp_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** RestInfo **************\n//\nclass RestInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {}\n }\n\n componentDidMount(){\n  rest_call('api/system/rest_information',{api:this.props.api, function:this.props.function}).then(result => this.setState(result))\n }\n\n render() {\n  if (this.state.module && this.state.information) {\n   return(\n    <article className='text'>\n     <h1>API: {this.props.api}</h1>\n     {this.state.module.map((row,index) => {return <p key={'ria_'+index}>{row}</p> })}\n     <h1>Function: {this.props.function}</h1>\n     {this.state.information.map((row,index) => {return <p key={'rif_'+index}>{row}</p> })}\n    </article>\n   )\n  } else\n   return <Spinner />\n }\n}\n\n// ************************ REST Execute ********************\n//\nclass RestExecute extends Component {\n componentDidMount(){\n  rest_call('api/' + this.props.api,this.props.args).then(result => this.setState(result))\n }\n\n render(){\n  return (this.state) ? <article className='code'><h1>{this.props.text}</h1><pre>{JSON.stringify(this.state,null,2)}</pre></article> : <Spinner />\n }\n}\n\n// ************************ Controls ********************\n//\n// TODO: List should be dynamic from config and passed through REST engine\nclass Controls extends Component {\n constructor(props){\n  super(props);\n  this.state = {data:[\n   {api:'monitor/ipam_init',text:'IPAM status check'},\n   {api:'ipam/address_events',text:'IPAM clear status logs',args:{op:'clear'}},\n   {api:'monitor/interface_init',text:'Interface status check'},\n   {api:'device/network_info_discover',text:'Discover device system information (sysmac etc)'},\n   {api:'device/model_sync',text:'Sync device model mapping'},\n   {api:'device/vm_mapping',text:'VM UUID mapping'},\n   {api:'master/oui_fetch',text:'Sync OUI database'},\n   {api:'reservation/expiration_status',text:'Check reservation status'},\n   {api:'system/sleep',text:'Sleep Test', args:{seconds:10}}\n  ]}\n }\n\n changeContent = (elem) => this.setState({content:elem})\n\n listItem = (row) => [<HrefButton key={'ctrl_' + row.api} text={row.text} onClick={() => { this.changeContent(<RestExecute key={'rest_' + row.api} {...row} />)}} />]\n\n render(){\n  return <Fragment key='ctl_fragment'>\n   <ContentList key='ctl_cl' header='' thead={['API']} trows={this.state.data} listItem={this.listItem} />\n   <ContentData key='ctl_cd'>{this.state.content}</ContentData>\n  </Fragment>\n }\n}\n\n// ************** File List **************\n//\nexport class FileList extends Component {\n constructor(props){\n  super(props)\n  this.state = {files:null}\n  if (this.props.hasOwnProperty('directory')){\n   this.state.mode = 'directory'\n   this.state.args = {directory:this.props.directory}\n  } else if (this.props.hasOwnProperty('fullpath')){\n   this.state.mode = 'fullpath'\n   this.state.args = {fullpath:this.props.fullpath}\n  } else {\n   this.state.mode = 'images'\n   this.state.args = {}\n  }\n }\n\n componentDidMount(){\n  rest_call('api/system/file_list',this.state.args).then(result => {\n   if (result.status === 'OK')\n    this.setState(result)\n   else {\n    window.alert('Error retrieving files:' + result.info);\n    this.setState({files:[]})\n   }\n  })\n }\n\n listItem = (row) => {\n  if (this.state.mode === 'images')\n   return (row.substr(row.length - 4) === '.png') ? [row,<img src={this.state.path +'/'+row} alt={this.state.path +'/'+row} />] : []\n  else\n   return [<Fragment key={row}>{this.state.path + '/'}<a href={this.state.path + '/' + row} target='_blank' rel='noopener noreferrer'>{row}</a></Fragment>]\n }\n\n render() {\n  if (!this.state.files)\n   return <Spinner />\n  else\n   return (\n    <article className='files'>\n     <h1>{this.state.mode}</h1>\n     <div className='table'>\n      <div className='tbody'>\n      {this.state.files.map((row,index) => <TableRow key={'content_trow_files_'+index} cells={this.listItem(row)} /> )}\n      </div>\n     </div>\n    </article>\n   )\n }\n}\n\n// ************** Service Info **************\n//\nclass ServiceInfo extends Component {\n constructor(props){\n  super(props)\n  this.state = {state:'inactive'}\n }\n\n componentDidMount(){\n  this.updateService({})\n }\n\n updateService(args){\n  // Always do a reset (so do a spinner)\n  this.setState({spinner:<Spinner />})\n  rest_call('api/system/service_info',{service:this.props.service,...args}).then(result => {\n   if (result.status === 'OK')\n    this.setState({...result,spinner:null})\n   else\n    window.alert('Error retrieving service state:' + result.info);\n  })\n }\n\n render() {\n  const inactive = (this.state.state === 'inactive');\n  const Elem = (inactive) ? StartButton : StopButton;\n  return (\n   <article className='lineinput'>\n    <div>\n     <b>{this.props.name}</b>: {this.state.state} ({this.state.extra}) <Elem key={'state_change'} onClick={() => this.updateService({op:(inactive) ? 'start' : 'stop'})} title='Operate service' />\n    </div>\n    {this.state.spinner}\n   </article>\n   );\n }\n}\n"],"sourceRoot":""}